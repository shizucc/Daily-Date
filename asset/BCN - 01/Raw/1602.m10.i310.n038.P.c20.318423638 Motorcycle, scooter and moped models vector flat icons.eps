%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1602.m10.i310.n038.P.c20.318423638 Motorcycle, scooter and moped models vector flat icons.eps
%%Creator: Adobe Illustrator(R) 18.0
%%For: Саня
%%CreationDate: 2/25/2016
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.0.0 x18 R agm 4.7713 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c011 79.156289, 2014/03/31-23:39:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">450x450</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2016-02-25T20:02:09+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-02-25T20:02:09+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-02-25T20:02:08+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYqxrRbjXbfzVq9jq8qPbX5+u6GqkkpBCqW80ZqBSjenJQf78OK&#xA;WS4odirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVQ82oWMMjRSTosqqGaLkC4VqgHiP&#xA;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&#xA;uxV2KuxV2KuxV2KuxV//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:7cb9bd18-b222-354d-a99a-a7fe00ab57bd</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:7cb9bd18-b222-354d-a99a-a7fe00ab57bd</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:e7eb3138-40f1-44da-950c-4adb02edc881</stRef:instanceID>
            <stRef:documentID>xmp.did:2d9faa34-5187-8946-959a-0a2a6aca4161</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d3acaf87-427a-2b42-b45d-d2736ddeb51f</stEvt:instanceID>
                  <stEvt:when>2016-02-07T22:19:22+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7cb9bd18-b222-354d-a99a-a7fe00ab57bd</stEvt:instanceID>
                  <stEvt:when>2016-02-25T20:02:09+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 11.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
124.554 95.3579 mo
117.242 95.1969 111.445 89.1386 111.606 81.8265 cv
111.767 74.5144 117.825 68.7172 125.137 68.8782 cv
132.449 69.0393 138.247 75.0975 138.086 82.4096 cv
137.925 89.7217 131.866 95.5189 124.554 95.3579 cv
cp
125.277 62.5193 mo
114.453 62.2809 105.485 70.8624 105.247 81.6864 cv
105.009 92.5106 113.59 101.478 124.414 101.717 cv
135.238 101.955 144.206 93.3738 144.445 82.5496 cv
144.683 71.7255 136.102 62.7576 125.277 62.5193 cv
cp
.2 .2 .203922 rgb
f
33.1619 95.2139 mo
25.4339 95.0437 19.3071 88.6409 19.4772 80.9129 cv
19.6474 73.1849 26.0502 67.058 33.7782 67.2282 cv
41.5062 67.3984 47.6331 73.8012 47.4629 81.5292 cv
47.2927 89.2572 40.8899 95.3841 33.1619 95.2139 cv
cp
33.9262 60.5076 mo
22.4865 60.2557 13.0085 69.3253 12.7566 80.7649 cv
12.5047 92.2046 21.5743 101.683 33.0139 101.934 cv
44.4536 102.186 53.9316 93.1168 54.1835 81.6772 cv
54.4354 70.2375 45.3659 60.7595 33.9262 60.5076 cv
cp
f
125.311 61.0115 mo
118.296 60.857 112 64.1638 108.045 69.3615 cv
108.559 69.7703 109.099 70.1479 109.658 70.5044 cv
111.377 71.6013 113.599 71.447 115.147 70.1195 cv
119.605 66.2973 124.475 66.4041 127.555 66.4719 cv
130.339 66.5332 132.638 62.5227 132.638 62.5227 cv
130.362 61.6147 127.901 61.0685 125.311 61.0115 cv
cp
.8 .682353 .545098 rgb
f
40.75 80.5689 mo
38.5647 79.6877 li
38.082 79.4932 37.8484 78.944 38.043 78.4612 cv
38.2377 77.9785 38.7868 77.7449 39.2696 77.9396 cv
41.4548 78.8207 li
41.9376 79.0153 42.1711 79.5644 41.9765 80.0473 cv
41.7818 80.53 41.2327 80.7635 40.75 80.5689 cv
cp
41.0418 85.2714 mo
40.6007 85.5475 40.0191 85.4137 39.743 84.9724 cv
38.493 82.9751 li
38.2168 82.534 38.3506 81.9524 38.7918 81.6763 cv
39.2331 81.4001 39.8146 81.5339 40.0908 81.9752 cv
41.3408 83.9725 li
41.6169 84.4137 41.4831 84.9952 41.0418 85.2714 cv
cp
38.2203 88.0733 mo
38.1844 88.5925 37.7343 88.9844 37.2151 88.9484 cv
36.6958 88.9124 36.304 88.4624 36.3399 87.9431 cv
36.5026 85.5925 li
36.5385 85.0732 36.9887 84.6814 37.5079 84.7173 cv
38.0272 84.7533 38.419 85.2034 38.383 85.7227 cv
38.2203 88.0733 li
cp
35.5475 76.3004 mo
35.4213 75.7954 35.7282 75.2837 36.2332 75.1575 cv
38.519 74.5858 li
39.024 74.4595 39.5357 74.7665 39.6619 75.2714 cv
39.7882 75.7764 39.4813 76.2881 38.9763 76.4144 cv
36.6905 76.9861 li
36.1856 77.1123 35.6738 76.8054 35.5475 76.3004 cv
cp
35.0995 74.0959 mo
33.5862 75.9019 li
33.2519 76.3009 32.6575 76.3534 32.2585 76.0191 cv
31.8595 75.6848 31.8071 75.0904 32.1413 74.6914 cv
33.6546 72.8853 li
33.989 72.4863 34.5833 72.434 34.9823 72.7682 cv
35.3813 73.1025 35.4337 73.697 35.0995 74.0959 cv
cp
34.7988 87.7507 mo
33.2855 89.5567 li
32.9512 89.9557 32.3568 90.0082 31.9578 89.6738 cv
31.5588 89.3395 31.5064 88.7451 31.8407 88.3461 cv
33.3539 86.5401 li
33.6883 86.1412 34.2827 86.0887 34.6817 86.423 cv
35.0806 86.7573 35.133 87.3517 34.7988 87.7507 cv
cp
30.7069 87.2847 mo
28.4212 87.8563 li
27.9162 87.9825 27.4045 87.6756 27.2782 87.1706 cv
27.1519 86.6657 27.4589 86.154 27.9638 86.0276 cv
30.2496 85.456 li
30.7546 85.3297 31.2663 85.6367 31.3926 86.1416 cv
31.5189 86.6466 31.2119 87.1583 30.7069 87.2847 cv
cp
25.4853 83.6214 mo
25.0025 83.4267 24.769 82.8776 24.9637 82.3949 cv
25.1583 81.912 25.7074 81.6785 26.1902 81.8732 cv
28.3754 82.7543 li
28.8582 82.9489 29.0918 83.4981 28.8971 83.9808 cv
28.7024 84.4636 28.1533 84.6971 27.6705 84.5025 cv
25.4853 83.6214 li
cp
25.8983 77.1707 mo
26.3395 76.8946 26.921 77.0284 27.1972 77.4696 cv
28.4472 79.4669 li
28.7233 79.9081 28.5895 80.4897 28.1483 80.7658 cv
27.707 81.0419 27.1255 80.9082 26.8494 80.4669 cv
25.5993 78.4697 li
25.3232 78.0284 25.4571 77.4469 25.8983 77.1707 cv
cp
28.7198 74.3688 mo
28.7557 73.8496 29.2058 73.4577 29.7251 73.4937 cv
30.2443 73.5296 30.6362 73.9797 30.6002 74.499 cv
30.4375 76.8495 li
30.4016 77.3688 29.9515 77.7606 29.4322 77.7247 cv
28.9129 77.6888 28.5211 77.2387 28.5571 76.7194 cv
28.7198 74.3688 li
cp
33.6955 70.9819 mo
28.0407 70.8574 23.3555 75.3406 23.2309 80.9956 cv
23.1064 86.6504 27.5897 91.3356 33.2446 91.4602 cv
38.8995 91.5847 43.5847 87.1014 43.7092 81.4465 cv
43.8337 75.7916 39.3504 71.1065 33.6955 70.9819 cv
cp
.721569 .631373 .52549 rgb
f
132.254 81.4687 mo
130.069 80.5875 li
129.586 80.393 129.353 79.8438 129.547 79.361 cv
129.742 78.8783 130.291 78.6447 130.774 78.8394 cv
132.959 79.7204 li
133.442 79.9151 133.676 80.4642 133.481 80.947 cv
133.286 81.4298 132.737 81.6633 132.254 81.4687 cv
cp
132.546 86.1712 mo
132.105 86.4473 131.524 86.3134 131.247 85.8722 cv
129.997 83.8749 li
129.721 83.4338 129.855 82.8522 130.296 82.5761 cv
130.738 82.2999 131.319 82.4337 131.595 82.875 cv
132.845 84.8722 li
133.121 85.3135 132.987 85.895 132.546 86.1712 cv
cp
129.725 88.9731 mo
129.689 89.4923 129.239 89.8842 128.719 89.8482 cv
128.2 89.8122 127.808 89.3622 127.844 88.8429 cv
128.007 86.4923 li
128.043 85.973 128.493 85.5812 129.012 85.6171 cv
129.532 85.6531 129.923 86.1032 129.887 86.6225 cv
129.725 88.9731 li
cp
127.052 77.2002 mo
126.926 76.6952 127.233 76.1835 127.738 76.0572 cv
130.023 75.4856 li
130.528 75.3593 131.04 75.6663 131.166 76.1712 cv
131.293 76.6762 130.986 77.1879 130.481 77.3142 cv
128.195 77.8859 li
127.69 78.0121 127.178 77.7052 127.052 77.2002 cv
cp
126.604 74.9957 mo
125.091 76.8017 li
124.756 77.2007 124.162 77.2532 123.763 76.9189 cv
123.364 76.5845 123.312 75.9902 123.646 75.5912 cv
125.159 73.7851 li
125.493 73.3861 126.088 73.3337 126.487 73.668 cv
126.886 74.0023 126.938 74.5968 126.604 74.9957 cv
cp
126.303 88.6505 mo
124.79 90.4565 li
124.456 90.8555 123.861 90.9079 123.462 90.5736 cv
123.063 90.2393 123.011 89.6449 123.345 89.2459 cv
124.858 87.4399 li
125.193 87.041 125.787 86.9885 126.186 87.3228 cv
126.585 87.6571 126.637 88.2515 126.303 88.6505 cv
cp
122.211 88.1844 mo
119.926 88.7561 li
119.421 88.8823 118.909 88.5753 118.783 88.0704 cv
118.656 87.5655 118.963 87.0538 119.468 86.9274 cv
121.754 86.3558 li
122.259 86.2295 122.771 86.5365 122.897 87.0414 cv
123.023 87.5464 122.716 88.0581 122.211 88.1844 cv
cp
116.99 84.5212 mo
116.507 84.3265 116.273 83.7774 116.468 83.2946 cv
116.663 82.8118 117.212 82.5783 117.695 82.773 cv
119.88 83.6541 li
120.363 83.8487 120.596 84.3979 120.402 84.8806 cv
120.207 85.3634 119.658 85.5969 119.175 85.4022 cv
116.99 84.5212 li
cp
117.403 78.0705 mo
117.844 77.7944 118.425 77.9282 118.702 78.3694 cv
119.952 80.3667 li
120.228 80.8079 120.094 81.3895 119.653 81.6656 cv
119.211 81.9417 118.63 81.808 118.354 81.3667 cv
117.104 79.3694 li
116.828 78.9282 116.961 78.3466 117.403 78.0705 cv
cp
120.224 75.2686 mo
120.26 74.7494 120.71 74.3575 121.229 74.3934 cv
121.749 74.4294 122.141 74.8795 122.105 75.3988 cv
121.942 77.7493 li
121.906 78.2686 121.456 78.6604 120.937 78.6245 cv
120.417 78.5886 120.026 78.1385 120.062 77.6191 cv
120.224 75.2686 li
cp
125.2 71.8817 mo
119.545 71.7572 114.86 76.2404 114.735 81.8954 cv
114.611 87.5502 119.094 92.2354 124.749 92.36 cv
130.404 92.4845 135.089 88.0012 135.214 82.3463 cv
135.338 76.6914 130.855 72.0062 125.2 71.8817 cv
cp
f
74.4879 68.9279 mo
76.4752 76.6774 83.3714 82.8057 91.0856 82.9756 cv
98.7997 83.1454 99.3995 77.0922 101.446 69.3581 cv
104.457 57.9762 96.2862 52.3835 88.5721 52.2137 cv
80.8579 52.0438 71.168 55.982 74.4879 68.9279 cv
cp
.152941 .105882 .172549 rgb
f
71.4119 91.3147 mo
87.2368 91.6632 li
91.7038 91.7615 95.6968 88.8925 97.0288 84.6276 cv
99.6174 76.3387 li
78.2135 73.5531 li
78.2135 73.5531 69.3548 64.8654 71.7756 57.6768 cv
78.1466 42.3438 105.64 52.2575 105.64 52.2575 cv
105.64 52.2575 108.026 51.1152 108.105 47.5328 cv
108.169 44.6118 102.177 38.4466 91.0585 38.2017 cv
76.8306 37.8884 67.8502 48.0199 67.8502 48.0199 cv
57.9491 47.2326 li
55.8701 47.0672 54.0136 45.8676 53.0087 44.0401 cv
52.3072 42.7644 li
33.4445 43.1549 li
24.115 47.2857 li
33.0299 48.7389 42.1064 51.3827 51.4502 55.995 cv
58.7827 63.5727 65.3208 76.0622 71.4119 91.3147 cv
cp
.921569 .847059 .698039 rgb
f
81.6049 73.9944 mo
81.2187 91.5306 li
87.8258 91.6761 li
91.9439 91.7668 95.6253 89.1218 96.8532 85.1899 cv
99.6174 76.3386 li
81.6049 73.9944 li
cp
.372549 .294118 .333333 rgb
f
71.3717 51.0009 mo
70.5776 51.7059 69.5862 49.5761 70.0263 48.6462 cv
71.5002 45.5312 74.3827 43.0155 77.6422 41.0925 cv
71.431 43.9907 67.8501 48.0199 67.8501 48.0199 cv
57.9491 47.2326 li
55.8701 47.0672 54.0135 45.8675 53.0087 44.0401 cv
52.3072 42.7643 li
52.2344 42.7658 li
51.755 50.3279 61.8572 49.9974 66.9086 50.7133 cv
67.6636 50.8203 68.1057 51.2627 68.1688 52.0304 cv
68.4449 55.3876 69.4282 58.1338 70.5903 61.2116 cv
71.0638 62.4657 69.1623 63.0472 68.5161 62.0328 cv
63.6191 54.3465 52.9189 49.9228 44.4577 47.4546 cv
39.5686 46.0282 35.1782 44.6742 30.2253 44.5802 cv
24.1151 47.2857 li
32.6643 48.6793 41.365 51.1878 50.3049 55.4574 cv
57.9478 57.8438 63.1833 62.0308 68.4586 66.971 cv
68.6565 67.1564 71.8934 69.8098 71.374 71.097 cv
70.5233 73.205 68.0961 74.2247 65.9525 74.2628 cv
65.3358 74.2737 64.5142 74.1868 63.6108 74.0099 cv
63.8437 74.4599 64.0719 74.9394 64.3033 75.3983 cv
68.2341 75.7193 72.187 76.4977 75.419 78.8102 cv
79.0878 81.4353 80.7066 86.9627 80.657 91.5183 cv
81.2644 91.5316 li
81.3333 85.3157 84.6819 74.3949 78.7463 73.6224 cv
78.2135 73.5531 li
78.2135 73.5531 69.3548 64.8654 71.7756 57.6768 cv
78.1466 42.3438 105.64 52.2575 105.64 52.2575 cv
105.64 52.2575 109.129 54.1264 108.105 47.5328 cv
107.823 45.7214 85.2922 38.6439 71.3717 51.0009 cv
cp
.8 .682353 .545098 rgb
f
71.3717 51.0009 mo
70.4021 51.4339 69.5862 49.5761 70.0263 48.6462 cv
71.5002 45.5312 74.3827 43.0155 77.6422 41.0925 cv
71.431 43.9907 67.8501 48.0199 67.8501 48.0199 cv
57.9491 47.2326 li
55.8701 47.0672 54.0135 45.8675 53.0087 44.0401 cv
52.3072 42.7643 li
52.2344 42.7658 li
51.755 50.3279 61.8572 49.9974 66.9086 50.7133 cv
67.6636 50.8203 68.1057 51.2627 68.1688 52.0304 cv
68.4449 55.3876 68.5657 56.6035 69.7278 59.6813 cv
70.2012 60.9354 57.2903 46.5578 30.2253 44.5802 cv
24.1151 47.2857 li
32.6643 48.6793 41.365 51.1878 50.3049 55.4574 cv
58.4266 59.1689 69.9772 70.4074 69.7443 71.7758 cv
69.5277 73.0476 68.0961 74.2247 65.9525 74.2628 cv
65.3358 74.2737 64.5142 74.1868 63.6108 74.0099 cv
63.8437 74.4599 64.0719 74.9394 64.3033 75.3983 cv
68.2341 75.7193 72.187 76.4977 75.419 78.8102 cv
79.0878 81.4353 80.7066 86.9627 80.657 91.5183 cv
81.2644 91.5316 li
81.3333 85.3157 84.6819 74.3949 78.7463 73.6224 cv
78.2135 73.5531 li
78.2135 73.5531 69.3548 64.8654 71.7756 57.6768 cv
78.1466 42.3438 105.64 52.2575 105.64 52.2575 cv
105.64 52.2575 86.3609 44.3083 71.3717 51.0009 cv
cp
.152941 .105882 .172549 rgb
f
29.222 81.1275 mo
29.1701 83.4825 31.0372 85.4337 33.3922 85.4856 cv
35.7473 85.5374 37.6984 83.6703 37.7503 81.3153 cv
37.8022 78.9603 35.9351 77.0091 33.58 76.9572 cv
31.225 76.9054 29.2738 78.7725 29.222 81.1275 cv
cp
.2 .2 .203922 rgb
f
81.8711 82.2869 mo
36.1372 87.2304 li
29.9008 86.3982 li
29.2893 82.3149 li
35.5014 80.5267 li
80.5364 75.3371 li
81.8711 82.2869 li
cp
.556863 .505882 .458824 rgb
f
84.94 93.1486 mo
84.3745 93.1773 83.791 93.1125 83.2056 92.9093 cv
82.4191 92.6359 82.0024 91.7768 82.2758 90.9903 cv
82.5485 90.2045 83.409 89.7863 84.1948 90.0604 cv
85.0968 90.3722 86.3524 89.7039 87.459 89.0512 cv
94.4074 84.9515 li
95.1582 84.5086 95.8676 84.0907 96.4144 83.5631 cv
96.6413 83.3422 101.95 76.985 102.141 76.7762 cv
102.932 75.9133 103.827 74.9352 103.937 74.123 cv
104.056 73.2418 103.559 72.2246 102.947 71.0835 cv
98.945 63.6251 li
98.5509 62.8917 98.8266 61.9775 99.5601 61.5834 cv
100.294 61.1908 101.209 61.4657 101.602 62.1985 cv
105.605 69.6582 li
106.272 70.902 107.185 72.6052 106.926 74.5271 cv
106.69 76.2753 105.401 77.6826 104.366 78.8131 cv
104.19 79.0049 98.8375 85.4158 98.5079 85.7341 cv
97.706 86.5077 96.7676 87.0611 95.9401 87.5492 cv
88.9917 91.6481 li
88.0834 92.1845 86.5916 93.0647 84.94 93.1486 cv
cp
f
82.0627 91.4431 mo
81.8249 91.4378 81.5855 91.3766 81.3635 91.2531 cv
80.636 90.8475 80.3749 89.9293 80.7798 89.2017 cv
81.1632 88.5134 81.193 87.4926 81.2195 86.5917 cv
81.2645 85.0505 81.0452 77.3839 80.5364 75.3371 cv
80.2976 74.5084 77.7167 71.6758 76.477 70.3147 cv
74.5016 68.1464 73.9798 67.5281 73.7903 66.9023 cv
73.3249 65.3609 73.654 63.7597 74.6476 62.7217 cv
75.2242 62.1209 76.1784 62.1 76.78 62.6759 cv
77.3815 63.2526 77.4017 64.2068 76.8258 64.8083 cv
76.6148 65.0283 76.5458 65.4841 76.6488 65.9231 cv
76.9163 66.3186 77.9036 67.4024 78.7062 68.2832 cv
81.3517 71.1873 83.1119 73.1961 83.463 74.6091 cv
84.1179 77.2432 84.2718 85.373 84.2342 86.6794 cv
84.1993 87.8644 84.1565 89.3379 83.415 90.6693 cv
83.1328 91.175 82.6038 91.455 82.0627 91.4431 cv
cp
f
122.636 80.7956 mo
125.86 79.7391 li
117.046 52.8407 li
113.822 53.8972 li
122.636 80.7956 li
cp
.2 .2 .203922 rgb
f
109.887 55.4862 mo
113.63 55.3656 116.916 54.9679 120.173 53.8167 cv
120.769 53.6062 121.182 53.0259 121.178 52.3942 cv
121.157 48.5147 120.079 44.7316 118.626 40.9274 cv
118.368 40.2536 117.653 39.8535 116.943 39.9785 cv
112.75 40.7164 109.768 41.6193 107.527 42.9811 cv
106.348 43.3276 105.63 44.5786 105.87 45.8696 cv
107.649 53.5409 li
107.859 54.6741 108.808 55.521 109.887 55.4862 cv
cp
.372549 .294118 .333333 rgb
f
118.626 40.9274 mo
118.368 40.2535 117.653 39.8534 116.943 39.9785 cv
116.376 40.0783 115.835 40.182 115.31 40.2886 cv
119.059 54.1434 li
119.43 54.0321 119.804 53.9472 120.173 53.8167 cv
120.769 53.6062 121.182 53.0259 121.178 52.3942 cv
121.157 48.5147 120.079 44.7316 118.626 40.9274 cv
cp
.65098 .690196 .654902 rgb
f
119.562 75.025 mo
124.676 73.3493 li
115.862 46.4509 li
110.748 48.1266 li
119.562 75.025 li
cp
.882353 .854902 .784314 rgb
f
121.261 74.4684 mo
122.978 73.9058 li
114.164 47.0075 li
112.447 47.5701 li
121.261 74.4684 li
cp
.721569 .631373 .52549 rgb
f
81.0699 56.6528 mo
82.9896 55.7084 li
88.2592 66.4204 li
86.3395 67.3648 li
81.0699 56.6528 li
cp
.372549 .294118 .333333 rgb
f
77.5208 58.3987 mo
79.4969 57.4266 li
84.7665 68.1386 li
82.7905 69.1107 li
77.5208 58.3987 li
cp
f
89.0933 65.625 mo
87.1735 56.171 li
84.9747 57.2527 li
89.0933 65.625 li
cp
f
81.6513 69.286 mo
75.3339 61.9954 li
77.5327 60.9137 li
81.6513 69.286 li
cp
f
75.8832 60.7693 mo
85.9223 55.9216 li
86.7747 55.51 87.132 54.4852 86.7204 53.6328 cv
85.7521 51.6275 li
85.3405 50.7751 84.3157 50.4177 83.4633 50.8294 cv
73.4242 55.6771 li
72.5718 56.0887 72.2144 57.1135 72.6261 57.9659 cv
73.5944 59.9712 li
74.006 60.8236 75.0308 61.181 75.8832 60.7693 cv
cp
.556863 .505882 .458824 rgb
f
99.3372 57.055 mo
97.4609 56.0271 li
91.7249 66.4967 li
93.6011 67.5247 li
99.3372 57.055 li
cp
.372549 .294118 .333333 rgb
f
102.806 58.9555 mo
100.875 57.8973 li
95.1385 68.367 li
97.0699 69.4252 li
102.806 58.9555 li
cp
f
90.9266 65.6654 mo
93.2607 56.3051 li
95.4098 57.4825 li
90.9266 65.6654 li
cp
f
98.2002 69.6504 mo
104.832 62.645 li
102.683 61.4675 li
98.2002 69.6504 li
cp
f
104.338 61.3959 mo
94.5217 56.111 li
93.6882 55.6622 93.3763 54.6227 93.8251 53.7892 cv
94.8808 51.8285 li
95.3295 50.995 96.369 50.6831 97.2025 51.1319 cv
107.018 56.4169 li
107.852 56.8656 108.164 57.9051 107.715 58.7386 cv
106.659 60.6993 li
106.211 61.5328 105.171 61.8447 104.338 61.3959 cv
cp
.556863 .505882 .458824 rgb
f
86.2535 73.4159 mo
86.3181 70.4797 88.7508 68.1519 91.687 68.2165 cv
94.6232 68.2812 96.951 70.7139 96.8863 73.65 cv
96.8217 76.5862 94.389 78.9141 91.4528 78.8494 cv
88.5166 78.7847 86.1888 76.3521 86.2535 73.4159 cv
cp
f
88.0767 73.456 mo
88.1191 71.5268 89.7176 69.9972 91.6468 70.0397 cv
93.5761 70.0822 95.1056 71.6806 95.0631 73.6099 cv
95.0207 75.5392 93.4222 77.0687 91.493 77.0262 cv
89.5637 76.9837 88.0342 75.3853 88.0767 73.456 cv
cp
.152941 .105882 .172549 rgb
f
120.582 82.0241 mo
120.53 84.3792 122.397 86.3303 124.752 86.3822 cv
127.107 86.434 129.058 84.5669 129.11 82.2119 cv
129.162 79.8569 127.295 77.9057 124.94 77.8538 cv
122.585 77.802 120.634 79.6691 120.582 82.0241 cv
cp
.2 .2 .203922 rgb
f
108.642 47.6887 mo
108.597 49.7277 110.214 51.417 112.253 51.4619 cv
114.292 51.5068 115.981 49.8903 116.026 47.8512 cv
116.071 45.8122 114.454 44.1229 112.415 44.078 cv
110.376 44.0331 108.687 45.6496 108.642 47.6887 cv
cp
.152941 .12549 .137255 rgb
f
106.996 49.0932 mo
106.969 50.3316 107.951 51.3577 109.189 51.385 cv
110.428 51.4123 111.454 50.4304 111.481 49.1919 cv
111.508 47.9535 110.526 46.9274 109.288 46.9001 cv
108.049 46.8728 107.023 47.8547 106.996 49.0932 cv
cp
.792157 .733333 .701961 rgb
f
416.362 304.276 mo
407.901 304.276 401.041 297.417 401.041 288.956 cv
401.041 280.495 407.901 273.635 416.362 273.635 cv
424.823 273.635 431.682 280.495 431.682 288.956 cv
431.682 297.417 424.823 304.276 416.362 304.276 cv
cp
416.362 268.677 mo
405.162 268.677 396.083 277.756 396.083 288.956 cv
396.083 300.156 405.162 309.235 416.362 309.235 cv
427.562 309.235 436.641 300.156 436.641 288.956 cv
436.641 277.756 427.562 268.677 416.362 268.677 cv
cp
.2 .2 .203922 rgb
f
416.362 304.276 mo
407.901 304.276 401.041 297.417 401.041 288.956 cv
401.041 280.495 407.901 273.635 416.362 273.635 cv
424.823 273.635 431.682 280.495 431.682 288.956 cv
431.682 297.417 424.823 304.276 416.362 304.276 cv
cp
416.362 272.17 mo
407.091 272.17 399.576 279.685 399.576 288.956 cv
399.576 298.226 407.091 305.742 416.362 305.742 cv
425.632 305.742 433.148 298.226 433.148 288.956 cv
433.148 279.685 425.632 272.17 416.362 272.17 cv
cp
0 0 0 rgb
f
404.091 276.391 mo
405.724 277.873 408.215 277.643 409.663 275.979 cv
414.707 270.183 425.116 267.521 422.283 266.765 cv
414.579 264.707 406.043 266.776 400.123 272.79 cv
404.091 276.391 li
cp
.976471 .478431 .2 rgb
f
324.71 302.672 mo
317.135 302.672 310.994 296.531 310.994 288.956 cv
310.994 281.38 317.135 275.239 324.71 275.239 cv
332.285 275.239 338.426 281.38 338.426 288.956 cv
338.426 296.531 332.285 302.672 324.71 302.672 cv
cp
324.71 267.817 mo
313.036 267.817 303.572 277.281 303.572 288.956 cv
303.572 300.63 313.036 310.094 324.71 310.094 cv
336.384 310.094 345.848 300.63 345.848 288.956 cv
345.848 277.281 336.384 267.817 324.71 267.817 cv
cp
.2 .2 .203922 rgb
f
324.71 302.672 mo
317.135 302.672 310.994 296.531 310.994 288.956 cv
310.994 281.38 317.135 275.239 324.71 275.239 cv
332.285 275.239 338.426 281.38 338.426 288.956 cv
338.426 296.531 332.285 302.672 324.71 302.672 cv
cp
324.71 272.258 mo
315.488 272.258 308.012 279.734 308.012 288.956 cv
308.012 298.178 315.488 305.654 324.71 305.654 cv
333.932 305.654 341.408 298.178 341.408 288.956 cv
341.408 279.734 333.932 272.258 324.71 272.258 cv
cp
0 0 0 rgb
f
406.833 288.956 mo
406.833 294.218 411.099 298.484 416.362 298.484 cv
421.624 298.484 425.89 294.218 425.89 288.956 cv
425.89 283.693 421.624 279.427 416.362 279.427 cv
411.099 279.427 406.833 283.693 406.833 288.956 cv
cp
.486275 .47451 .360784 rgb
f
410.347 288.956 mo
410.347 292.278 413.04 294.971 416.362 294.971 cv
419.684 294.971 422.377 292.278 422.377 288.956 cv
422.377 285.634 419.684 282.941 416.362 282.941 cv
413.04 282.941 410.347 285.634 410.347 288.956 cv
cp
0 0 0 rgb
f
315.241 288.956 mo
315.241 294.185 319.481 298.425 324.71 298.425 cv
329.939 298.425 334.179 294.185 334.179 288.956 cv
334.179 283.726 329.939 279.487 324.71 279.487 cv
319.481 279.487 315.241 283.726 315.241 288.956 cv
cp
.486275 .47451 .360784 rgb
f
396.705 268.11 mo
413.569 293.297 li
417.631 290.409 li
400.767 265.222 li
396.705 268.11 li
cp
0 0 0 rgb
f
324.98 294.971 mo
362.273 294.971 li
370.522 282.941 li
324.98 282.941 li
321.672 282.941 318.965 285.648 318.965 288.956 cv
318.965 288.956 li
318.965 292.264 321.672 294.971 324.98 294.971 cv
cp
f
328.83 253.099 mo
336.126 253.31 344.397 254.234 352.283 256.837 cv
353.136 257.119 353.838 257.739 354.249 258.537 cv
355.611 261.185 li
356.489 262.338 357.837 263.01 359.265 263.006 cv
367.385 262.99 li
375.093 252.866 li
379.328 248.018 385.946 246.157 392.007 248.11 cv
407.141 253.872 li
394.886 283.78 li
391.488 292.072 383.415 297.489 374.453 297.489 cv
351.124 297.489 li
353.391 286.729 li
343.38 265.222 336.329 261.767 321.386 260.137 cv
324.523 255.345 li
325.471 253.897 327.099 253.049 328.83 253.099 cv
cp
.976471 .478431 .2 rgb
f
327.173 259.058 mo
330.962 255.191 li
324.639 255.191 li
324.601 255.244 324.558 255.291 324.523 255.345 cv
322.092 259.058 li
327.173 259.058 li
cp
.811765 0 0 rgb
f
353.391 286.729 mo
351.124 297.489 li
374.453 297.489 li
383.415 297.489 391.488 292.072 394.886 283.78 cv
406.73 254.875 li
406.73 254.875 341.749 266.872 353.391 286.729 cv
cp
.94902 .254902 .0941176 rgb
f
359.265 263.005 mo
357.838 263.009 356.489 262.338 355.611 261.185 cv
354.25 258.54 li
353.839 257.74 353.135 257.118 352.279 256.84 cv
350.975 256.417 349.659 256.047 348.34 255.704 cv
348.375 256.129 li
348.747 260.676 351.415 264.717 355.45 266.845 cv
355.45 266.845 li
359.217 268.83 363.871 267.735 366.357 264.278 cv
367.282 262.991 li
359.265 263.005 li
cp
.2 .2 .203922 rgb
f
358.907 294.971 mo
358.869 287.384 li
358.337 276.343 395.26 269.555 395.26 269.555 cv
390.215 282.092 li
387.083 289.873 379.537 294.971 371.149 294.971 cv
358.907 294.971 li
cp
f
367.057 279.855 mo
366.393 280.218 365.751 280.584 365.163 280.958 cv
365.163 293.708 li
367.057 293.708 li
367.057 279.855 li
cp
f
391.083 276.553 mo
391.972 274.344 li
381.001 274.344 li
377.749 275.333 374.557 276.443 371.688 277.657 cv
371.688 290.865 li
370.741 290.865 li
370.741 288.55 li
370.215 288.55 li
370.215 278.305 li
369.638 278.563 369.068 278.822 368.531 279.089 cv
368.531 293.708 li
371.148 293.708 li
377.822 293.708 383.851 290.327 387.353 284.867 cv
385.579 284.867 li
385.579 282.868 li
388.91 281.92 li
388.955 281.821 389.003 281.722 389.044 281.62 cv
389.558 280.342 li
385.684 280.342 li
389.982 279.29 li
390.574 277.816 li
385.684 277.816 li
391.083 276.553 li
cp
.486275 .47451 .360784 rgb
f
360.831 282.815 mo
359.534 284.242 358.791 285.766 358.869 287.384 cv
358.907 294.971 li
371.149 294.971 li
379.271 294.971 386.592 290.183 389.892 282.815 cv
360.831 282.815 li
cp
0 0 0 rgb
f
396.457 265.403 mo
412.55 261.427 li
413.342 261.231 413.915 260.507 413.869 259.691 cv
413.417 251.728 409.124 246.029 403.617 240.698 cv
392.935 241.504 li
391.868 241.585 391.406 242.894 392.185 243.628 cv
404.116 254.851 li
407.751 259.427 402.352 262.457 396.457 265.403 cv
cp
.94902 .254902 .0941176 rgb
f
413.179 255.27 mo
407.494 255.27 li
409.789 258.33 li
410.729 259.583 412.205 260.321 413.772 260.321 cv
413.772 260.321 li
413.842 260.123 413.881 259.912 413.869 259.691 cv
413.781 258.135 413.541 256.667 413.179 255.27 cv
cp
1 .827451 .552941 rgb
f
403.617 240.698 mo
394.223 241.407 li
407.832 253.369 li
412.709 253.685 li
411.003 248.67 407.634 244.586 403.617 240.698 cv
cp
.768627 .878431 .898039 rgb
f
408.73 251.665 mo
398.88 241.055 li
394.222 241.407 li
407.832 253.369 li
412.708 253.685 li
412.532 253.167 412.338 252.658 412.126 252.159 cv
408.73 251.665 li
cp
.643137 .760784 .741176 rgb
f
398.766 256.966 mo
398.766 258.177 399.747 259.158 400.958 259.158 cv
402.168 259.158 403.149 258.177 403.149 256.966 cv
403.149 255.756 402.168 254.775 400.958 254.775 cv
399.747 254.775 398.766 255.756 398.766 256.966 cv
cp
.2 .2 .203922 rgb
f
360.781 288.956 mo
360.781 290.166 361.762 291.147 362.972 291.147 cv
364.182 291.147 365.163 290.166 365.163 288.956 cv
365.163 287.746 364.182 286.765 362.972 286.765 cv
361.762 286.765 360.781 287.746 360.781 288.956 cv
cp
.486275 .47451 .360784 rgb
f
374.108 282.263 mo
374.108 285.053 376.37 287.314 379.159 287.314 cv
381.949 287.314 384.211 285.053 384.211 282.263 cv
384.211 279.473 381.949 277.212 379.159 277.212 cv
376.37 277.212 374.108 279.473 374.108 282.263 cv
cp
.690196 .701961 .631373 rgb
f
384.792 247.929 mo
390.683 247.929 li
390.683 247.009 li
384.792 247.009 li
384.792 247.929 li
cp
.486275 .47451 .360784 rgb
f
416.201 97.6568 mo
406.814 97.8503 399.048 90.398 398.855 81.0116 cv
398.661 71.6252 406.114 63.8591 415.5 63.6656 cv
424.886 63.4721 432.652 70.9244 432.846 80.3109 cv
433.039 89.6973 425.587 97.4633 416.201 97.6568 cv
cp
415.41 59.2952 mo
403.61 59.5385 394.241 69.3016 394.484 81.1017 cv
394.728 92.9018 404.491 102.27 416.291 102.027 cv
428.091 101.784 437.46 92.0209 437.216 80.2208 cv
436.973 68.4207 427.21 59.052 415.41 59.2952 cv
cp
.819608 .729412 .623529 rgb
f
416.134 94.4268 mo
408.532 94.5835 402.242 88.5475 402.085 80.945 cv
401.928 73.3425 407.964 67.0524 415.567 66.8957 cv
423.169 66.739 429.459 72.775 429.616 80.3774 cv
429.773 87.9799 423.737 94.27 416.134 94.4268 cv
cp
415.494 63.3559 mo
405.936 63.5529 398.348 71.4605 398.545 81.018 cv
398.742 90.5755 406.65 98.1636 416.207 97.9665 cv
425.765 97.7695 433.353 89.862 433.156 80.3045 cv
432.959 70.747 425.051 63.1589 415.494 63.3559 cv
cp
.701961 .643137 .556863 rgb
f
320.399 97.5121 mo
311.013 97.7056 303.247 90.2533 303.053 80.8668 cv
302.86 71.4804 310.312 63.7143 319.698 63.5208 cv
329.085 63.3273 336.851 70.7797 337.044 80.1661 cv
337.238 89.5525 329.786 97.3186 320.399 97.5121 cv
cp
319.608 59.1505 mo
307.808 59.3937 298.44 69.1568 298.683 80.9569 cv
298.926 92.7571 308.689 102.126 320.489 101.882 cv
332.289 101.639 341.658 91.8761 341.415 80.076 cv
341.172 68.2759 331.408 58.9072 319.608 59.1505 cv
cp
.819608 .729412 .623529 rgb
f
320.333 94.282 mo
312.73 94.4387 306.44 88.4027 306.283 80.8002 cv
306.127 73.1977 312.163 66.9077 319.765 66.7509 cv
327.368 66.5942 333.658 72.6302 333.814 80.2327 cv
333.971 87.8352 327.935 94.1253 320.333 94.282 cv
cp
319.692 63.2112 mo
310.135 63.4082 302.546 71.3158 302.743 80.8732 cv
302.941 90.4307 310.848 98.0188 320.406 97.8218 cv
329.963 97.6247 337.551 89.7172 337.354 80.1597 cv
337.157 70.6023 329.25 63.0141 319.692 63.2112 cv
cp
.701961 .643137 .556863 rgb
f
320.352 85.9575 mo
323.933 85.9575 351.878 87.3926 357.676 87.6924 cv
357.683 85.9248 357.563 82.1313 357.45 80.5952 cv
345.119 78.6172 322.396 75.0732 319.964 75.0732 cv
318.482 75.1035 317.128 75.6978 316.121 76.7471 cv
315.114 77.7964 314.576 79.1748 314.606 80.6289 cv
314.667 83.5684 317.106 85.9604 320.046 85.9604 cv
320.352 85.9575 li
cp
359.396 89.7842 mo
358.577 89.7417 li
358.233 89.7241 324.213 87.9575 320.352 87.9575 cv
320.046 87.9604 li
316.026 87.96 312.689 84.6895 312.606 80.6699 cv
312.565 78.6821 313.301 76.7969 314.678 75.3623 cv
316.055 73.9277 317.907 73.1147 319.896 73.0737 cv
319.896 73.0737 319.896 73.0737 319.896 73.0737 cv
323.227 73.0737 357.069 78.5083 358.509 78.7397 cv
359.107 78.8359 li
359.299 79.4121 li
359.545 80.1528 359.797 88.209 359.598 88.9897 cv
359.396 89.7842 li
cp
.419608 .388235 .427451 rgb
f
347.298 68.7184 mo
351.837 90.119 li
363.464 93.4935 li
365.184 93.9809 367.026 93.8979 368.748 93.2168 cv
370.208 92.639 371.446 91.608 372.38 90.345 cv
380.881 78.8496 li
384.197 74.3646 380.918 68.0253 375.342 68.1403 cv
358.43 68.4889 li
355.624 67.1544 li
347.298 68.7184 li
cp
.258824 .164706 .192157 rgb
f
422.273 58.5004 mo
420.043 57.8549 417.677 57.537 415.23 57.6025 cv
402.479 57.9436 392.528 68.8195 392.797 81.5726 cv
392.858 84.4317 392.926 87.0566 392.965 89.7063 cv
393.22 89.701 li
396.2 89.6396 398.337 86.9057 397.801 83.974 cv
397.523 82.4553 397.433 80.8696 397.554 79.2405 cv
398.195 70.6727 404.857 63.6117 413.374 62.4778 cv
414.927 62.271 416.449 62.2623 417.92 62.4287 cv
420.269 62.6944 422.322 60.8634 422.273 58.5005 cv
422.273 58.5004 li
cp
.258824 .0941176 .0823529 rgb
f
341.063 71.7989 mo
342.533 71.7686 li
339.196 62.8278 330.64 56.4071 320.622 56.5521 cv
318.175 56.5875 315.824 57.0027 313.622 57.7396 cv
313.671 60.1026 315.798 61.8474 318.134 61.4851 cv
319.596 61.2582 321.118 61.2042 322.678 61.3468 cv
328.161 61.848 332.976 64.8177 335.991 69.1308 cv
337.159 70.8006 339.026 71.8409 341.063 71.7989 cv
cp
f
394.265 61.013 mo
400.239 53.0625 li
400.696 52.4544 400.787 51.6458 400.475 50.9518 cv
398.488 46.8122 li
398.119 45.9899 397.184 45.5845 396.332 45.877 cv
382.464 49.4656 368.237 53.6023 353.775 58.5891 cv
352.514 59.0219 353.006 60.4362 354.339 60.4812 cv
392.524 61.846 li
393.205 61.869 393.855 61.5581 394.265 61.013 cv
cp
.439216 .231373 .172549 rgb
f
391.546 58.1225 mo
390.342 55.1544 389.199 52.1506 388.004 49.1712 cv
376.16 52.4059 365.128 55.789 354.505 59.4421 cv
392.559 60.8027 li
392.585 60.8029 li
392.245 59.8999 391.903 59.0021 391.546 58.1225 cv
cp
.647059 .34902 .156863 rgb
f
399.534 51.4034 mo
397.536 47.2401 li
397.421 46.9829 397.164 46.821 396.883 46.8268 cv
396.811 46.8282 396.74 46.8409 396.67 46.8648 cv
396.645 46.8735 396.619 46.8811 396.593 46.8878 cv
394.051 47.5456 391.551 48.2091 389.084 48.8782 cv
390.24 51.5419 391.243 54.3016 392.352 56.8847 cv
392.793 57.9139 393.259 58.9487 393.729 59.9876 cv
399.405 52.4351 li
399.633 52.131 399.678 51.7263 399.534 51.4034 cv
cp
.682353 .486275 .164706 rgb
f
320.051 75.0723 mo
319.937 75.0737 li
318.482 75.1035 317.128 75.6978 316.121 76.7471 cv
315.114 77.7964 314.576 79.1748 314.606 80.6289 cv
314.667 83.5684 317.106 85.96 320.046 85.9604 cv
320.161 85.959 li
321.615 85.9292 322.97 85.335 323.977 84.2856 cv
324.983 83.2368 325.521 81.8584 325.491 80.4043 cv
325.431 77.4644 322.99 75.0723 320.051 75.0723 cv
cp
320.046 87.9604 mo
316.026 87.96 312.689 84.6895 312.606 80.6699 cv
312.565 78.6821 313.301 76.7969 314.678 75.3623 cv
316.055 73.9277 317.907 73.1147 319.896 73.0737 cv
320.051 73.0723 li
324.071 73.0723 327.408 76.3428 327.491 80.3633 cv
327.532 82.3511 326.797 84.2358 325.42 85.6704 cv
324.043 87.105 322.19 87.918 320.202 87.959 cv
320.046 87.9604 li
cp
.258824 .0941176 .0823529 rgb
f
315.123 80.618 mo
315.179 83.3386 317.43 85.4986 320.15 85.4425 cv
322.871 85.3864 325.031 83.1355 324.975 80.4149 cv
324.919 77.6944 322.668 75.5344 319.947 75.5905 cv
317.227 75.6465 315.067 77.8975 315.123 80.618 cv
cp
f
410.765 80.9284 mo
410.821 83.649 413.072 85.8089 415.793 85.7529 cv
418.514 85.6968 420.673 83.4459 420.617 80.7253 cv
420.561 78.0048 418.31 75.8448 415.59 75.9009 cv
412.869 75.9569 410.709 78.2079 410.765 80.9284 cv
cp
f
351.879 91.0269 mo
363.25 94.2466 li
364.047 94.4722 364.868 94.5864 365.693 94.5864 cv
368.525 94.5864 371.223 93.2266 372.908 90.9487 cv
402.264 51.1377 li
399.525 44.7305 li
382.282 48.6055 363.477 54.7651 345.657 60.7603 cv
338.288 65.2324 330.741 71.4458 322.642 79.7144 cv
345.763 84.4375 li
346.043 84.4946 346.296 84.6421 346.484 84.8574 cv
351.879 91.0269 li
cp
365.693 97.1968 mo
364.628 97.1968 363.567 97.0493 362.539 96.7583 cv
350.796 93.4331 li
350.553 93.3643 350.335 93.2266 350.169 93.0361 cv
344.81 86.9067 li
319.788 81.7954 li
319.322 81.7002 318.945 81.3594 318.804 80.9063 cv
318.661 80.4526 318.777 79.958 319.105 79.6147 cv
328.041 70.2734 336.324 63.3511 344.43 58.4526 cv
344.511 58.4033 344.598 58.3628 344.688 58.3325 cv
362.979 52.1777 382.319 45.8428 400.02 41.9468 cv
400.624 41.8105 401.253 42.1309 401.5 42.7085 cv
404.957 50.7988 li
405.139 51.2241 405.082 51.7139 404.808 52.0859 cv
375.008 92.4995 li
372.831 95.4414 369.35 97.1968 365.693 97.1968 cv
cp
.439216 .231373 .172549 rgb
f
351.149 93.4824 mo
350.528 93.4824 349.978 93.0366 349.866 92.4033 cv
342.892 52.7661 li
342.767 52.0562 343.241 51.3799 343.95 51.2549 cv
344.662 51.1265 345.337 51.6035 345.462 52.314 cv
352.437 91.9512 li
352.562 92.6611 352.087 93.3374 351.378 93.4624 cv
351.301 93.4761 351.225 93.4824 351.149 93.4824 cv
cp
f
357.536 84.0664 mo
365.068 79.3171 li
359.422 64.4771 li
351.371 67.5402 li
357.536 84.0664 li
cp
.419608 .388235 .427451 rgb
f
347.981 69.7611 mo
363.106 64.0062 li
363.555 63.8353 363.78 63.3327 363.609 62.8836 cv
363.609 62.8836 li
363.438 62.4345 362.936 62.209 362.487 62.3799 cv
347.362 68.1348 li
346.913 68.3057 346.688 68.8083 346.858 69.2574 cv
346.858 69.2574 li
347.029 69.7065 347.532 69.932 347.981 69.7611 cv
cp
.65098 .686275 .654902 rgb
f
349.643 72.2938 mo
363.548 67.0029 li
363.997 66.8321 364.222 66.3295 364.051 65.8804 cv
364.051 65.8804 li
363.881 65.4313 363.378 65.2057 362.929 65.3766 cv
349.024 70.6675 li
348.575 70.8384 348.349 71.3409 348.52 71.79 cv
348.52 71.79 li
348.691 72.2391 349.194 72.4647 349.643 72.2938 cv
cp
f
351.206 74.6779 mo
363.965 69.823 li
364.414 69.6521 364.639 69.1496 364.469 68.7005 cv
364.469 68.7005 li
364.298 68.2514 363.795 68.0258 363.346 68.1967 cv
350.587 73.0516 li
350.138 73.2224 349.912 73.725 350.083 74.1741 cv
350.083 74.1741 li
350.254 74.6232 350.757 74.8487 351.206 74.6779 cv
cp
f
352.865 77.0252 mo
364.286 72.6798 li
364.735 72.5089 364.96 72.0063 364.789 71.5573 cv
364.789 71.5573 li
364.618 71.1082 364.116 70.8826 363.667 71.0535 cv
352.247 75.3989 li
351.797 75.5698 351.572 76.0724 351.743 76.5215 cv
351.743 76.5215 li
351.914 76.9706 352.416 77.1961 352.865 77.0252 cv
cp
f
354.457 79.3985 mo
364.674 75.5107 li
365.123 75.3398 365.349 74.8372 365.178 74.3881 cv
365.178 74.3881 li
365.007 73.939 364.505 73.7135 364.056 73.8844 cv
353.838 77.7722 li
353.389 77.9431 353.163 78.4457 353.334 78.8948 cv
353.334 78.8948 li
353.505 79.3439 354.008 79.5694 354.457 79.3985 cv
cp
f
374.517 82.0194 mo
366.347 79.2907 li
371.378 64.2306 li
379.547 66.9593 li
374.517 82.0194 li
cp
.419608 .388235 .427451 rgb
f
383.026 69.0387 mo
367.677 63.9119 li
367.222 63.7597 366.976 63.2668 367.128 62.8111 cv
367.128 62.8111 li
367.28 62.3553 367.773 62.1093 368.229 62.2615 cv
383.578 67.3882 li
384.033 67.5405 384.279 68.0333 384.127 68.4891 cv
384.127 68.4891 li
383.975 68.9448 383.482 69.1909 383.026 69.0387 cv
cp
.65098 .686275 .654902 rgb
f
381.47 71.6377 mo
367.359 66.9244 li
366.903 66.7721 366.657 66.2793 366.81 65.8235 cv
366.81 65.8235 li
366.962 65.3678 367.455 65.1217 367.91 65.2739 cv
382.022 69.9872 li
382.477 70.1395 382.723 70.6323 382.571 71.0881 cv
382.571 71.0881 li
382.419 71.5438 381.926 71.7899 381.47 71.6377 cv
cp
f
380.007 74.0841 mo
367.059 69.7592 li
366.603 69.607 366.357 69.1142 366.509 68.6584 cv
366.509 68.6584 li
366.661 68.2027 367.154 67.9566 367.61 68.1088 cv
380.558 72.4337 li
381.014 72.5859 381.26 73.0788 381.108 73.5345 cv
381.108 73.5346 li
380.955 73.9903 380.463 74.2364 380.007 74.0841 cv
cp
f
378.445 76.4979 mo
366.856 72.6268 li
366.4 72.4746 366.154 71.9817 366.306 71.526 cv
366.306 71.526 li
366.459 71.0702 366.951 70.8242 367.407 70.9764 cv
378.997 74.8475 li
379.452 74.9997 379.699 75.4926 379.546 75.9483 cv
379.546 75.9483 li
379.394 76.4041 378.901 76.6501 378.445 76.4979 cv
cp
f
376.953 78.9348 mo
366.584 75.4713 li
366.128 75.3191 365.882 74.8262 366.034 74.3705 cv
366.034 74.3705 li
366.187 73.9147 366.68 73.6687 367.135 73.8209 cv
377.505 77.2843 li
377.96 77.4366 378.206 77.9294 378.054 78.3852 cv
378.054 78.3852 li
377.902 78.8409 377.409 79.087 376.953 78.9348 cv
cp
f
357.337 85.1148 mo
357.433 89.7987 361.308 93.5175 365.992 93.4209 cv
370.676 93.3243 374.395 89.449 374.298 84.7651 cv
374.202 80.0812 370.327 76.3624 365.643 76.459 cv
360.959 76.5555 357.24 80.4309 357.337 85.1148 cv
cp
.419608 .388235 .427451 rgb
f
358.772 85.0852 mo
358.852 88.9764 362.072 92.0659 365.963 91.9857 cv
369.854 91.9054 372.943 88.6859 372.863 84.7947 cv
372.783 80.9035 369.564 77.814 365.672 77.8942 cv
361.781 77.9744 358.692 81.1939 358.772 85.0852 cv
cp
.65098 .686275 .654902 rgb
f
364.578 82.2243 mo
364.598 83.2332 365.433 84.0341 366.442 84.0134 cv
367.451 83.9926 368.252 83.1579 368.231 82.149 cv
368.21 81.1402 367.375 80.3392 366.367 80.36 cv
365.358 80.3808 364.557 81.2155 364.578 82.2243 cv
cp
.419608 .388235 .427451 rgb
f
367.138 90.0034 mo
372.04 90.9506 376.883 90.8428 381.669 89.7039 cv
382.749 89.6816 383.608 88.7873 383.585 87.7064 cv
383.54 85.4883 li
383.517 84.4074 382.623 83.5492 381.542 83.5715 cv
367.012 83.8711 li
365.931 83.8933 365.073 84.7877 365.095 85.8686 cv
365.141 88.0866 li
365.163 89.1675 366.057 90.0257 367.138 90.0034 cv
cp
.65098 .686275 .654902 rgb
f
379.387 86.6834 mo
379.401 87.368 379.968 87.9115 380.652 87.8974 cv
381.337 87.8833 381.88 87.3169 381.866 86.6323 cv
381.852 85.9478 381.286 85.4043 380.601 85.4184 cv
379.917 85.4325 379.373 85.9989 379.387 86.6834 cv
cp
.419608 .388235 .427451 rgb
f
366.666 86.9457 mo
366.68 87.6303 367.246 88.1738 367.931 88.1597 cv
368.615 88.1456 369.159 87.5792 369.145 86.8946 cv
369.131 86.21 368.564 85.6665 367.88 85.6806 cv
367.195 85.6947 366.652 86.2611 366.666 86.9457 cv
cp
f
371.21 88.4837 mo
377.538 88.3532 li
377.487 85.8742 li
371.159 86.0046 li
371.21 88.4837 li
cp
f
416.295 82.2988 mo
415.801 82.2988 415.328 82.0171 415.108 81.5381 cv
396.405 40.8154 li
396.104 40.1602 396.392 39.3853 397.046 39.0845 cv
397.703 38.7832 398.476 39.0708 398.776 39.7261 cv
417.479 80.4492 li
417.78 81.104 417.493 81.8789 416.839 82.1797 cv
416.662 82.2607 416.477 82.2988 416.295 82.2988 cv
cp
.439216 .231373 .172549 rgb
f
334.963 56.6156 mo
342.217 57.0644 347.966 55.1431 354.861 53.7432 cv
356.042 53.4345 356.723 52.2792 356.395 51.2235 cv
356.395 51.2235 li
356.067 50.1678 354.932 49.5868 353.849 49.8701 cv
347.9 51.4232 341.785 51.1373 335.711 50.1835 cv
334.605 50.0093 332.782 50.5691 332.817 52.2653 cv
332.841 53.4313 li
332.874 55.0053 333.392 56.3979 334.963 56.6156 cv
cp
.258824 .0941176 .0823529 rgb
f
393.019 41.6777 mo
390.896 41.6777 388.624 41.3076 386.571 40.0903 cv
383.636 38.3521 377.774 38.7256 369.614 41.1685 cv
368.927 41.376 368.196 40.9829 367.99 40.293 cv
367.783 39.6025 368.176 38.875 368.866 38.6685 cv
377.87 35.9712 384.273 35.6953 387.901 37.8452 cv
391.114 39.7495 395.25 38.9946 397.987 38.4956 cv
398.332 38.4331 li
399.045 38.3057 399.721 38.7759 399.849 39.4854 cv
399.977 40.1948 399.506 40.8735 398.797 41.0015 cv
398.455 41.0635 li
397.011 41.3271 395.085 41.6777 393.019 41.6777 cv
cp
.65098 .686275 .654902 rgb
f
420.245 58.0161 mo
418.625 57.7033 416.948 57.5565 415.23 57.6025 cv
414.594 57.6195 413.966 57.6699 413.345 57.7384 cv
413.344 57.7786 413.339 57.818 413.34 57.8585 cv
413.375 59.5595 414.952 60.9065 416.861 60.8672 cv
418.657 60.8301 420.108 59.5798 420.245 58.0161 cv
cp
.647059 .34902 .156863 rgb
f
383.855 64.919 mo
383.874 65.8318 384.629 66.5565 385.542 66.5377 cv
386.455 66.5188 387.179 65.7636 387.16 64.8509 cv
387.142 63.9381 386.386 63.2134 385.474 63.2323 cv
384.561 63.2511 383.836 64.0063 383.855 64.919 cv
cp
.419608 .388235 .427451 rgb
f
350.385 66.1706 mo
355.55 64.3956 li
355.921 64.2682 356.118 63.8645 355.991 63.4939 cv
355.51 62.094 li
355.382 61.7234 354.978 61.5262 354.608 61.6536 cv
349.443 63.4286 li
349.072 63.5559 348.875 63.9596 349.002 64.3302 cv
349.483 65.7301 li
349.611 66.1008 350.014 66.298 350.385 66.1706 cv
cp
f
356.083 89.5609 mo
355.438 84.1372 li
355.392 83.7481 355.039 83.4701 354.65 83.5163 cv
353.18 83.691 li
352.791 83.7372 352.513 84.0902 352.559 84.4793 cv
353.204 89.903 li
353.25 90.2921 353.603 90.5701 353.992 90.5239 cv
355.462 90.3492 li
355.851 90.303 356.129 89.95 356.083 89.5609 cv
cp
.65098 .686275 .654902 rgb
f
108.059 205.023 mo
102.728 205.023 98.4068 200.701 98.4068 195.37 cv
98.4068 190.04 102.728 185.718 108.059 185.718 cv
113.39 185.718 117.712 190.04 117.712 195.37 cv
117.712 200.701 113.39 205.023 108.059 205.023 cv
cp
108.059 180.23 mo
99.6976 180.23 92.9191 187.009 92.9191 195.37 cv
92.9191 203.732 99.6976 210.51 108.059 210.51 cv
116.421 210.51 123.199 203.732 123.199 195.37 cv
123.199 187.009 116.421 180.23 108.059 180.23 cv
cp
.2 .2 .203922 rgb
f
108.059 189.261 mo
104.685 189.261 101.95 191.996 101.95 195.37 cv
101.95 198.744 104.685 201.48 108.059 201.48 cv
111.433 201.48 114.168 198.744 114.168 195.37 cv
114.168 191.996 111.433 189.261 108.059 189.261 cv
cp
.682353 .623529 .545098 rgb
f
41.9213 205.023 mo
36.5904 205.023 32.2689 200.701 32.2689 195.37 cv
32.2689 190.04 36.5904 185.718 41.9213 185.718 cv
47.2521 185.718 51.5737 190.04 51.5737 195.37 cv
51.5737 200.701 47.2521 205.023 41.9213 205.023 cv
cp
41.9213 180.23 mo
33.5596 180.23 26.7812 187.009 26.7812 195.37 cv
26.7812 203.732 33.5596 210.51 41.9213 210.51 cv
50.2829 210.51 57.0613 203.732 57.0613 195.37 cv
57.0613 187.009 50.2829 180.23 41.9213 180.23 cv
cp
.2 .2 .203922 rgb
f
41.9213 189.261 mo
38.5473 189.261 35.8121 191.996 35.8121 195.37 cv
35.8121 198.744 38.5473 201.48 41.9213 201.48 cv
45.2952 201.48 48.0304 198.744 48.0304 195.37 cv
48.0304 191.996 45.2952 189.261 41.9213 189.261 cv
cp
.682353 .623529 .545098 rgb
f
108.702 197.202 mo
108.702 197.202 li
109.699 196.887 110.251 195.824 109.936 194.827 cv
94.4065 145.72 li
94.0913 144.723 93.028 144.171 92.0314 144.486 cv
92.0314 144.486 li
91.0349 144.801 90.4825 145.865 90.7976 146.861 cv
106.327 195.968 li
106.642 196.965 107.706 197.517 108.702 197.202 cv
cp
.337255 .309804 .352941 rgb
f
115.905 180.385 mo
107.914 173.024 99.3785 173.381 97.5622 182.14 cv
97.5531 182.184 97.5093 182.21 97.4804 182.245 cv
103.48 186.965 li
115.905 180.385 li
cp
.929412 .701961 .0941176 rgb
f
115.471 180.012 mo
108.324 173.693 100.867 173.534 98.2239 180.012 cv
115.471 180.012 li
cp
.94902 .858824 .352941 rgb
f
104.092 162.378 mo
92.3879 143.31 li
90.3094 143.31 li
88.9206 143.31 88.2289 144.746 88.7962 146.014 cv
102.415 176.445 80.5017 194.109 80.5017 194.109 cv
72.168 194.109 li
68.8857 194.109 66.2249 191.448 66.2249 188.166 cv
63.8343 164.426 li
42.7118 164.426 li
31.273 164.426 22 173.699 22 185.138 cv
22 185.138 li
22 190.377 25.6446 194.911 30.7611 196.036 cv
61.8422 202.874 li
77.6131 202.874 li
83.4898 202.874 86.1605 198.63 88.9354 194.611 cv
104.252 174.652 li
106.443 171.233 105.981 166.561 104.092 162.378 cv
cp
f
92.9508 170.247 mo
91.0337 185.606 80.5016 194.109 80.5016 194.109 cv
72.168 194.109 li
68.8857 194.109 66.2249 191.448 66.2249 188.166 cv
63.8343 164.426 li
62.4039 166.632 li
60.942 168.886 58.4382 170.247 55.7515 170.247 cv
35.0586 170.247 li
29.5842 170.247 24.5986 173.693 22.953 178.914 cv
22.295 181.002 21.9591 183.232 22.004 185.548 cv
22.1024 190.633 25.7946 194.944 30.7611 196.036 cv
61.8422 202.874 li
77.6131 202.874 li
83.4898 202.874 86.1604 198.63 88.9354 194.611 cv
104.252 174.652 li
104.261 174.639 104.269 174.626 104.277 174.613 cv
105.476 172.72 103.997 170.247 101.756 170.247 cv
92.9508 170.247 li
cp
.929412 .701961 .0941176 rgb
f
52.751 195.979 mo
31.7883 191.367 li
28.9173 190.735 26.8078 188.221 26.7819 185.282 cv
26.7036 176.432 33.8798 169.208 42.7119 169.208 cv
52.0147 169.208 li
57.2223 169.208 61.4439 173.429 61.4439 178.637 cv
61.8983 188.263 li
62.1321 193.219 57.5964 197.045 52.751 195.979 cv
cp
.94902 .858824 .352941 rgb
f
60.8933 175.487 mo
59.5955 171.831 56.1159 169.208 52.0147 169.208 cv
42.7119 169.208 li
37.5574 169.208 32.9799 171.679 30.0663 175.487 cv
60.8933 175.487 li
cp
1 1 .584314 rgb
f
54.3887 194.253 mo
53.9807 194.253 53.5671 194.207 53.1605 194.118 cv
32.1976 189.506 li
30.1814 189.062 28.7048 187.279 28.6871 185.265 cv
28.6536 181.501 30.0986 177.951 32.7554 175.271 cv
35.4132 172.59 38.9488 171.113 42.7119 171.113 cv
52.0147 171.113 li
56.1635 171.113 59.5386 174.488 59.5386 178.637 cv
59.995 188.353 li
60.068 189.906 59.52 191.378 58.4514 192.499 cv
57.3879 193.613 55.9072 194.253 54.3887 194.253 cv
cp
.929412 .701961 .0941176 rgb
f
40.5931 164.426 mo
65.2952 164.426 li
67.0556 164.426 68.4826 162.999 68.4826 161.239 cv
68.4826 161.239 li
68.4826 159.479 67.0556 158.052 65.2952 158.052 cv
45.3741 158.052 li
42.7336 158.052 40.5931 160.192 40.5931 162.833 cv
40.5931 164.426 li
cp
.2 .2 .203922 rgb
f
51.5885 190.878 mo
51.6105 190.878 li
51.9325 190.878 52.1935 190.617 52.1935 190.295 cv
52.1935 183.867 li
52.1935 183.545 51.9325 183.284 51.6105 183.284 cv
51.5885 183.284 li
51.2666 183.284 51.0056 183.545 51.0056 183.867 cv
51.0056 190.295 li
51.0056 190.617 51.2666 190.878 51.5885 190.878 cv
cp
.768627 .298039 0 rgb
f
48.9427 190.878 mo
48.9647 190.878 li
49.2866 190.878 49.5476 190.617 49.5476 190.295 cv
49.5476 183.867 li
49.5476 183.545 49.2866 183.284 48.9647 183.284 cv
48.9427 183.284 li
48.6207 183.284 48.3597 183.545 48.3597 183.867 cv
48.3597 190.295 li
48.3597 190.617 48.6207 190.878 48.9427 190.878 cv
cp
f
46.4183 190.878 mo
46.4403 190.878 li
46.7623 190.878 47.0233 190.617 47.0233 190.295 cv
47.0233 183.867 li
47.0233 183.545 46.7623 183.284 46.4403 183.284 cv
46.4183 183.284 li
46.0964 183.284 45.8354 183.545 45.8354 183.867 cv
45.8354 190.295 li
45.8354 190.617 46.0964 190.878 46.4183 190.878 cv
cp
f
99.6259 139.086 mo
99.2864 139.071 98.9441 139.06 98.5967 139.06 cv
92.3437 139.06 87.2749 141.634 87.2749 144.808 cv
87.2749 147.983 92.3437 150.556 98.5967 150.556 cv
98.9441 150.556 99.2864 150.546 99.6259 150.53 cv
99.6259 139.086 li
cp
.929412 .701961 .0941176 rgb
f
98.4413 143.569 mo
99.0956 143.569 99.6259 143.039 99.6259 142.385 cv
99.6259 139.086 li
99.2864 139.071 98.9441 139.06 98.5966 139.06 cv
93.1823 139.06 88.6622 140.991 87.5455 143.569 cv
98.4413 143.569 li
cp
.94902 .858824 .352941 rgb
f
97.5743 139.086 mo
97.5743 150.53 li
97.9116 150.546 98.2515 150.556 98.5966 150.556 cv
98.9441 150.556 99.2864 150.546 99.6259 150.53 cv
99.6259 139.086 li
99.2864 139.071 97.9116 139.071 97.5743 139.086 cv
cp
.2 .2 .203922 rgb
f
97.4804 165.276 mo
97.4804 166.305 98.3142 167.138 99.3426 167.138 cv
100.371 167.138 101.205 166.305 101.205 165.276 cv
101.205 164.248 100.371 163.414 99.3426 163.414 cv
98.3142 163.414 97.4804 164.248 97.4804 165.276 cv
cp
.929412 .564706 .0941176 rgb
f
35.8121 175.489 mo
35.8121 176.517 36.6459 177.351 37.6743 177.351 cv
38.7028 177.351 39.5365 176.517 39.5365 175.489 cv
39.5365 174.46 38.7028 173.627 37.6743 173.627 cv
36.6459 173.627 35.8121 174.46 35.8121 175.489 cv
cp
.768627 .298039 0 rgb
f
92.2285 146.97 mo
91.8174 146.97 91.4375 146.701 91.3154 146.286 cv
91.1582 145.755 91.1021 145.216 91.0479 144.695 cv
90.9507 143.759 90.8638 143.168 90.4829 142.864 cv
90.0645 142.53 89.2856 142.604 88.5259 142.708 cv
83.4199 143.412 li
82.8999 143.48 82.418 143.119 82.3462 142.598 cv
82.2744 142.077 82.6387 141.596 83.1602 141.524 cv
88.2661 140.82 li
89.1313 140.701 90.5791 140.503 91.6719 141.375 cv
92.7041 142.199 92.8311 143.42 92.9434 144.497 cv
92.9907 144.953 93.0356 145.384 93.1426 145.747 cv
93.292 146.251 93.0034 146.781 92.4985 146.93 cv
92.4087 146.957 92.3179 146.97 92.2285 146.97 cv
cp
.2 .2 .203922 rgb
f
84.6148 149.163 mo
91.2175 148.457 li
92.3479 148.336 93.1663 147.321 93.0454 146.191 cv
93.0454 146.191 li
92.9245 145.06 91.91 144.242 90.7796 144.363 cv
84.1769 145.069 li
83.0464 145.19 82.2281 146.205 82.349 147.335 cv
82.349 147.335 li
82.4699 148.465 83.4843 149.284 84.6148 149.163 cv
cp
f
261.405 98.3923 mo
256.043 98.3175 251.756 93.9094 251.83 88.5466 cv
251.905 83.1837 256.313 78.8968 261.676 78.9715 cv
267.039 79.0462 271.326 83.4543 271.251 88.8172 cv
271.176 94.1801 266.768 98.467 261.405 98.3923 cv
cp
261.753 73.4509 mo
253.341 73.3337 246.427 80.0578 246.31 88.4696 cv
246.193 96.8815 252.917 103.796 261.329 103.913 cv
269.74 104.03 276.655 97.306 276.772 88.8941 cv
276.889 80.4823 270.165 73.5681 261.753 73.4509 cv
cp
.486275 .478431 .419608 rgb
f
261.598 84.5527 mo
259.318 84.5209 257.443 86.3438 257.412 88.6243 cv
257.38 90.9048 259.203 92.7793 261.483 92.8111 cv
263.764 92.8429 265.638 91.0199 265.67 88.7394 cv
265.702 86.4589 263.879 84.5845 261.598 84.5527 cv
cp
.239216 .196078 .192157 rgb
f
192.211 98.3105 mo
186.848 98.2357 182.561 93.8276 182.636 88.4648 cv
182.711 83.1019 187.119 78.815 192.482 78.8897 cv
197.845 78.9644 202.131 83.3725 202.057 88.7354 cv
201.982 94.0983 197.574 98.3852 192.211 98.3105 cv
cp
192.559 73.3691 mo
184.147 73.2519 177.233 79.976 177.115 88.3878 cv
176.998 96.7997 183.722 103.714 192.134 103.831 cv
200.546 103.948 207.46 97.2242 207.577 88.8123 cv
207.695 80.4005 200.97 73.4863 192.559 73.3691 cv
cp
.486275 .478431 .419608 rgb
f
192.455 80.7999 mo
188.147 80.7399 184.606 84.1835 184.546 88.4914 cv
184.486 92.7993 187.93 96.3403 192.238 96.4003 cv
196.546 96.4603 200.086 93.0167 200.147 88.7088 cv
200.207 84.4009 196.763 80.8599 192.455 80.7999 cv
cp
.239216 .196078 .192157 rgb
f
273.661 76.5182 mo
267.925 68.6061 253.903 69.5138 248.541 76.977 cv
248.539 76.9793 248.542 76.9922 248.547 77.0134 cv
248.91 78.5846 250.3 79.7076 251.908 79.8231 cv
260.135 81.404 li
273.661 76.5182 li
cp
.564706 .537255 .917647 rgb
f
262.069 90.2766 mo
262.069 90.2766 li
263.066 89.9408 263.601 88.8607 263.266 87.8642 cv
246.718 38.7589 li
246.382 37.7624 245.302 37.2267 244.305 37.5626 cv
244.305 37.5626 li
243.309 37.8984 242.773 38.9785 243.109 39.975 cv
259.657 89.0803 li
259.993 90.0768 261.073 90.6124 262.069 90.2766 cv
cp
.337255 .27451 .447059 rgb
f
257.118 56.3053 mo
245.611 36.959 li
243.52 36.9298 li
242.224 36.9118 241.356 38.2405 241.873 39.4288 cv
255.33 70.3584 232.941 87.8963 232.941 87.8963 cv
224.557 87.7795 li
224.374 87.7769 224.192 87.7661 224.013 87.7475 cv
220.238 87.3538 218.03 83.2503 219.476 79.7414 cv
224.608 67.2906 li
225.506 65.1125 223.925 62.7151 221.57 62.6823 cv
196.545 62.3335 li
185.038 62.1732 174.374 66.5441 174.214 78.0516 cv
174.141 83.2843 li
174.11 85.4988 175.624 87.4365 177.78 87.9425 cv
214.046 96.4527 li
229.912 96.6738 li
235.824 96.7562 238.57 92.5245 241.418 88.5203 cv
257.107 68.6561 li
259.359 65.2465 258.96 60.5403 257.118 56.3053 cv
cp
.458824 .396078 .760784 rgb
f
232.939 90.1025 mo
232.93 90.1025 232.92 90.1025 232.91 90.1025 cv
232.922 89.2197 li
233.212 89.2485 233.52 89.1235 233.757 88.9385 cv
233.989 88.7563 256.778 70.3691 243.087 38.9004 cv
243.896 38.5483 li
257.872 70.6709 234.539 89.4473 234.302 89.6328 cv
233.914 89.9365 233.432 90.1025 232.939 90.1025 cv
cp
.337255 .27451 .447059 rgb
f
232.941 87.8963 mo
224.557 87.7795 li
224.374 87.7769 224.192 87.7661 224.013 87.7475 cv
220.366 87.3671 218.191 83.5246 219.352 80.1002 cv
216.912 85.6219 li
215.822 88.0858 217.603 90.8616 220.297 90.8992 cv
225.998 90.9786 li
228.652 91.0156 231.189 89.8894 232.941 87.8963 cv
232.941 87.8963 li
cp
f
179.391 76.8958 mo
179.144 77.8443 179.004 78.8275 179 79.84 cv
178.991 82.3714 181.083 84.5655 183.964 85.1496 cv
204.997 89.4144 li
209.251 90.277 213.311 87.9115 214.142 84.4459 cv
214.513 82.8998 214.874 81.3514 215.433 79.8632 cv
216.355 77.411 li
179.391 76.8958 li
cp
.384314 .239216 .721569 rgb
f
220.62 57.858 mo
200.898 57.5832 li
197.28 63.9471 li
223.737 64.3158 li
224.623 64.3281 225.351 63.6203 225.363 62.7349 cv
225.4 60.0785 223.277 57.8951 220.62 57.858 cv
cp
.239216 .196078 .192157 rgb
f
219.433 69.3864 mo
219.433 69.3864 li
219.993 69.3942 220.454 68.9463 220.462 68.3859 cv
220.478 67.2085 li
220.486 66.6482 220.038 66.1876 219.478 66.1798 cv
219.478 66.1798 li
218.917 66.172 218.457 66.6199 218.449 67.1803 cv
218.432 68.3576 li
218.425 68.918 218.873 69.3786 219.433 69.3864 cv
cp
f
214.913 69.3234 mo
214.913 69.3234 li
215.474 69.3312 215.934 68.8833 215.942 68.3229 cv
215.958 67.1456 li
215.966 66.5852 215.518 66.1246 214.958 66.1168 cv
214.958 66.1168 li
214.398 66.109 213.937 66.5569 213.929 67.1173 cv
213.913 68.2947 li
213.905 68.855 214.353 69.3156 214.913 69.3234 cv
cp
f
210.601 69.2633 mo
210.601 69.2633 li
211.162 69.2711 211.622 68.8232 211.63 68.2628 cv
211.646 67.0855 li
211.654 66.5251 211.206 66.0646 210.646 66.0567 cv
210.646 66.0567 li
210.086 66.0489 209.625 66.4968 209.617 67.0572 cv
209.601 68.2346 li
209.593 68.7949 210.041 69.2555 210.601 69.2633 cv
cp
f
241.63 23.2689 mo
241.63 23.2689 li
242.816 23.5046 243.969 22.734 244.205 21.5478 cv
244.756 18.7751 li
244.991 17.5889 244.221 16.4363 243.034 16.2007 cv
243.034 16.2007 li
241.63 23.2689 li
cp
f
245.61 39.1958 mo
245.582 39.1958 245.553 39.1929 245.523 39.187 cv
245.285 39.1392 245.13 38.9067 245.178 38.6675 cv
246.983 29.6626 li
247.068 29.2397 247.155 28.8022 247.105 28.3979 cv
247.064 28.0767 246.932 27.7471 246.803 27.4287 cv
243.808 19.9932 li
243.717 19.7671 243.826 19.5098 244.052 19.4189 cv
244.277 19.3257 244.535 19.437 244.626 19.6631 cv
247.621 27.0981 li
247.764 27.4517 247.926 27.8525 247.98 28.2886 cv
248.049 28.8354 247.942 29.3672 247.849 29.8359 cv
246.043 38.8413 li
246.001 39.0508 245.816 39.1958 245.61 39.1958 cv
cp
f
254.679 35.4832 mo
254.338 35.4628 250.464 35.3979 250.115 35.3931 cv
243.824 35.3054 238.689 37.8233 238.644 41.017 cv
238.6 44.2107 243.663 46.8708 249.954 46.9585 cv
250.303 46.9633 250.648 46.9573 250.989 46.9464 cv
254.679 35.4832 li
cp
.564706 .537255 .917647 rgb
f
237.709 42.7381 mo
244.361 42.1202 li
245.5 42.0144 246.337 41.0054 246.232 39.8664 cv
246.232 39.8664 li
246.126 38.7275 245.117 37.89 243.978 37.9958 cv
237.326 38.6137 li
236.187 38.7195 235.349 39.7285 235.455 40.8675 cv
235.455 40.8675 li
235.561 42.0064 236.57 42.8439 237.709 42.7381 cv
cp
.239216 .196078 .192157 rgb
f
180.467 60.5056 mo
197.214 60.739 li
200.789 54.4295 li
199.605 47.7428 li
199.624 46.3722 198.529 45.2455 197.158 45.2264 cv
188.882 45.1111 li
182.335 45.0199 176.954 50.2529 176.863 56.7995 cv
176.863 56.7995 li
176.835 58.8182 178.449 60.4775 180.467 60.5056 cv
cp
.384314 .239216 .721569 rgb
f
200.261 51.4472 mo
199.605 47.7428 li
199.624 46.3721 198.529 45.2455 197.158 45.2264 cv
188.882 45.1111 li
184.393 45.0485 180.453 47.4906 178.389 51.1424 cv
200.261 51.4472 li
cp
.458824 .396078 .760784 rgb
f
198.728 42.254 mo
198.728 42.254 li
200.769 42.2825 202.52 43.7161 202.95 45.7113 cv
204.347 52.1803 li
204.687 53.7581 203.472 55.2425 201.858 55.2201 cv
198.836 55.1779 li
196.606 44.8457 li
196.315 43.5005 197.352 42.2348 198.728 42.254 cv
cp
.239216 .196078 .192157 rgb
f
175.379 72.2472 mo
179.105 72.2991 li
180.802 66.0226 li
175.526 61.6925 li
175.379 72.2472 li
cp
.384314 .239216 .721569 rgb
f
175.379 72.2472 mo
173.227 72.2172 li
173.374 61.6625 li
175.526 61.6925 li
175.379 72.2472 li
cp
.960784 .25098 .152941 rgb
f
412.901 205.986 mo
403.193 205.986 395.323 198.116 395.323 188.408 cv
395.323 178.699 403.193 170.829 412.901 170.829 cv
422.61 170.829 430.48 178.699 430.48 188.408 cv
430.48 198.116 422.61 205.986 412.901 205.986 cv
cp
412.901 166.309 mo
400.697 166.309 390.803 176.203 390.803 188.408 cv
390.803 200.612 400.697 210.506 412.901 210.506 cv
425.106 210.506 435 200.612 435 188.408 cv
435 176.203 425.106 166.309 412.901 166.309 cv
cp
.101961 .113725 .121569 rgb
f
412.901 205.326 mo
403.558 205.326 395.983 197.751 395.983 188.408 cv
395.983 179.064 403.558 171.489 412.901 171.489 cv
422.245 171.489 429.82 179.064 429.82 188.408 cv
429.82 197.751 422.245 205.326 412.901 205.326 cv
cp
412.901 169.13 mo
402.255 169.13 393.624 177.761 393.624 188.408 cv
393.624 199.054 402.255 207.685 412.901 207.685 cv
423.548 207.685 432.179 199.054 432.179 188.408 cv
432.179 177.761 423.548 169.13 412.901 169.13 cv
cp
.721569 1 1 rgb
f
395.988 188.313 mo
396.039 179.014 403.59 171.489 412.901 171.489 cv
422.213 171.489 429.763 179.014 429.815 188.313 cv
432.176 188.313 li
432.125 177.71 423.516 169.13 412.901 169.13 cv
402.287 169.13 393.678 177.71 393.627 188.313 cv
395.988 188.313 li
cp
.670588 .592157 .447059 rgb
f
362.767 178.722 mo
362.767 181.891 365.336 184.46 368.505 184.46 cv
371.674 184.46 374.243 181.891 374.243 178.722 cv
374.243 175.553 371.674 172.984 368.505 172.984 cv
365.336 172.984 362.767 175.553 362.767 178.722 cv
cp
.270588 .282353 .278431 rgb
f
368.188 174.252 mo
367.857 174.252 367.524 174.29 367.198 174.364 cv
361.495 175.666 332.914 182.189 330.369 182.808 cv
327.232 183.571 325.301 186.743 326.063 189.88 cv
326.704 192.513 329.041 194.353 331.746 194.353 cv
331.747 194.353 331.747 194.353 331.747 194.353 cv
332.211 194.353 332.678 194.296 333.135 194.186 cv
335.528 193.603 359.384 186.209 369.529 183.058 cv
371.714 182.379 373.012 180.177 372.55 177.936 cv
373.572 177.57 li
372.52 177.788 li
372.095 175.739 370.273 174.252 368.188 174.252 cv
cp
331.747 196.503 mo
331.747 196.503 331.747 196.503 331.746 196.503 cv
328.046 196.503 324.85 193.988 323.974 190.388 cv
323.469 188.31 323.803 186.16 324.915 184.334 cv
326.026 182.507 327.783 181.224 329.861 180.718 cv
332.356 180.112 358.704 174.097 366.72 172.268 cv
367.203 172.157 367.697 172.101 368.188 172.101 cv
371.288 172.101 373.995 174.31 374.625 177.352 cv
373.603 177.719 li
374.655 177.501 li
375.343 180.832 373.413 184.104 370.168 185.111 cv
360.003 188.269 336.096 195.679 333.643 196.275 cv
333.021 196.427 332.382 196.503 331.747 196.503 cv
cp
f
431.403 170.244 mo
429.58 168.404 427.445 166.81 425.025 165.546 cv
412.41 158.958 396.807 164.159 390.148 176.737 cv
388.655 179.557 387.297 182.153 385.897 184.757 cv
386.148 184.89 li
389.086 186.447 392.654 184.942 393.722 181.794 cv
394.276 180.163 395.048 178.568 396.051 177.046 cv
401.325 169.041 411.652 165.774 420.569 169.291 cv
422.196 169.932 423.684 170.75 425.028 171.711 cv
427.173 173.244 430.168 172.574 431.403 170.244 cv
431.403 170.244 li
cp
.862745 .839216 .721569 rgb
f
331.816 206.03 mo
322.108 206.03 314.237 198.16 314.237 188.452 cv
314.237 178.743 322.108 170.873 331.816 170.873 cv
341.524 170.873 349.394 178.743 349.394 188.452 cv
349.394 198.16 341.524 206.03 331.816 206.03 cv
cp
331.816 166.353 mo
319.611 166.353 309.717 176.247 309.717 188.452 cv
309.717 200.656 319.611 210.55 331.816 210.55 cv
344.021 210.55 353.914 200.656 353.914 188.452 cv
353.914 176.247 344.021 166.353 331.816 166.353 cv
cp
.101961 .113725 .121569 rgb
f
331.816 205.37 mo
322.472 205.37 314.898 197.795 314.898 188.452 cv
314.898 179.108 322.472 171.534 331.816 171.534 cv
341.159 171.534 348.734 179.108 348.734 188.452 cv
348.734 197.795 341.159 205.37 331.816 205.37 cv
cp
331.816 169.175 mo
321.169 169.175 312.539 177.805 312.539 188.452 cv
312.539 199.098 321.169 207.729 331.816 207.729 cv
342.462 207.729 351.093 199.098 351.093 188.452 cv
351.093 177.805 342.462 169.175 331.816 169.175 cv
cp
.721569 1 1 rgb
f
314.902 188.357 mo
314.954 179.058 322.504 171.534 331.816 171.534 cv
341.128 171.534 348.678 179.058 348.729 188.357 cv
351.091 188.357 li
351.039 177.755 342.431 169.175 331.816 169.175 cv
321.201 169.175 312.592 177.755 312.541 188.357 cv
314.902 188.357 li
cp
.670588 .592157 .447059 rgb
f
315.478 168.907 mo
317.477 167.26 319.762 165.889 322.297 164.875 cv
335.512 159.592 350.511 166.338 355.87 179.523 cv
357.071 182.479 358.161 185.198 359.291 187.93 cv
359.027 188.037 li
355.948 189.291 352.55 187.434 351.804 184.194 cv
351.417 182.515 350.81 180.85 349.965 179.235 cv
345.524 170.74 335.579 166.449 326.353 169.05 cv
324.67 169.524 323.107 170.188 321.673 171.008 cv
319.385 172.318 316.472 171.349 315.478 168.907 cv
315.478 168.907 li
cp
.862745 .839216 .721569 rgb
f
326.518 188.452 mo
326.518 191.378 328.89 193.75 331.816 193.75 cv
334.742 193.75 337.114 191.378 337.114 188.452 cv
337.114 185.526 334.742 183.154 331.816 183.154 cv
328.89 183.154 326.518 185.526 326.518 188.452 cv
cp
.101961 .113725 .121569 rgb
f
407.429 188.582 mo
407.429 191.508 409.801 193.88 412.727 193.88 cv
415.653 193.88 418.025 191.508 418.025 188.582 cv
418.025 185.656 415.653 183.284 412.727 183.284 cv
409.801 183.284 407.429 185.656 407.429 188.582 cv
cp
f
412.887 189.187 mo
388.805 179.386 li
389.182 178.46 li
412.566 187.977 li
428.521 167.734 li
429.306 168.353 li
412.887 189.187 li
cp
.960784 .411765 .141176 rgb
f
363.512 188.436 mo
347.983 146.373 li
349.618 145.77 li
365.146 187.833 li
363.512 188.436 li
cp
.65098 .686275 .654902 rgb
f
363.085 188.543 mo
352.398 159.588 li
354.85 158.683 li
365.536 187.639 li
363.085 188.543 li
cp
.960784 .411765 .141176 rgb
f
412.728 189.889 mo
412.218 189.889 411.733 189.589 411.522 189.09 cv
392.962 145.086 li
392.682 144.421 392.993 143.655 393.658 143.375 cv
394.324 143.093 395.09 143.407 395.37 144.071 cv
413.931 188.074 li
414.211 188.739 413.899 189.505 413.234 189.786 cv
413.068 189.856 412.896 189.889 412.728 189.889 cv
cp
.65098 .686275 .654902 rgb
f
404.558 173.697 mo
391.884 143.65 li
395.094 142.296 li
407.768 172.343 li
404.558 173.697 li
cp
.960784 .411765 .141176 rgb
f
406.501 178.304 mo
403.203 170.487 li
406.413 169.132 li
409.711 176.949 li
406.501 178.304 li
cp
.101961 .113725 .121569 rgb
f
334.284 187.275 mo
363.918 187.275 li
394.752 153.507 li
394.418 152.504 li
357.662 166.801 li
350.423 171.014 338.975 182.446 334.284 187.275 cv
cp
364.494 189.889 mo
331.223 189.889 li
330.702 189.889 330.231 189.58 330.024 189.102 cv
329.817 188.624 329.913 188.069 330.27 187.689 cv
330.943 186.969 346.887 169.999 356.442 164.488 cv
356.499 164.455 356.56 164.427 356.621 164.402 cv
394.751 149.571 li
395.083 149.441 395.456 149.453 395.78 149.606 cv
396.104 149.758 396.352 150.037 396.464 150.376 cv
397.473 153.41 li
397.622 153.859 397.518 154.354 397.198 154.703 cv
365.459 189.463 li
365.211 189.734 364.861 189.889 364.494 189.889 cv
cp
.960784 .411765 .141176 rgb
f
351.326 154.047 mo
351.241 152.308 li
352.111 152.265 li
357.413 152.007 358.015 148.468 358.037 148.318 cv
358.168 147.464 li
359.879 147.703 li
359.763 148.559 li
359.756 148.61 358.99 153.674 352.195 154.005 cv
351.326 154.047 li
cp
.65098 .686275 .654902 rgb
f
343.951 149.017 mo
350.516 150.429 356.024 149.119 362.508 148.513 cv
363.628 148.336 364.404 147.192 364.246 146.023 cv
364.246 146.023 li
364.087 144.855 363.129 144.089 362.101 144.252 cv
356.461 145.143 350.913 144.051 345.494 142.252 cv
344.507 141.924 342.767 142.287 342.573 144.101 cv
342.439 145.347 li
342.258 147.031 342.545 148.583 343.951 149.017 cv
cp
.101961 .113725 .121569 rgb
f
393.186 145.016 mo
392.52 145.016 391.889 144.862 391.295 144.555 cv
388.84 143.286 387.4 139.612 386.327 131.875 cv
386.135 130.495 385.701 129.626 385.001 129.219 cv
383.123 128.129 378.806 129.852 374.997 131.374 cv
373.832 131.84 372.656 132.309 371.501 132.729 cv
370.771 132.991 369.968 132.617 369.703 131.888 cv
369.438 131.159 369.815 130.354 370.544 130.09 cv
371.672 129.681 372.818 129.222 373.955 128.768 cv
378.785 126.837 383.353 125.013 386.41 126.792 cv
387.886 127.649 388.793 129.229 389.106 131.489 cv
389.432 133.828 390.419 140.943 392.584 142.062 cv
392.766 142.156 393.318 142.441 394.578 141.789 cv
395.268 141.432 396.113 141.7 396.471 142.388 cv
396.827 143.076 396.559 143.923 395.871 144.28 cv
394.926 144.77 394.028 145.016 393.186 145.016 cv
cp
.65098 .686275 .654902 rgb
f
371.022 132.813 mo
370.449 132.813 369.91 132.458 369.703 131.888 cv
369.438 131.159 369.815 130.354 370.544 130.09 cv
371.672 129.681 372.819 129.222 373.957 128.768 cv
375.785 128.037 377.676 127.282 379.41 126.767 cv
380.148 126.548 380.934 126.968 381.155 127.712 cv
381.376 128.455 380.952 129.236 380.209 129.457 cv
378.599 129.936 376.85 130.634 374.998 131.374 cv
373.833 131.839 372.657 132.309 371.501 132.729 cv
371.343 132.786 371.182 132.813 371.022 132.813 cv
cp
.960784 .411765 .141176 rgb
f
378.82 166.324 mo
377.949 166.294 li
377.949 166.293 378.013 164.429 378.031 163.334 cv
378.043 162.654 378.321 162.116 378.795 161.859 cv
379.188 161.645 379.651 161.659 380.035 161.899 cv
380.49 162.184 380.734 162.716 380.706 163.361 cv
380.681 163.916 380.916 164.179 381.16 164.194 cv
381.385 164.212 381.646 164.019 381.68 163.569 cv
381.771 162.388 381.821 161.344 381.871 160.311 cv
381.93 159.101 381.99 157.849 382.116 156.423 cv
382.983 156.499 li
382.859 157.909 382.802 159.096 382.741 160.353 cv
382.69 161.394 382.64 162.446 382.549 163.636 cv
382.473 164.616 381.756 165.102 381.107 165.063 cv
380.459 165.023 379.784 164.461 379.836 163.322 cv
379.85 163 379.754 162.751 379.573 162.638 cv
379.461 162.567 379.324 162.562 379.211 162.624 cv
379.021 162.728 378.908 162.992 378.902 163.349 cv
378.884 164.45 378.82 166.324 378.82 166.324 cv
cp
.419608 .388235 .427451 rgb
f
375.676 174.095 mo
370.748 174.009 li
369.16 165.366 li
373.849 164.504 li
375.676 174.095 li
cp
f
376.091 164.582 mo
367.282 166.2 li
367.02 166.248 366.769 166.075 366.721 165.814 cv
366.721 165.814 li
366.673 165.552 366.846 165.301 367.108 165.253 cv
375.917 163.635 li
376.179 163.587 376.43 163.76 376.478 164.021 cv
376.478 164.021 li
376.526 164.283 376.353 164.534 376.091 164.582 cv
cp
.65098 .686275 .654902 rgb
f
376.032 166.258 mo
367.933 167.745 li
367.671 167.793 367.42 167.62 367.372 167.359 cv
367.372 167.359 li
367.324 167.097 367.497 166.846 367.759 166.798 cv
375.858 165.31 li
376.12 165.262 376.371 165.435 376.419 165.697 cv
376.419 165.697 li
376.467 165.959 376.294 166.21 376.032 166.258 cv
cp
f
375.977 167.835 mo
368.545 169.2 li
368.283 169.248 368.032 169.075 367.984 168.813 cv
367.984 168.813 li
367.936 168.551 368.109 168.3 368.371 168.252 cv
375.803 166.887 li
376.064 166.839 376.315 167.012 376.363 167.274 cv
376.363 167.274 li
376.411 167.536 376.238 167.787 375.977 167.835 cv
cp
f
375.865 169.422 mo
369.213 170.644 li
368.952 170.692 368.701 170.519 368.652 170.257 cv
368.652 170.257 li
368.604 169.995 368.778 169.744 369.039 169.696 cv
375.691 168.475 li
375.953 168.427 376.204 168.6 376.252 168.861 cv
376.252 168.861 li
376.3 169.123 376.127 169.374 375.865 169.422 cv
cp
f
375.793 171.002 mo
369.842 172.095 li
369.58 172.143 369.329 171.97 369.281 171.708 cv
369.281 171.708 li
369.233 171.447 369.406 171.196 369.668 171.148 cv
375.619 170.055 li
375.881 170.007 376.132 170.18 376.18 170.441 cv
376.18 170.441 li
376.228 170.703 376.055 170.954 375.793 171.002 cv
cp
f
376.071 174.534 mo
377.37 176.778 376.604 179.651 374.359 180.949 cv
372.115 182.248 369.243 181.482 367.944 179.237 cv
366.645 176.993 367.411 174.121 369.656 172.822 cv
371.9 171.523 374.772 172.289 376.071 174.534 cv
cp
.419608 .388235 .427451 rgb
f
375.384 174.932 mo
376.463 176.796 375.826 179.183 373.961 180.262 cv
372.097 181.341 369.711 180.704 368.631 178.839 cv
367.552 176.975 368.189 174.589 370.054 173.51 cv
371.918 172.43 374.305 173.067 375.384 174.932 cv
cp
.65098 .686275 .654902 rgb
f
371.815 175.244 mo
372.095 175.728 371.93 176.347 371.446 176.626 cv
370.963 176.906 370.344 176.741 370.064 176.258 cv
369.785 175.774 369.95 175.156 370.433 174.876 cv
370.916 174.596 371.535 174.761 371.815 175.244 cv
cp
.419608 .388235 .427451 rgb
f
372.836 179.661 mo
370.788 181.516 368.465 182.856 365.874 183.69 cv
365.356 183.99 364.693 183.813 364.393 183.295 cv
363.778 182.232 li
363.478 181.715 363.655 181.052 364.173 180.752 cv
371.136 176.723 li
371.653 176.423 372.316 176.6 372.616 177.118 cv
373.231 178.18 li
373.531 178.698 373.354 179.361 372.836 179.661 cv
cp
.65098 .686275 .654902 rgb
f
366.086 181.606 mo
366.276 181.934 366.164 182.354 365.836 182.544 cv
365.508 182.734 365.088 182.622 364.898 182.294 cv
364.708 181.965 364.82 181.546 365.148 181.356 cv
365.477 181.166 365.896 181.278 366.086 181.606 cv
cp
.419608 .388235 .427451 rgb
f
372.182 178.078 mo
372.372 178.406 372.26 178.826 371.932 179.016 cv
371.604 179.206 371.184 179.094 370.994 178.766 cv
370.804 178.438 370.916 178.018 371.244 177.828 cv
371.572 177.638 371.992 177.75 372.182 178.078 cv
cp
f
370.473 180.111 mo
367.441 181.865 li
366.753 180.678 li
369.785 178.923 li
370.473 180.111 li
cp
f
368.136 172.001 mo
368.39 172.439 368.24 172.999 367.803 173.252 cv
367.365 173.505 366.806 173.355 366.553 172.918 cv
366.299 172.481 366.449 171.921 366.886 171.668 cv
367.324 171.415 367.883 171.564 368.136 172.001 cv
cp
f
372.865 164.005 mo
369.896 164.574 li
369.683 164.615 369.477 164.475 369.436 164.262 cv
369.282 163.458 li
369.241 163.245 369.381 163.039 369.594 162.998 cv
372.563 162.429 li
372.776 162.388 372.982 162.528 373.023 162.741 cv
373.177 163.546 li
373.218 163.759 373.078 163.964 372.865 164.005 cv
cp
f
377.324 169.209 mo
377.523 166.192 li
377.537 165.976 377.724 165.812 377.94 165.826 cv
378.758 165.88 li
378.974 165.894 379.138 166.081 379.124 166.298 cv
378.925 169.314 li
378.911 169.531 378.724 169.695 378.508 169.68 cv
377.69 169.627 li
377.474 169.612 377.31 169.425 377.324 169.209 cv
cp
.65098 .686275 .654902 rgb
f
366.345 156.217 mo
366.292 159.292 li
367.478 160.12 li
369.093 161.247 371.157 161.511 373.003 160.825 cv
389.297 154.77 li
391.142 154.085 392.534 152.537 393.021 150.629 cv
393.378 149.227 li
387.212 146.32 li
385.752 145.631 384.076 145.56 382.563 146.122 cv
370.254 150.696 li
367.939 151.556 366.387 153.748 366.345 156.217 cv
cp
.862745 .839216 .721569 rgb
f
372.463 152.353 mo
372.969 153.714 li
381.201 150.655 li
380.695 149.294 li
372.463 152.353 li
cp
372.712 154.709 mo
372.649 154.709 372.588 154.696 372.53 154.67 cv
372.426 154.622 372.344 154.534 372.304 154.425 cv
371.495 152.248 li
371.411 152.023 371.526 151.772 371.752 151.688 cv
380.801 148.326 li
380.908 148.286 381.028 148.29 381.134 148.338 cv
381.238 148.387 381.32 148.475 381.36 148.583 cv
382.169 150.76 li
382.253 150.985 382.138 151.236 381.912 151.32 cv
372.863 154.682 li
372.814 154.7 372.764 154.709 372.712 154.709 cv
cp
.960784 .411765 .141176 rgb
f
366.682 159.612 mo
393.216 149.752 li
393.611 149.606 393.812 149.167 393.665 148.772 cv
393.665 148.772 li
393.518 148.378 393.08 148.177 392.685 148.324 cv
366.151 158.183 li
365.756 158.33 365.555 158.768 365.702 159.163 cv
365.702 159.163 li
365.849 159.557 366.287 159.758 366.682 159.612 cv
cp
.101961 .113725 .121569 rgb
f
321.33 162.422 mo
354.227 162.422 li
354.227 159.626 li
321.33 159.626 li
320.558 159.626 319.932 160.252 319.932 161.024 cv
319.932 161.024 li
319.932 161.796 320.558 162.422 321.33 162.422 cv
cp
.960784 .411765 .141176 rgb
f
330.374 188.779 mo
323.972 161.221 li
325.669 160.827 li
332.071 188.385 li
330.374 188.779 li
cp
f
374.78 172.977 mo
374.78 172.977 374.837 172.922 374.947 172.815 cv
375.081 172.691 375.322 172.483 375.615 172.296 cv
376.214 171.908 377.239 171.435 378.619 171.523 cv
379.3 171.572 380.067 171.772 380.79 172.244 cv
381.511 172.707 382.162 173.483 382.473 174.432 cv
382.551 174.684 382.605 174.875 382.654 175.193 cv
382.678 175.394 382.71 175.567 382.717 175.864 cv
382.739 176.402 382.691 176.877 382.587 177.378 cv
382.387 178.372 381.973 179.306 381.487 180.196 cv
380.994 181.081 380.429 181.934 379.85 182.771 cv
379.262 183.623 378.643 184.504 377.957 185.387 cv
376.576 187.134 374.932 188.949 372.735 190.295 cv
372.188 190.627 371.612 190.933 371.003 191.18 cv
370.7 191.307 370.393 191.428 370.073 191.521 cv
369.599 191.673 li
369.488 191.7 li
369.46 191.704 li
369.403 191.713 li
369.29 191.73 li
369.219 191.742 369.139 191.752 369.04 191.76 cv
368.486 191.804 li
368.011 191.825 li
367.074 191.858 li
366.453 191.88 365.829 191.901 365.203 191.923 cv
362.704 191.99 360.174 192.097 357.642 192.237 cv
356.373 191.591 355.12 194.375 353.854 193.716 cv
352.593 193.776 351.336 193.836 350.09 193.896 cv
347.597 194.021 345.144 194.121 342.771 194.185 cv
338.024 194.347 333.594 194.417 329.798 194.432 cv
326.001 194.456 322.838 194.412 320.624 194.359 cv
318.41 194.309 317.143 194.247 317.143 194.247 cv
317.191 187.64 li
317.191 187.64 318.454 187.616 320.665 187.574 cv
322.877 187.547 326.037 187.539 329.828 187.597 cv
333.619 187.646 338.042 187.747 342.779 187.922 cv
345.148 187.993 347.596 188.094 350.082 188.213 cv
351.326 188.267 352.578 188.321 353.836 188.376 cv
355.09 187.707 356.366 190.481 357.627 189.819 cv
360.153 189.925 362.681 189.987 365.161 189.954 cv
365.779 189.942 366.394 189.93 367.007 189.918 cv
367.914 189.877 li
368.716 189.826 li
368.771 189.825 368.841 189.816 368.92 189.802 cv
369.033 189.784 li
369.089 189.774 li
369.117 189.77 li
369.145 189.765 368.98 189.803 369.061 189.783 cv
369.452 189.651 li
369.715 189.573 369.967 189.462 370.216 189.349 cv
370.717 189.132 371.194 188.862 371.652 188.567 cv
373.483 187.375 374.951 185.714 376.235 184.048 cv
376.883 183.215 377.489 182.372 378.066 181.543 cv
378.649 180.697 379.208 179.922 379.652 179.157 cv
380.092 178.396 380.432 177.651 380.588 176.949 cv
380.673 176.608 380.709 176.237 380.704 175.957 cv
380.715 175.844 380.687 175.617 380.667 175.422 cv
380.657 175.347 380.619 175.158 380.584 175.041 cv
380.272 173.983 379.295 173.465 378.46 173.393 cv
377.611 173.303 376.944 173.573 376.557 173.804 cv
376.346 173.93 376.238 174.016 376.143 174.094 cv
376.029 174.196 375.97 174.249 375.97 174.249 cv
374.78 172.977 li
cp
.65098 .686275 .654902 rgb
f
401.507 138.222 mo
401.458 138.221 401.411 138.217 401.362 138.217 cv
397.834 138.217 394.975 140.353 394.975 142.988 cv
394.975 145.623 397.834 147.759 401.362 147.759 cv
401.411 147.759 401.458 147.755 401.507 147.754 cv
401.507 138.222 li
cp
.101961 .113725 .121569 rgb
f
401.362 138.217 mo
400.65 138.217 399.969 138.307 399.329 138.467 cv
399.329 147.508 li
399.969 147.669 400.65 147.759 401.362 147.759 cv
401.411 147.759 401.458 147.755 401.507 147.754 cv
401.507 138.222 li
401.458 138.221 401.411 138.217 401.362 138.217 cv
cp
.721569 1 1 rgb
f
399.329 143.005 mo
399.329 147.508 li
399.859 147.641 400.418 147.726 400.998 147.751 cv
401.197 147.556 401.308 147.447 401.507 147.252 cv
401.507 143.005 li
399.329 143.005 li
cp
.670588 .592157 .447059 rgb
f
33.1384 302.889 mo
25.563 302.889 19.4219 296.748 19.4219 289.172 cv
19.4219 281.597 25.563 275.456 33.1384 275.456 cv
40.7138 275.456 46.8548 281.597 46.8548 289.172 cv
46.8548 296.748 40.7138 302.889 33.1384 302.889 cv
cp
33.1384 268.034 mo
21.464 268.034 12 277.498 12 289.172 cv
12 300.847 21.464 310.311 33.1384 310.311 cv
44.8128 310.311 54.2767 300.847 54.2767 289.172 cv
54.2767 277.498 44.8128 268.034 33.1384 268.034 cv
cp
.2 .2 .203922 rgb
f
33.1384 302.273 mo
25.9033 302.273 20.038 296.407 20.038 289.172 cv
20.038 281.937 25.9033 276.072 33.1384 276.072 cv
40.3735 276.072 46.2387 281.937 46.2387 289.172 cv
46.2387 296.407 40.3735 302.273 33.1384 302.273 cv
cp
33.1384 273.224 mo
24.3305 273.224 17.1903 280.364 17.1903 289.172 cv
17.1903 297.98 24.3305 305.12 33.1384 305.12 cv
41.9463 305.12 49.0864 297.98 49.0864 289.172 cv
49.0864 280.364 41.9463 273.224 33.1384 273.224 cv
cp
0 0 0 rgb
f
122.79 302.889 mo
115.215 302.889 109.074 296.748 109.074 289.172 cv
109.074 281.597 115.215 275.456 122.79 275.456 cv
130.366 275.456 136.507 281.597 136.507 289.172 cv
136.507 296.748 130.366 302.889 122.79 302.889 cv
cp
122.79 268.034 mo
111.116 268.034 101.652 277.498 101.652 289.172 cv
101.652 300.847 111.116 310.311 122.79 310.311 cv
134.465 310.311 143.929 300.847 143.929 289.172 cv
143.929 277.498 134.465 268.034 122.79 268.034 cv
cp
.2 .2 .203922 rgb
f
122.79 302.273 mo
115.555 302.273 109.69 296.407 109.69 289.172 cv
109.69 281.937 115.555 276.072 122.79 276.072 cv
130.025 276.072 135.891 281.937 135.891 289.172 cv
135.891 296.407 130.025 302.273 122.79 302.273 cv
cp
122.79 273.224 mo
113.982 273.224 106.842 280.364 106.842 289.172 cv
106.842 297.98 113.982 305.12 122.79 305.12 cv
131.598 305.12 138.738 297.98 138.738 289.172 cv
138.738 280.364 131.598 273.224 122.79 273.224 cv
cp
0 0 0 rgb
f
114.262 289.172 mo
114.262 293.882 118.08 297.701 122.79 297.701 cv
127.5 297.701 131.319 293.882 131.319 289.172 cv
131.319 284.462 127.5 280.644 122.79 280.644 cv
118.08 280.644 114.262 284.462 114.262 289.172 cv
cp
.2 .2 .203922 rgb
f
116.775 289.172 mo
116.775 292.494 119.468 295.187 122.79 295.187 cv
126.112 295.187 128.805 292.494 128.805 289.172 cv
128.805 285.85 126.112 283.157 122.79 283.157 cv
119.468 283.157 116.775 285.85 116.775 289.172 cv
cp
0 0 0 rgb
f
25.5561 289.172 mo
25.5561 293.36 28.9508 296.754 33.1384 296.754 cv
37.3259 296.754 40.7206 293.36 40.7206 289.172 cv
40.7206 284.985 37.3259 281.59 33.1384 281.59 cv
28.9508 281.59 25.5561 284.985 25.5561 289.172 cv
cp
.2 .2 .203922 rgb
f
65.3987 282.044 mo
34.1048 286.048 li
33.5281 286.122 32.9906 286.38 32.5726 286.784 cv
27.9792 291.226 li
27.4006 291.786 27.7745 292.766 28.5788 292.798 cv
66.4741 293.311 li
65.3987 282.044 li
cp
0 0 0 rgb
f
28.8045 291.446 mo
33.255 287.142 li
33.5164 286.89 33.8589 286.725 34.2194 286.679 cv
64.4836 282.807 li
65.2362 288.303 li
28.8045 291.446 li
cp
.223529 .309804 .309804 rgb
f
108.776 269.718 mo
119.627 290.595 li
120.515 292.303 122.644 292.932 124.317 291.98 cv
124.317 291.98 li
125.902 291.077 126.491 289.083 125.649 287.465 cv
114.799 266.587 li
113.911 264.879 111.782 264.251 110.109 265.203 cv
110.109 265.203 li
108.523 266.105 107.935 268.099 108.776 269.718 cv
cp
f
54.3618 255.407 mo
68.4193 256.078 li
85.1118 247.587 li
94.3618 245.511 103.2 247.239 109.262 249.192 cv
121.685 266.754 li
122.032 267.156 122.2 267.682 122.15 268.211 cv
121.366 274.148 li
121.323 274.601 121.123 275.025 120.8 275.346 cv
100.439 295.573 li
99.12 296.924 97.2783 297.633 95.3943 297.515 cv
64.0672 295.561 li
62.5205 295.464 61.1084 294.648 60.2521 293.357 cv
57.6869 289.488 li
62.7382 277.554 li
76.6118 272.173 li
70.4994 264.654 li
52.2767 262.421 li
31.1384 255.92 li
29.6118 251.654 li
52.6357 251.654 li
52.6357 251.654 53.9508 254.609 54.3618 255.407 cv
cp
0 .52549 .231373 rgb
f
62.6956 277.654 mo
100.695 275.238 li
101.112 269.821 li
98.2515 265.388 li
70.4994 260.154 li
31.1384 255.92 li
52.2768 262.421 li
70.4994 264.654 li
76.6118 272.173 li
62.7383 277.554 li
62.6956 277.654 li
cp
0 0 0 rgb
f
54.3618 255.407 mo
68.4193 256.078 li
85.1118 247.587 li
87.6466 247.25 99.8159 250.462 106.497 252.504 cv
107.508 252.813 108.215 253.716 108.278 254.771 cv
108.31 255.304 li
108.374 256.366 107.575 257.283 106.514 257.367 cv
95.5304 258.227 li
121.685 266.754 li
122.032 267.156 122.2 267.682 122.15 268.211 cv
121.366 274.148 li
121.323 274.601 121.123 275.025 120.8 275.346 cv
100.439 295.573 li
99.12 296.924 97.2783 297.633 95.3943 297.515 cv
64.0672 295.561 li
62.5205 295.464 61.1084 294.648 60.2521 293.357 cv
90.3618 292.686 li
107.574 275.771 li
107.672 269.154 li
103.192 262.421 li
78.8618 255.92 li
70.4994 258.654 li
48.8618 256.821 li
47.0864 251.654 li
52.6357 251.654 li
52.6357 251.654 53.9508 254.609 54.3618 255.407 cv
cp
.290196 .839216 .298039 rgb
f
85.2368 247.582 mo
85.1995 247.585 85.1457 247.582 85.1118 247.587 cv
68.4193 256.078 li
68.3618 256.075 li
68.3618 258.473 li
70.4994 258.654 li
78.8618 255.92 li
85.2368 247.582 li
cp
.427451 .956863 .513726 rgb
f
95.5185 295.52 mo
65.4451 294.154 li
91.6226 293.897 li
109.062 276.336 li
109.195 269.154 li
104.362 261.654 li
118.956 266.373 li
119.375 273.959 li
99.0288 294.154 li
98.1684 295.035 96.999 295.528 95.7978 295.528 cv
95.705 295.528 95.6118 295.525 95.5185 295.52 cv
cp
0 .647059 .223529 rgb
f
92.3606 293.154 mo
91.6226 293.897 li
65.4452 294.154 li
95.5185 295.52 li
95.6118 295.525 95.705 295.528 95.7978 295.528 cv
96.999 295.528 98.1684 295.035 99.0288 294.154 cv
92.3606 293.154 li
cp
0 .388235 .215686 rgb
f
121.685 266.754 mo
116.775 263.529 li
97.4868 258.904 li
96.9868 258.154 li
92.8441 257.738 li
92.8441 259.656 li
103.192 262.421 li
107.672 269.154 li
107.574 275.771 li
109.062 276.336 li
109.195 269.154 li
104.856 262.421 li
118.028 267.571 li
119.375 273.959 li
119.375 273.959 121.323 274.601 121.366 274.148 cv
122.15 268.211 li
122.2 267.682 122.032 267.156 121.685 266.754 cv
cp
.427451 .956863 .513726 rgb
f
119.392 273.779 mo
119.928 268.227 li
116.05 265.082 li
104.856 262.421 li
109.195 269.154 li
119.392 273.779 li
cp
0 .52549 .231373 rgb
f
66.8167 288.011 mo
68.3102 282.012 li
70.1087 273.185 100.634 275.242 100.634 275.242 cv
94.1305 284.13 li
90.0938 289.646 83.1097 292.156 76.4849 290.471 cv
66.8167 288.011 li
cp
.2 .2 .203922 rgb
f
95.9284 279.93 mo
97.0747 278.363 li
88.4097 276.159 li
85.6432 276.288 82.8991 276.523 80.389 276.905 cv
77.7352 287.337 li
76.9872 287.146 li
77.4524 285.318 li
77.0368 285.212 li
79.0953 277.12 li
78.5881 277.208 78.086 277.299 77.6079 277.401 cv
74.6707 288.947 li
76.7382 289.473 li
82.0086 290.814 87.45 289.355 91.3128 285.747 cv
89.9112 285.39 li
90.313 283.811 li
93.1338 283.732 li
93.1901 283.663 93.247 283.594 93.3002 283.522 cv
93.9632 282.616 li
90.9035 281.837 li
94.509 281.87 li
95.2733 280.825 li
91.411 279.843 li
95.9284 279.93 li
cp
.223529 .309804 .309804 rgb
f
70.7779 278.797 mo
69.467 279.664 68.5738 280.718 68.3102 282.012 cv
66.8167 288.011 li
76.4849 290.471 li
82.8998 292.103 89.6434 289.792 93.7299 284.636 cv
70.7779 278.797 li
cp
0 0 0 rgb
f
92.8441 257.738 mo
120.841 262.841 li
122.975 263.111 124.862 261.448 124.862 259.297 cv
124.862 257.763 li
121.126 251.981 115.549 247.489 109.219 243.248 cv
104.953 242.024 101.611 242.488 98.8509 244.016 cv
97.8153 244.092 97.8618 245.34 98.9262 246.039 cv
110.945 255.622 li
110.112 258.821 li
92.8441 256.738 li
92.8441 257.738 li
cp
.427451 .956863 .513726 rgb
f
124.753 257.654 mo
120.362 257.654 li
119.395 257.654 118.612 258.438 118.612 259.404 cv
118.612 259.404 li
118.612 260.371 119.395 261.154 120.362 261.154 cv
124.32 261.154 li
124.653 260.613 124.862 259.985 124.862 259.297 cv
124.862 257.763 li
124.819 257.721 124.795 257.697 124.753 257.654 cv
cp
.223529 .309804 .309804 rgb
f
98.8509 244.016 mo
118.362 255.279 li
123.361 255.622 li
122.983 255.128 122.591 254.643 122.186 254.168 cv
118.598 253.697 li
101.276 243.01 li
100.364 243.274 99.5645 243.616 98.8509 244.016 cv
cp
f
71.8743 284.24 mo
71.6311 285.196 72.2088 286.168 73.1646 286.411 cv
74.1203 286.654 75.0922 286.076 75.3353 285.12 cv
75.5784 284.165 75.0007 283.193 74.045 282.95 cv
73.0893 282.707 72.1174 283.284 71.8743 284.24 cv
cp
0 .458824 .227451 rgb
f
81.3751 281.029 mo
80.8146 283.232 82.1464 285.473 84.3497 286.033 cv
86.553 286.594 88.7935 285.262 89.354 283.059 cv
89.9144 280.855 88.5827 278.615 86.3794 278.054 cv
84.1761 277.494 81.9356 278.826 81.3751 281.029 cv
cp
.690196 .701961 .631373 rgb
f
82.47 281.307 mo
82.0633 282.906 83.0296 284.532 84.6282 284.938 cv
86.2268 285.345 87.8524 284.379 88.2591 282.78 cv
88.6658 281.182 87.6995 279.556 86.1009 279.149 cv
84.5023 278.743 82.8766 279.709 82.47 281.307 cv
cp
.2 .2 .203922 rgb
f
99.6342 256.406 mo
105.906 256.335 li
106.661 256.326 107.266 255.707 107.257 254.952 cv
107.257 254.952 li
107.249 254.197 106.63 253.592 105.875 253.601 cv
99.603 253.672 li
98.848 253.681 98.243 254.3 98.2516 255.055 cv
98.2516 255.055 li
98.2602 255.81 98.8792 256.415 99.6342 256.406 cv
cp
f
193.022 400.519 mo
188.299 400.415 184.554 396.503 184.657 391.78 cv
184.76 387.057 188.673 383.312 193.395 383.415 cv
198.118 383.519 201.863 387.431 201.76 392.154 cv
201.657 396.877 197.745 400.622 193.022 400.519 cv
cp
193.509 378.235 mo
185.925 378.069 179.642 384.083 179.477 391.667 cv
179.311 399.251 185.325 405.533 192.909 405.699 cv
200.493 405.865 206.775 399.851 206.941 392.267 cv
207.106 384.683 201.093 378.401 193.509 378.235 cv
cp
f
266.29 401.697 mo
261.8 401.599 258.24 397.88 258.338 393.39 cv
258.436 388.9 262.155 385.34 266.645 385.438 cv
271.135 385.536 274.695 389.255 274.597 393.745 cv
274.499 398.235 270.78 401.795 266.29 401.697 cv
cp
266.739 381.154 mo
259.883 381.005 254.204 386.441 254.054 393.296 cv
253.904 400.152 259.34 405.831 266.196 405.981 cv
273.052 406.131 278.731 400.694 278.881 393.839 cv
279.03 386.983 273.594 381.304 266.739 381.154 cv
cp
f
261.615 393.462 mo
261.556 396.141 263.681 398.361 266.361 398.42 cv
269.041 398.478 271.261 396.353 271.32 393.674 cv
271.378 390.994 269.253 388.774 266.573 388.715 cv
263.893 388.657 261.674 390.782 261.615 393.462 cv
cp
f
264.321 395.017 mo
264.321 395.017 li
265.391 394.611 265.929 393.415 265.523 392.345 cv
262.505 384.394 li
262.099 383.324 260.903 382.786 259.833 383.192 cv
259.833 383.192 li
258.763 383.598 258.225 384.794 258.631 385.864 cv
261.648 393.815 li
262.054 394.885 263.251 395.423 264.321 395.017 cv
cp
.494118 .47451 .494118 rgb
f
219.104 392.533 mo
248.113 393.167 li
248.432 378.559 li
219.423 377.925 li
219.104 392.533 li
cp
.00784314 .47451 .447059 rgb
f
219.104 392.533 mo
248.113 393.167 li
248.21 388.701 li
219.201 388.068 li
219.104 392.533 li
cp
.101961 .945098 .827451 rgb
f
225.599 398.132 mo
177.496 397.081 li
175.122 397.029 173.239 395.062 173.29 392.688 cv
173.83 368.004 li
173.984 360.962 179.817 355.377 186.86 355.531 cv
221.696 356.292 li
224.355 356.351 226.464 358.553 226.406 361.212 cv
225.599 398.132 li
cp
.101961 .694118 .65098 rgb
f
221.696 356.292 mo
186.86 355.531 li
182.648 355.439 178.875 357.403 176.489 360.502 cv
175.15 362.24 176.402 364.77 178.596 364.818 cv
178.596 364.818 li
179.543 364.838 180.432 364.36 180.938 363.558 cv
181.387 362.846 li
182.299 361.398 183.904 360.535 185.615 360.573 cv
219.246 361.307 li
220.151 361.327 220.869 362.077 220.849 362.982 cv
220.849 362.982 li
220.816 364.505 222.023 365.767 223.546 365.8 cv
223.546 365.8 li
225.069 365.833 226.331 364.625 226.364 363.102 cv
226.406 361.212 li
226.464 358.553 224.355 356.35 221.696 356.292 cv
cp
.101961 .945098 .827451 rgb
f
247.187 398.938 mo
247.187 398.938 252.323 398.716 257.689 390.685 cv
260.517 386.452 266.43 386.129 277.326 386.33 cv
278.338 386.349 279.143 385.477 279.037 384.471 cv
278.317 377.639 li
277.996 374.592 275.761 372.091 272.768 371.432 cv
251.174 366.677 li
247.187 398.938 li
cp
.101961 .694118 .65098 rgb
f
277.418 374.894 mo
276.444 373.17 274.787 371.877 272.768 371.432 cv
251.174 366.677 li
251.174 366.677 li
251.082 370.896 257.325 374.455 265.604 374.636 cv
277.418 374.894 li
cp
.101961 .945098 .827451 rgb
f
243.215 344.238 mo
243.506 344.244 li
246.157 344.302 248.353 342.2 248.411 339.549 cv
248.417 339.258 li
248.475 336.606 246.373 334.41 243.722 334.352 cv
243.431 334.346 li
240.78 334.288 238.584 336.39 238.526 339.042 cv
238.519 339.332 li
238.461 341.984 240.564 344.18 243.215 344.238 cv
cp
.101961 .694118 .65098 rgb
f
248.412 339.073 mo
248.37 336.506 246.311 334.409 243.722 334.352 cv
243.431 334.346 li
240.842 334.289 238.693 336.295 238.539 338.857 cv
248.412 339.073 li
cp
.101961 .945098 .827451 rgb
f
236.527 342.889 mo
241.347 342.208 li
242.618 342.029 243.503 340.853 243.324 339.582 cv
243.324 339.582 li
243.144 338.311 241.968 337.426 240.697 337.606 cv
235.877 338.287 li
234.606 338.466 233.722 339.642 233.901 340.913 cv
233.901 340.913 li
234.081 342.184 235.256 343.068 236.527 342.889 cv
cp
.2 .2 .203922 rgb
f
178.097 390.958 mo
197.239 390.994 li
216.379 391.108 li
235.52 391.221 li
240.305 391.25 li
241.783 391.241 243.924 391.32 244.189 391.195 cv
244.806 391.055 245.365 390.688 245.764 390.196 cv
246.161 389.695 246.342 389.096 246.354 388.471 cv
246.356 388.353 li
246.373 388.151 li
246.597 385.426 li
246.681 384.518 246.718 383.606 246.781 382.697 cv
246.858 381.788 246.914 380.877 246.96 379.966 cv
247.008 379.055 247.072 378.144 247.094 377.233 cv
247.21 374.499 li
247.279 371.766 li
247.291 369.035 li
247.302 368.123 247.26 367.219 247.248 366.31 cv
247.239 365.4 247.186 364.499 247.145 363.595 cv
247.107 362.688 247.063 361.788 246.999 360.891 cv
246.952 359.988 246.878 359.094 246.785 358.206 cv
246.712 357.31 246.605 356.428 246.481 355.553 cv
246.38 354.665 246.221 353.81 246.07 352.949 cv
245.951 352.07 245.726 351.268 245.56 350.419 cv
245.462 350.007 245.337 349.623 245.229 349.221 cv
245.121 348.816 245.006 348.421 244.86 348.07 cv
244.716 347.717 244.602 347.312 244.45 346.99 cv
243.996 346.032 li
243.771 345.558 li
243.047 344.033 243.697 342.21 245.222 341.487 cv
246.625 340.821 248.28 341.318 249.099 342.589 cv
250.053 344.065 li
250.358 344.56 250.563 345.042 250.815 345.538 cv
251.073 346.035 251.27 346.522 251.455 347.009 cv
251.642 347.496 251.851 347.989 252.018 348.475 cv
252.316 349.442 252.68 350.425 252.912 351.388 cv
253.163 352.359 253.415 353.333 253.6 354.298 cv
253.812 355.268 254.003 356.236 254.156 357.201 cv
254.331 358.169 254.484 359.135 254.608 360.099 cv
254.744 361.065 254.885 362.031 254.965 362.995 cv
255.059 363.96 255.164 364.927 255.224 365.89 cv
255.288 366.854 255.38 367.821 255.419 368.783 cv
255.555 371.674 li
255.611 373.6 255.665 375.527 255.645 377.452 cv
255.647 378.415 255.607 379.376 255.582 380.338 cv
255.558 381.3 255.526 382.262 255.47 383.223 cv
255.403 384.183 255.361 385.145 255.271 386.104 cv
255.02 388.981 li
255.039 388.661 li
254.955 391.224 253.985 393.783 252.307 395.716 cv
250.64 397.653 248.313 399.014 245.791 399.475 cv
245.123 399.599 244.154 399.672 243.923 399.656 cv
243.624 399.66 li
243.337 399.659 li
243.262 399.656 li
243.113 399.65 li
242.515 399.628 li
240.124 399.538 li
235.342 399.357 li
216.215 398.634 li
197.088 397.912 li
177.962 397.112 li
176.263 397.041 174.944 395.607 175.015 393.908 cv
175.084 392.252 176.455 390.957 178.097 390.958 cv
cp
.101961 .694118 .65098 rgb
f
254.829 361.194 mo
255.974 361.219 li
257.125 361.244 258.079 360.331 258.105 359.179 cv
258.282 351.063 li
258.31 349.769 257.164 348.762 255.884 348.956 cv
254.06 349.232 li
250.804 349.725 248.55 352.744 249.002 356.006 cv
249.002 356.006 li
249.408 358.931 251.877 361.129 254.829 361.194 cv
cp
f
258.2 354.791 mo
258.282 351.063 li
258.31 349.769 257.164 348.762 255.884 348.956 cv
254.06 349.232 li
251.917 349.557 250.214 350.978 249.425 352.84 cv
258.2 354.791 li
cp
.101961 .945098 .827451 rgb
f
255.909 348.955 mo
255.641 361.212 li
255.974 361.219 li
257.125 361.244 258.079 360.331 258.105 359.179 cv
258.282 351.063 li
258.31 349.777 257.179 348.777 255.909 348.955 cv
cp
.670588 .592157 .447059 rgb
f
258.213 354.23 mo
258.282 351.063 li
258.31 349.777 257.179 348.777 255.909 348.955 cv
255.795 354.178 li
258.213 354.23 li
cp
.721569 1 1 rgb
f
201.417 377.086 mo
173.729 372.628 li
203.837 373.286 li
201.417 377.086 li
cp
.00784314 .47451 .447059 rgb
f
197.711 385.248 mo
173.465 384.718 li
199.116 382.503 li
197.711 385.248 li
cp
.101961 .945098 .827451 rgb
f
199.469 385.286 mo
197.204 385.237 li
202.744 373.262 li
205.595 373.325 li
199.469 385.286 li
cp
.0352941 .231373 .239216 rgb
f
214.146 371.166 mo
223.525 371.371 li
223.525 371.371 li
223.548 370.293 222.694 369.4 221.616 369.376 cv
216.14 369.257 li
215.062 369.233 214.169 370.088 214.146 371.166 cv
214.146 371.166 li
cp
.101961 .945098 .827451 rgb
f
214.073 374.486 mo
223.452 374.691 li
223.452 374.691 li
223.476 373.613 222.621 372.72 221.543 372.697 cv
216.067 372.577 li
214.99 372.554 214.097 373.408 214.073 374.486 cv
214.073 374.486 li
cp
f
214.001 377.806 mo
223.38 378.011 li
223.38 378.011 li
223.403 376.934 222.548 376.041 221.471 376.017 cv
215.995 375.898 li
214.917 375.874 214.024 376.729 214.001 377.806 cv
214.001 377.806 li
cp
f
193.894 355.685 mo
222.974 356.32 li
223.07 351.935 li
223.108 350.2 221.732 348.762 219.996 348.724 cv
197.2 348.226 li
195.465 348.188 194.027 349.564 193.989 351.3 cv
193.894 355.685 li
cp
.2 .2 .203922 rgb
f
257.656 379.687 mo
257.633 380.737 258.466 381.607 259.517 381.63 cv
260.567 381.653 261.437 380.82 261.46 379.77 cv
261.483 378.72 260.65 377.849 259.6 377.827 cv
258.55 377.804 257.679 378.637 257.656 379.687 cv
cp
1 .760784 0 rgb
f
183.987 366.232 mo
183.964 367.282 184.797 368.152 185.847 368.175 cv
186.898 368.198 187.768 367.365 187.791 366.315 cv
187.814 365.265 186.981 364.394 185.93 364.372 cv
184.88 364.349 184.01 365.182 183.987 366.232 cv
cp
f
193.956 352.827 mo
172.415 352.356 li
171.625 352.339 170.972 352.965 170.954 353.754 cv
170.954 353.754 li
170.937 354.543 171.563 355.197 172.352 355.214 cv
193.894 355.685 li
193.956 352.827 li
cp
.494118 .47451 .494118 rgb
f
265.035 304.335 mo
258.813 304.248 253.839 299.134 253.926 292.912 cv
254.013 286.69 259.127 281.716 265.349 281.803 cv
271.571 281.889 276.545 287.004 276.458 293.226 cv
276.371 299.448 271.257 304.421 265.035 304.335 cv
cp
265.438 275.398 mo
255.679 275.262 247.657 283.063 247.521 292.822 cv
247.385 302.582 255.186 310.604 264.946 310.74 cv
274.705 310.876 282.727 303.074 282.863 293.315 cv
282.999 283.556 275.198 275.534 265.438 275.398 cv
cp
.486275 .478431 .419608 rgb
f
265.046 303.571 mo
259.246 303.49 254.609 298.722 254.69 292.922 cv
254.771 287.122 259.538 282.486 265.338 282.567 cv
271.139 282.648 275.775 287.415 275.694 293.215 cv
275.613 299.015 270.846 303.651 265.046 303.571 cv
cp
265.403 277.912 mo
257.032 277.795 250.152 284.486 250.035 292.857 cv
249.918 301.228 256.61 308.109 264.981 308.226 cv
273.352 308.342 280.233 301.651 280.349 293.28 cv
280.466 284.909 273.774 278.028 265.403 277.912 cv
cp
.239216 .196078 .192157 rgb
f
265.267 287.717 mo
262.311 287.675 259.881 290.038 259.84 292.994 cv
259.799 295.95 262.162 298.38 265.118 298.421 cv
268.073 298.462 270.503 296.099 270.544 293.143 cv
270.585 290.187 268.223 287.758 265.267 287.717 cv
cp
.486275 .478431 .419608 rgb
f
189.276 304.134 mo
183.078 304.047 178.123 298.953 178.21 292.755 cv
178.296 286.557 183.391 281.602 189.589 281.689 cv
195.787 281.775 200.741 286.869 200.655 293.068 cv
200.569 299.266 195.474 304.22 189.276 304.134 cv
cp
189.678 275.308 mo
179.956 275.173 171.965 282.944 171.829 292.666 cv
171.694 302.388 179.465 310.379 189.187 310.514 cv
198.909 310.65 206.9 302.878 207.035 293.156 cv
207.171 283.435 199.399 275.444 189.678 275.308 cv
cp
f
189.303 302.206 mo
184.169 302.134 180.066 297.915 180.138 292.782 cv
180.209 287.648 184.428 283.545 189.562 283.616 cv
194.695 283.688 198.798 287.907 198.727 293.041 cv
198.655 298.174 194.436 302.277 189.303 302.206 cv
cp
189.635 278.332 mo
181.584 278.22 174.965 284.656 174.853 292.708 cv
174.741 300.76 181.177 307.378 189.229 307.49 cv
197.281 307.602 203.899 301.166 204.011 293.114 cv
204.123 285.063 197.687 278.444 189.635 278.332 cv
cp
.239216 .196078 .192157 rgb
f
189.525 286.392 mo
185.838 286.341 182.807 289.288 182.755 292.976 cv
182.704 296.663 185.652 299.694 189.339 299.745 cv
193.027 299.797 196.058 296.849 196.109 293.162 cv
196.16 289.474 193.213 286.443 189.525 286.392 cv
cp
.486275 .478431 .419608 rgb
f
210.767 296.763 mo
189.804 296.763 li
187.677 296.763 185.952 295.038 185.952 292.911 cv
185.952 292.911 li
185.952 290.784 187.677 289.06 189.804 289.06 cv
207.596 289.06 li
209.724 289.06 211.448 290.784 211.448 292.911 cv
211.448 292.911 li
211.448 295.038 210.767 296.763 210.767 296.763 cv
cp
.239216 .196078 .192157 rgb
f
169.76 284.578 mo
169.76 284.578 li
170.167 284.82 170.694 284.686 170.936 284.279 cv
178.62 271.352 li
178.862 270.945 178.728 270.418 178.321 270.176 cv
178.321 270.176 li
177.913 269.934 177.387 270.068 177.145 270.475 cv
169.461 283.402 li
169.219 283.809 169.352 284.336 169.76 284.578 cv
cp
f
275.587 278.228 mo
275.962 278.239 276.153 277.796 275.893 277.525 cv
269.291 270.641 255.793 272.525 250.918 280.197 cv
250.917 280.199 250.927 280.211 250.927 280.233 cv
250.918 281.124 252.929 282.229 254.523 282.907 cv
263.733 286.729 li
262.09 280.233 266.806 277.973 275.587 278.228 cv
cp
.929412 .623529 .0156863 rgb
f
266.957 292.232 mo
265.217 275.378 261.39 269.545 254.121 252.846 cv
253.777 251.826 252.672 251.278 251.653 251.622 cv
250.633 251.965 250.085 253.07 250.429 254.09 cv
263.265 293.476 li
263.608 294.496 264.713 295.044 265.733 294.7 cv
266.752 294.357 267.3 293.252 266.957 292.232 cv
cp
.239216 .196078 .192157 rgb
f
263.845 258.838 mo
248.896 240.157 li
249.971 248.427 li
248.645 248.408 243.168 251.424 243.73 252.625 cv
242.182 263.163 li
242.106 263.678 242.34 264.19 242.779 264.471 cv
246.99 267.162 li
241.366 271.285 236.298 277.743 234.098 280.74 cv
233.363 281.742 233.139 283.027 233.498 284.217 cv
235.935 292.265 li
227.358 292.146 li
227.137 292.142 226.919 292.128 226.704 292.102 cv
222.889 291.642 220.696 287.476 222.16 283.923 cv
227.411 271.186 li
228.329 268.958 226.712 266.505 224.302 266.471 cv
182.148 265.884 li
178.814 265.837 176.048 268.527 176.001 271.861 cv
176.001 271.861 207.419 301.083 225.056 301.195 cv
232.836 301.244 li
238.884 301.329 241.693 297 244.607 292.903 cv
243.853 283.885 252.179 275.666 263.787 267.737 cv
266.091 264.249 266.117 261.941 263.845 258.838 cv
cp
.988235 .815686 .141176 rgb
f
242.194 263.085 mo
242.182 263.163 li
242.106 263.678 242.34 264.19 242.779 264.471 cv
246.747 267.007 li
250.673 266.424 254.734 265.589 257.967 266.299 cv
258.825 264.851 242.194 263.085 242.194 263.085 cv
cp
.929412 .623529 .0156863 rgb
f
263.845 258.838 mo
258.873 252.625 li
250.427 252.625 li
262.2 262.813 li
262.829 263.357 263.632 263.657 264.464 263.657 cv
265.476 263.657 li
265.643 262.07 265.118 260.577 263.845 258.838 cv
cp
.662745 .780392 .74902 rgb
f
235.935 292.265 mo
227.358 292.146 li
227.137 292.142 226.921 292.102 226.704 292.102 cv
205.809 292.102 176.001 271.861 176.001 271.861 cv
176.001 271.861 207.419 301.083 225.056 301.195 cv
232.836 301.244 li
238.884 301.329 241.693 297 244.607 292.903 cv
243.853 283.885 252.179 275.666 263.787 267.737 cv
253.369 270.701 239.033 282.796 235.935 292.265 cv
cp
.929412 .623529 .0156863 rgb
f
192.374 285.346 mo
195.934 288.366 190.014 283.728 195.586 287.682 cv
222.078 295.213 li
221.784 294.008 220.145 288.564 222.16 283.923 cv
224.686 277.796 li
224.686 277.796 223.08 278.874 220.767 279.835 cv
220.767 279.835 222.024 281.458 221.193 282.739 cv
219.894 284.74 210.322 284.763 192.374 285.346 cv
cp
.239216 .196078 .192157 rgb
f
235.935 292.265 mo
227.358 292.146 li
227.171 292.143 226.985 292.132 226.802 292.113 cv
223.071 291.724 220.846 287.793 222.034 284.29 cv
219.537 289.938 li
218.423 292.459 220.244 295.299 223 295.337 cv
228.833 295.418 li
231.547 295.456 234.142 294.304 235.935 292.265 cv
235.935 292.265 li
cp
f
224.154 264.98 mo
211.834 264.808 li
209.627 264.778 207.633 263.484 206.706 261.481 cv
206.384 260.786 li
189.887 261.119 li
187.666 261.163 185.884 263.402 185.908 266.12 cv
185.916 267.025 186.523 267.748 187.263 267.733 cv
202.427 267.427 li
223.133 281.436 li
227.343 271.586 li
228.216 271.598 228.977 270.923 229.004 270.05 cv
229.086 267.296 226.898 265.018 224.154 264.98 cv
cp
f
245.274 276.992 mo
245.274 276.992 li
245.635 276.547 245.566 275.893 245.12 275.532 cv
244.184 274.774 li
243.739 274.414 243.085 274.482 242.724 274.928 cv
242.724 274.928 li
242.363 275.374 242.432 276.027 242.878 276.388 cv
243.814 277.146 li
244.26 277.507 244.913 277.438 245.274 276.992 cv
cp
.682353 .368627 0 rgb
f
242.364 280.586 mo
242.364 280.586 li
242.725 280.14 242.656 279.487 242.211 279.126 cv
241.275 278.368 li
240.829 278.007 240.175 278.076 239.815 278.522 cv
239.815 278.522 li
239.454 278.967 239.523 279.621 239.968 279.982 cv
240.905 280.74 li
241.35 281.1 242.004 281.032 242.364 280.586 cv
cp
f
239.589 284.015 mo
239.589 284.015 li
239.949 283.569 239.88 282.916 239.435 282.555 cv
238.499 281.797 li
238.053 281.436 237.4 281.505 237.039 281.951 cv
237.039 281.951 li
236.678 282.396 236.747 283.05 237.192 283.41 cv
238.129 284.168 li
238.574 284.529 239.228 284.46 239.589 284.015 cv
cp
f
243.974 232.886 mo
243.974 232.886 li
245.206 232.33 245.754 230.88 245.198 229.648 cv
243.899 226.768 li
243.343 225.536 241.893 224.988 240.661 225.544 cv
240.661 225.544 li
243.974 232.886 li
cp
.239216 .196078 .192157 rgb
f
248.939 243.031 mo
248.552 243.031 248.22 242.735 248.182 242.342 cv
247.482 235.073 li
247.453 234.765 247.422 234.444 247.317 234.211 cv
247.233 234.022 247.074 233.824 246.92 233.632 cv
242.929 228.663 li
242.665 228.335 242.717 227.855 243.045 227.592 cv
243.371 227.328 243.853 227.379 244.116 227.708 cv
248.108 232.677 li
248.303 232.92 248.546 233.222 248.71 233.591 cv
248.915 234.051 248.96 234.516 249 234.927 cv
249.699 242.195 li
249.739 242.614 249.433 242.987 249.014 243.027 cv
248.988 243.029 248.964 243.031 248.939 243.031 cv
cp
f
254.22 247.918 mo
255.028 247.851 255.472 246.942 255.023 246.267 cv
253.277 243.639 250.059 238.462 249.794 238.428 cv
243.41 237.608 241.061 238.803 240.644 242.044 cv
240.509 243.101 240.376 244.22 240.258 245.248 cv
240.029 247.247 241.683 248.955 243.688 248.789 cv
254.22 247.918 li
cp
.988235 .815686 .141176 rgb
f
239.832 247.049 mo
246.637 246.417 li
247.802 246.309 248.659 245.277 248.55 244.112 cv
248.55 244.112 li
248.442 242.947 247.41 242.09 246.245 242.198 cv
239.44 242.83 li
238.275 242.938 237.418 243.971 237.526 245.136 cv
237.526 245.136 li
237.634 246.301 238.667 247.158 239.832 247.049 cv
cp
.239216 .196078 .192157 rgb
f
260.152 278.284 mo
260.152 279.232 260.92 280 261.867 280 cv
262.815 280 263.583 279.232 263.583 278.284 cv
263.583 277.337 262.815 276.569 261.867 276.569 cv
260.92 276.569 260.152 277.337 260.152 278.284 cv
cp
.968627 .415686 .25098 rgb
f
187.263 267.733 mo
168.934 263.815 li
168.934 261.941 li
182.663 261.767 li
187.263 267.733 li
cp
.239216 .196078 .192157 rgb
f
33.6641 383.225 mo
30.5786 383.225 28.0898 385.668 28.061 388.671 cv
28.0322 391.703 30.4985 394.193 33.5586 394.223 cv
33.6191 395.154 li
33.6191 394.223 li
36.3892 394.223 61.4937 392.909 69.1221 392.506 cv
71.2974 392.392 73.0103 390.68 73.1064 388.523 cv
73.1123 388.386 li
73.1621 387.259 72.7646 386.185 71.9927 385.358 cv
71.2124 384.523 70.1499 384.049 69.0015 384.022 cv
59.124 383.79 35.9072 383.246 33.6641 383.225 cv
cp
33.6191 396.086 mo
33.6191 396.086 li
33.541 396.086 li
29.4531 396.047 26.1592 392.713 26.1978 388.653 cv
26.2363 384.632 29.561 381.361 33.6094 381.361 cv
35.937 381.383 59.1641 381.927 69.0454 382.159 cv
70.6982 382.198 72.2285 382.882 73.354 384.086 cv
74.4707 385.28 75.0459 386.836 74.9741 388.466 cv
74.9678 388.614 li
74.8286 391.725 72.3579 394.201 69.2207 394.367 cv
59.4292 394.884 36.3599 396.086 33.6191 396.086 cv
cp
.152941 .105882 .172549 rgb
f
126.414 401.621 mo
118.96 401.621 112.917 395.578 112.917 388.124 cv
112.917 380.669 118.96 374.626 126.414 374.626 cv
133.868 374.626 139.911 380.669 139.911 388.124 cv
139.911 395.578 133.868 401.621 126.414 401.621 cv
cp
126.414 368.144 mo
115.38 368.144 106.434 377.089 106.434 388.124 cv
106.434 399.158 115.38 408.104 126.414 408.104 cv
137.449 408.104 146.394 399.158 146.394 388.124 cv
146.394 377.089 137.449 368.144 126.414 368.144 cv
cp
.2 .2 .203922 rgb
f
126.414 400.76 mo
119.435 400.76 113.777 395.103 113.777 388.124 cv
113.777 381.145 119.435 375.487 126.414 375.487 cv
133.393 375.487 139.051 381.145 139.051 388.124 cv
139.051 395.103 133.393 400.76 126.414 400.76 cv
cp
126.414 373.239 mo
118.194 373.239 111.53 379.903 111.53 388.124 cv
111.53 396.344 118.194 403.008 126.414 403.008 cv
134.635 403.008 141.298 396.344 141.298 388.124 cv
141.298 379.903 134.635 373.239 126.414 373.239 cv
cp
.721569 1 1 rgb
f
113.792 387.829 mo
113.951 380.987 119.535 375.487 126.414 375.487 cv
133.294 375.487 138.878 380.987 139.036 387.829 cv
141.284 387.829 li
141.125 379.746 134.535 373.239 126.414 373.239 cv
118.293 373.239 111.703 379.746 111.545 387.829 cv
113.792 387.829 li
cp
.670588 .592157 .447059 rgb
f
33.7174 403.226 mo
25.6148 403.226 19.0463 396.657 19.0463 388.555 cv
19.0463 380.452 25.6148 373.884 33.7174 373.884 cv
41.8199 373.884 48.3884 380.452 48.3884 388.555 cv
48.3884 396.657 41.8199 403.226 33.7174 403.226 cv
cp
33.7174 366.837 mo
21.7231 366.837 12 376.561 12 388.555 cv
12 400.549 21.7231 410.272 33.7174 410.272 cv
45.7116 410.272 55.4348 400.549 55.4348 388.555 cv
55.4348 376.561 45.7116 366.837 33.7174 366.837 cv
cp
.2 .2 .203922 rgb
f
33.7174 402.29 mo
26.1314 402.29 19.9818 396.141 19.9818 388.555 cv
19.9818 380.969 26.1314 374.819 33.7174 374.819 cv
41.3033 374.819 47.4529 380.969 47.4529 388.555 cv
47.4529 396.141 41.3033 402.29 33.7174 402.29 cv
cp
33.7174 372.376 mo
24.7822 372.376 17.5388 379.62 17.5388 388.555 cv
17.5388 397.49 24.7822 404.733 33.7174 404.733 cv
42.6525 404.733 49.896 397.49 49.896 388.555 cv
49.896 379.62 42.6525 372.376 33.7174 372.376 cv
cp
.721569 1 1 rgb
f
19.9979 388.234 mo
20.1699 380.798 26.2396 374.819 33.7174 374.819 cv
41.1951 374.819 47.2648 380.798 47.4367 388.234 cv
49.8798 388.234 li
49.7074 379.449 42.5444 372.376 33.7174 372.376 cv
24.8903 372.376 17.7274 379.449 17.555 388.234 cv
19.9979 388.234 li
cp
.670588 .592157 .447059 rgb
f
136.924 368.669 mo
130.731 365.092 123.485 364.96 117.403 367.665 cv
117.661 368.282 117.959 368.884 118.283 369.477 cv
119.281 371.299 121.343 372.251 123.377 371.824 cv
129.233 370.595 133.533 373.078 136.251 374.648 cv
138.709 376.069 142.73 373.612 142.73 373.612 cv
141.141 371.685 139.21 369.99 136.924 368.669 cv
cp
1 0 .388235 rgb
f
40.9472 387.746 mo
38.7534 386.917 li
38.2688 386.734 38.0243 386.193 38.2074 385.708 cv
38.3905 385.224 38.9318 384.979 39.4165 385.162 cv
41.6103 385.991 li
42.095 386.174 42.3394 386.716 42.1562 387.2 cv
41.9731 387.685 41.4318 387.929 40.9472 387.746 cv
cp
41.3407 392.419 mo
40.9077 392.704 40.3261 392.583 40.0417 392.15 cv
38.754 390.19 li
38.4696 389.757 38.5899 389.176 39.023 388.891 cv
39.456 388.607 40.0376 388.727 40.3221 389.16 cv
41.6097 391.12 li
41.8942 391.553 41.7737 392.135 41.3407 392.419 cv
cp
38.5944 395.269 mo
38.5701 395.787 38.1308 396.186 37.6133 396.162 cv
37.0958 396.138 36.696 395.698 36.7204 395.181 cv
36.8308 392.838 li
36.8552 392.321 37.2945 391.921 37.812 391.945 cv
38.3295 391.97 38.7293 392.409 38.7048 392.927 cv
38.5944 395.269 li
cp
35.6768 383.613 mo
35.5401 383.113 35.8344 382.597 36.3341 382.46 cv
38.5961 381.842 li
39.0958 381.705 39.6117 381.999 39.7484 382.499 cv
39.8852 382.999 39.5909 383.514 39.0912 383.651 cv
36.8292 384.27 li
36.3295 384.407 35.8136 384.113 35.6768 383.613 cv
cp
35.1827 381.429 mo
33.7164 383.259 li
33.3925 383.664 32.8022 383.729 32.3978 383.405 cv
31.9934 383.081 31.9283 382.491 32.2521 382.086 cv
33.7184 380.256 li
34.0423 379.852 34.6327 379.787 35.037 380.11 cv
35.4414 380.434 35.5065 381.025 35.1827 381.429 cv
cp
35.1827 395.023 mo
33.7164 396.853 li
33.3925 397.258 32.8022 397.323 32.3978 396.999 cv
31.9934 396.675 31.9283 396.085 32.2521 395.681 cv
33.7184 393.85 li
34.0423 393.446 34.6327 393.381 35.037 393.705 cv
35.4414 394.029 35.5065 394.619 35.1827 395.023 cv
cp
31.1007 394.649 mo
28.8387 395.268 li
28.339 395.405 27.8231 395.11 27.6864 394.611 cv
27.5496 394.111 27.8439 393.595 28.3436 393.458 cv
30.6056 392.839 li
31.1053 392.703 31.6212 392.997 31.758 393.497 cv
31.8947 393.996 31.6004 394.512 31.1007 394.649 cv
cp
25.8245 391.118 mo
25.3399 390.935 25.0954 390.394 25.2786 389.909 cv
25.4617 389.425 26.003 389.18 26.4876 389.363 cv
28.6814 390.192 li
29.166 390.375 29.4105 390.917 29.2274 391.401 cv
29.0443 391.886 28.503 392.13 28.0183 391.947 cv
25.8245 391.118 li
cp
26.0942 384.69 mo
26.5271 384.406 27.1087 384.526 27.3932 384.959 cv
28.6808 386.919 li
28.9652 387.352 28.8449 387.934 28.4118 388.218 cv
27.9788 388.503 27.3972 388.382 27.1127 387.949 cv
25.8251 385.989 li
25.5407 385.556 25.6611 384.975 26.0942 384.69 cv
cp
28.8404 381.84 mo
28.8647 381.323 29.304 380.923 29.8215 380.947 cv
30.339 380.972 30.7388 381.411 30.7144 381.929 cv
30.604 384.271 li
30.5796 384.789 30.1403 385.188 29.6228 385.164 cv
29.1053 385.14 28.7055 384.7 28.73 384.183 cv
28.8404 381.84 li
cp
33.7174 378.361 mo
28.0876 378.361 23.5237 382.925 23.5237 388.555 cv
23.5237 394.185 28.0876 398.748 33.7174 398.748 cv
39.3472 398.748 43.9111 394.185 43.9111 388.555 cv
43.9111 382.925 39.3472 378.361 33.7174 378.361 cv
cp
.8 .682353 .545098 rgb
f
126.545 380.529 mo
122.351 380.529 118.951 383.929 118.951 388.124 cv
118.951 392.318 122.351 395.718 126.545 395.718 cv
130.74 395.718 134.14 392.318 134.14 388.124 cv
134.14 383.929 130.74 380.529 126.545 380.529 cv
cp
f
74.8057 375.813 mo
77.0046 383.665 84.169 389.755 92.0332 389.755 cv
99.8974 389.755 100.373 383.574 102.284 375.647 cv
105.097 363.982 97.3308 361.839 89.4667 361.839 cv
81.6025 361.839 71.1324 362.697 74.8057 375.813 cv
cp
.152941 .105882 .172549 rgb
f
99.1265 364.661 mo
98.2485 364.53 li
98.2485 364.529 98.5278 362.649 98.6724 361.543 cv
98.7622 360.854 99.106 360.342 99.6157 360.136 cv
100.04 359.967 100.507 360.033 100.867 360.32 cv
101.295 360.661 101.481 361.229 101.377 361.879 cv
101.288 362.437 101.497 362.73 101.743 362.773 cv
101.974 362.815 102.253 362.65 102.34 362.2 cv
102.569 361.011 102.741 359.956 102.911 358.912 cv
103.11 357.697 103.315 356.44 103.605 355.014 cv
104.476 355.191 li
104.188 356.601 103.994 357.793 103.788 359.056 cv
103.616 360.107 103.442 361.17 103.212 362.368 cv
103.022 363.352 102.231 363.764 101.589 363.647 cv
100.936 363.533 100.317 362.887 100.5 361.738 cv
100.552 361.414 100.484 361.15 100.314 361.015 cv
100.208 360.932 100.071 360.91 99.9487 360.959 cv
99.7441 361.042 99.5996 361.297 99.5522 361.658 cv
99.4077 362.771 99.1265 364.661 99.1265 364.661 cv
cp
f
80.213 398.694 mo
88.3064 398.694 li
92.8603 398.694 96.8647 395.681 98.1262 391.305 cv
100.578 382.801 li
74.7583 383.083 li
74.7583 383.083 69.2654 371.48 71.5708 364.101 cv
77.7185 348.334 106.174 358.128 106.174 358.128 cv
106.174 358.128 108.58 356.911 108.58 353.259 cv
108.58 350.281 102.336 344.133 91.001 344.133 cv
76.4964 344.133 67.573 354.658 67.573 354.658 cv
57.4666 354.078 li
55.3445 353.956 53.4259 352.775 52.3609 350.936 cv
51.6175 349.652 li
32.4061 350.473 li
24.9056 353.993 li
24.3316 354.263 24.4557 355.105 25.0817 355.206 cv
33.5305 356.564 42.1508 359.005 51.0412 363.152 cv
58.0664 369.356 64.3871 379.362 69.993 391.471 cv
72.0249 395.86 75.3764 398.694 80.213 398.694 cv
cp
1 0 .388235 rgb
f
82.1713 380.816 mo
82.1713 398.694 li
88.9068 398.694 li
93.1051 398.694 96.7969 395.916 97.9599 391.882 cv
100.578 382.801 li
82.1713 380.816 li
cp
.152941 .105882 .172549 rgb
f
71.2283 357.617 mo
70.4349 358.353 69.3769 356.205 69.8045 355.247 cv
71.2364 352.04 74.1171 349.412 77.3953 347.38 cv
71.1314 350.472 67.573 354.658 67.573 354.658 cv
57.4665 354.078 li
55.3444 353.956 53.4259 352.775 52.361 350.936 cv
51.6176 349.652 li
51.5434 349.655 li
51.2243 357.379 61.531 356.806 66.6891 357.425 cv
67.3906 357.51 67.9172 358.073 67.9917 358.775 cv
68.3523 362.173 69.4126 364.94 70.6611 368.038 cv
71.1717 369.306 68.5893 369.244 67.908 368.224 cv
62.7457 360.502 52.4015 356.932 43.7245 354.607 cv
38.7107 353.263 34.2067 351.982 29.1578 351.997 cv
24.9066 353.993 li
24.3325 354.262 24.4569 355.106 25.083 355.206 cv
33.1567 356.507 41.3894 358.811 49.8621 362.63 cv
53.8807 363.709 63.2061 378.683 69.1393 391.512 cv
71.1635 395.889 75.5356 398.694 80.3581 398.694 cv
82.2179 398.694 li
82.1486 392.358 85.3156 381.155 79.2502 380.501 cv
75.8065 382.886 li
75.8065 382.886 69.4842 371.789 71.7896 364.41 cv
77.9373 348.643 106.174 358.128 106.174 358.128 cv
106.174 358.128 109.771 359.954 108.58 353.259 cv
108.252 351.419 85.1353 344.713 71.2283 357.617 cv
cp
.694118 .145098 .337255 rgb
f
70.9019 369.356 mo
71.253 369.356 li
71.2412 367.138 72.4828 364.489 73.324 361.326 cv
106.174 358.128 li
106.174 358.128 86.3513 350.461 71.2283 357.617 cv
70.25 358.079 74.1171 349.412 77.3953 347.38 cv
71.1314 350.472 67.573 354.658 67.573 354.658 cv
57.4665 354.078 li
55.3445 353.956 53.4259 352.775 52.361 350.936 cv
51.6175 349.652 li
51.5433 349.655 li
51.2242 357.381 56.7802 353.405 29.1578 351.997 cv
24.9066 353.993 li
24.3325 354.262 24.4569 355.105 25.083 355.206 cv
33.1567 356.507 41.3894 358.811 49.8621 362.63 cv
50.8498 363.056 50.9805 363.587 52.0441 364.196 cv
57.8023 367.492 64.2673 369.356 70.9019 369.356 cv
cp
.152941 .105882 .172549 rgb
f
29.3867 388.555 mo
29.3867 390.956 31.333 392.902 33.7338 392.902 cv
36.1346 392.902 38.0809 390.956 38.0809 388.555 cv
38.0809 386.154 36.1346 384.208 33.7338 384.208 cv
31.333 384.208 29.3867 386.154 29.3867 388.555 cv
cp
f
84.6639 389.229 mo
37.1662 395.423 li
30.6547 394.7 li
29.9245 390.463 li
36.3505 388.459 li
83.1151 382.024 li
84.6639 389.229 li
cp
f
89.9852 393.025 mo
89.6808 392.233 88.792 391.837 87.9996 392.14 cv
87.2499 392.428 86.2155 392.311 85.3028 392.208 cv
83.7413 392.031 76.0379 390.703 74.0461 389.895 cv
73.2445 389.534 70.7588 386.522 69.5644 385.075 cv
67.6617 382.769 67.1131 382.153 66.5091 381.872 cv
65.021 381.18 63.358 381.281 62.1674 382.134 cv
61.4781 382.629 61.1664 383.688 61.278 384.938 cv
64.3194 384.512 li
64.5576 384.48 64.8387 384.509 65.1088 384.615 cv
65.4692 384.942 66.4202 386.094 67.1931 387.031 cv
69.7415 390.119 71.5145 392.185 72.8894 392.743 cv
75.4526 393.783 83.6329 395.111 84.9565 395.262 cv
86.1571 395.398 87.6499 395.567 89.1002 395.011 cv
89.651 394.799 90.0099 394.306 90.0759 393.758 cv
90.105 393.518 90.0777 393.267 89.9852 393.025 cv
cp
.709804 .701961 .768627 rgb
f
122.067 388.124 mo
122.067 390.525 124.013 392.471 126.414 392.471 cv
128.815 392.471 130.761 390.525 130.761 388.124 cv
130.761 385.723 128.815 383.777 126.414 383.777 cv
124.013 383.777 122.067 385.723 122.067 388.124 cv
cp
.152941 .105882 .172549 rgb
f
125.5 390.93 mo
128.995 389.699 li
119.625 363.097 li
116.129 364.328 li
125.5 390.93 li
cp
.709804 .701961 .768627 rgb
f
110.574 361.323 mo
114.385 361.116 117.725 360.637 121.018 359.391 cv
121.62 359.163 122.028 358.562 122.01 357.919 cv
121.902 353.966 120.718 350.136 119.152 346.292 cv
118.875 345.611 118.137 345.219 117.416 345.363 cv
113.16 346.209 110.142 347.196 107.889 348.634 cv
106.696 349.013 105.992 350.304 106.265 351.614 cv
108.25 359.391 li
108.489 360.541 109.476 361.382 110.574 361.323 cv
cp
.152941 .105882 .172549 rgb
f
119.152 346.292 mo
118.875 345.611 118.137 345.219 117.416 345.363 cv
116.84 345.477 116.291 345.595 115.759 345.715 cv
119.89 359.749 li
120.265 359.627 120.645 359.532 121.018 359.391 cv
121.62 359.163 122.028 358.562 122.01 357.919 cv
121.902 353.966 120.718 350.136 119.152 346.292 cv
cp
.709804 .701961 .768627 rgb
f
120.871 381.015 mo
126.045 379.193 li
116.46 351.982 li
111.287 353.804 li
120.871 381.015 li
cp
.694118 .145098 .337255 rgb
f
87.1788 393.165 mo
87.1788 391.118 88.838 389.459 90.8847 389.459 cv
92.9314 389.459 94.5905 391.118 94.5905 393.165 cv
94.5905 395.212 92.9314 396.871 90.8847 396.871 cv
88.838 396.871 87.1788 395.212 87.1788 393.165 cv
cp
.709804 .701961 .768627 rgb
f
88.4497 393.165 mo
88.4497 391.82 89.5399 390.73 90.8847 390.73 cv
92.2295 390.73 93.3197 391.82 93.3197 393.165 cv
93.3197 394.51 92.2295 395.6 90.8847 395.6 cv
89.5399 395.6 88.4497 394.51 88.4497 393.165 cv
cp
.152941 .105882 .172549 rgb
f
109.131 353.405 mo
109.131 355.484 110.816 357.169 112.894 357.169 cv
114.973 357.169 116.658 355.484 116.658 353.405 cv
116.658 351.327 114.973 349.642 112.894 349.642 cv
110.816 349.642 109.131 351.327 109.131 353.405 cv
cp
f
125.079 388.124 mo
125.079 388.861 125.677 389.459 126.414 389.459 cv
127.152 389.459 127.75 388.861 127.75 388.124 cv
127.75 387.386 127.152 386.788 126.414 386.788 cv
125.677 386.788 125.079 387.386 125.079 388.124 cv
cp
.2 .2 .203922 rgb
f
86.895 344.456 mo
94.333 344.456 li
94.333 342.565 li
86.895 342.565 li
86.895 344.456 li
cp
.152941 .105882 .172549 rgb
f
112.583 354.647 mo
109.08 354.647 106.655 351.7 106.201 346.811 cv
105.962 344.238 104.639 343.996 98.5796 343.996 cv
97.7896 343.996 97.1494 343.355 97.1494 342.565 cv
97.1494 341.775 97.7896 341.135 98.5796 341.135 cv
104.148 341.135 108.546 341.135 109.049 346.546 cv
109.203 348.201 109.868 352.04 112.886 351.773 cv
113.677 351.709 114.364 352.294 114.43 353.08 cv
114.496 353.867 113.911 354.559 113.124 354.625 cv
112.941 354.64 112.761 354.647 112.583 354.647 cv
cp
.709804 .701961 .768627 rgb
f
97.6969 344.413 mo
103.484 344.699 li
104.425 344.745 105.225 344.02 105.272 343.079 cv
105.288 342.754 li
105.334 341.813 104.609 341.013 103.668 340.967 cv
97.8809 340.681 li
96.9401 340.635 96.1398 341.36 96.0934 342.301 cv
96.0773 342.626 li
96.0309 343.567 96.756 344.367 97.6969 344.413 cv
cp
.152941 .105882 .172549 rgb
f
97.0868 380.233 mo
97.0868 380.233 97.4018 380.237 97.9924 380.244 cv
98.5881 380.262 99.461 380.233 100.674 380.4 cv
101.277 380.503 102.002 380.64 102.772 381.136 cv
103.559 381.602 104.19 382.61 104.307 383.563 cv
104.324 383.716 104.335 383.871 104.342 384.027 cv
104.324 384.413 li
104.306 384.668 104.263 384.908 104.214 385.147 cv
104.113 385.623 103.958 386.064 103.792 386.508 cv
103.446 387.379 103.016 388.221 102.558 389.07 cv
101.62 390.739 100.703 392.526 99.4459 394.429 cv
98.8072 395.361 98.0838 396.315 97.1748 397.17 cv
96.2671 398.022 95.1751 398.764 93.9691 399.271 cv
93.3697 399.533 92.7398 399.72 92.1065 399.877 cv
91.38 400.058 90.6472 399.986 90.0544 399.998 cv
88.8293 399.972 87.5892 399.947 86.3392 399.921 cv
85.0952 399.902 83.8412 399.882 82.5824 399.863 cv
81.3237 399.862 80.06 399.861 78.7964 399.861 cv
78.483 399.806 78.1557 400.048 77.8218 400.422 cv
77.488 400.796 77.155 401.147 76.8383 401.164 cv
74.9461 401.16 li
73.6871 401.154 72.4331 401.147 71.189 401.14 cv
68.7005 401.137 66.2543 401.089 63.8877 401.033 cv
61.5204 400.99 59.2334 400.928 57.0662 400.841 cv
54.8984 400.769 52.8494 400.688 50.9598 400.586 cv
43.3981 400.231 38.3708 399.733 38.3708 399.733 cv
38.7743 393.011 li
38.7743 393.011 40.0334 393.053 42.2369 393.126 cv
44.4402 393.219 47.5868 393.369 51.3581 393.627 cv
53.2446 393.742 55.2867 393.893 57.4459 394.064 cv
59.606 394.218 61.8823 394.409 64.236 394.623 cv
66.5903 394.823 69.0227 395.036 71.492 395.289 cv
72.7268 395.409 73.9714 395.529 75.2209 395.65 cv
77.0979 395.832 li
77.4102 395.88 77.7066 396.261 78.0022 396.666 cv
78.2978 397.071 78.6002 397.342 78.9165 397.317 cv
80.1719 397.431 81.4272 397.544 82.6776 397.658 cv
83.9285 397.738 85.1744 397.818 86.4106 397.897 cv
87.646 397.946 88.8733 398.011 90.0702 398.012 cv
90.9099 398.005 li
91.0381 397.998 91.126 398.013 91.287 397.991 cv
91.5114 397.967 li
91.5396 397.963 91.3691 397.993 91.4528 397.977 cv
91.4776 397.97 li
91.527 397.956 li
91.6257 397.929 li
92.1557 397.793 92.6662 397.617 93.1438 397.392 cv
95.0818 396.527 96.4754 394.928 97.6034 393.195 cv
98.7332 391.478 99.7186 389.627 100.672 388.023 cv
101.13 387.218 101.539 386.449 101.845 385.724 cv
101.988 385.364 102.119 385.012 102.193 384.69 cv
102.229 384.531 102.261 384.374 102.273 384.234 cv
102.289 384.031 li
102.285 383.992 102.286 383.955 102.291 383.915 cv
102.216 383.345 102.011 383.024 101.666 382.783 cv
101.326 382.534 100.825 382.388 100.35 382.299 cv
99.3811 382.126 98.5121 382.098 97.929 382.059 cv
97.3383 382.026 97.0233 382.008 97.0233 382.008 cv
97.0868 380.233 li
cp
.709804 .701961 .768627 rgb
f
97.055 381.121 mo
90.6058 377.237 li
95.1201 364.595 li
101.978 367.044 li
97.055 381.121 li
cp
.427451 .439216 .533333 rgb
f
104.882 368.862 mo
91.998 364.261 li
91.6154 364.125 91.4161 363.704 91.5527 363.321 cv
91.5527 363.321 li
91.6893 362.939 92.1102 362.739 92.4927 362.876 cv
105.377 367.477 li
105.76 367.614 105.959 368.034 105.823 368.417 cv
105.823 368.417 li
105.686 368.8 105.265 368.999 104.882 368.862 cv
cp
.709804 .701961 .768627 rgb
f
103.522 371.032 mo
91.6765 366.802 li
91.294 366.666 91.0946 366.245 91.2312 365.862 cv
91.2312 365.862 li
91.3678 365.48 91.7887 365.28 92.1712 365.417 cv
104.017 369.647 li
104.399 369.783 104.599 370.204 104.462 370.587 cv
104.462 370.587 li
104.325 370.969 103.905 371.169 103.522 371.032 cv
cp
f
102.242 373.074 mo
91.3731 369.193 li
90.9905 369.057 90.7911 368.636 90.9277 368.253 cv
90.9277 368.253 li
91.0643 367.871 91.4852 367.671 91.8678 367.808 cv
102.737 371.689 li
103.12 371.826 103.319 372.247 103.182 372.629 cv
103.182 372.629 li
103.046 373.012 102.625 373.211 102.242 373.074 cv
cp
f
100.88 375.088 mo
91.1518 371.614 li
90.7692 371.477 90.5698 371.056 90.7064 370.673 cv
90.7064 370.673 li
90.843 370.291 91.2639 370.091 91.6465 370.228 cv
101.375 373.702 li
101.758 373.839 101.957 374.26 101.821 374.642 cv
101.821 374.642 li
101.684 375.025 101.263 375.224 100.88 375.088 cv
cp
f
99.5767 377.121 mo
90.8724 374.013 li
90.4899 373.876 90.2905 373.456 90.4271 373.073 cv
90.4271 373.073 li
90.5637 372.69 90.9846 372.491 91.3672 372.628 cv
100.071 375.736 li
100.454 375.872 100.653 376.293 100.517 376.676 cv
100.517 376.676 li
100.38 377.059 99.9593 377.258 99.5767 377.121 cv
cp
f
82.6663 379.686 mo
89.5242 377.237 li
85.0099 364.595 li
78.152 367.044 li
82.6663 379.686 li
cp
.427451 .439216 .533333 rgb
f
75.2476 368.862 mo
88.132 364.261 li
88.5146 364.125 88.714 363.704 88.5774 363.321 cv
88.5774 363.321 li
88.4408 362.939 88.0199 362.739 87.6373 362.876 cv
74.7528 367.477 li
74.3703 367.614 74.1709 368.034 74.3075 368.417 cv
74.3075 368.417 li
74.4441 368.8 74.865 368.999 75.2476 368.862 cv
cp
.709804 .701961 .768627 rgb
f
76.6081 371.032 mo
88.4535 366.802 li
88.8361 366.666 89.0355 366.245 88.8989 365.862 cv
88.8989 365.862 li
88.7622 365.48 88.3414 365.28 87.9588 365.417 cv
76.1134 369.647 li
75.7308 369.783 75.5314 370.204 75.668 370.587 cv
75.668 370.587 li
75.8046 370.969 76.2255 371.169 76.6081 371.032 cv
cp
f
77.8877 373.074 mo
88.757 369.193 li
89.1395 369.057 89.3389 368.636 89.2023 368.253 cv
89.2023 368.253 li
89.0657 367.871 88.6448 367.671 88.2623 367.808 cv
77.393 371.689 li
77.0104 371.826 76.8111 372.247 76.9477 372.629 cv
76.9477 372.629 li
77.0843 373.012 77.5052 373.211 77.8877 373.074 cv
cp
f
79.2495 375.088 mo
88.9783 371.614 li
89.3608 371.477 89.5602 371.056 89.4236 370.673 cv
89.4236 370.673 li
89.287 370.291 88.8661 370.091 88.4835 370.228 cv
78.7548 373.702 li
78.3723 373.839 78.1729 374.26 78.3095 374.642 cv
78.3095 374.642 li
78.4461 375.025 78.867 375.224 79.2495 375.088 cv
cp
f
80.5533 377.121 mo
89.2576 374.013 li
89.6402 373.876 89.8396 373.456 89.7029 373.073 cv
89.7029 373.073 li
89.5663 372.69 89.1455 372.491 88.7629 372.628 cv
80.0586 375.736 li
79.676 375.872 79.4766 376.293 79.6132 376.676 cv
79.6132 376.676 li
79.7498 377.059 80.1707 377.258 80.5533 377.121 cv
cp
f
97.2422 382.003 mo
97.2422 385.964 94.0313 389.175 90.0705 389.175 cv
86.1097 389.175 82.8989 385.964 82.8989 382.003 cv
82.8989 378.042 86.1097 374.832 90.0705 374.832 cv
94.0313 374.832 97.2422 378.042 97.2422 382.003 cv
cp
.427451 .439216 .533333 rgb
f
96.0285 382.003 mo
96.0285 385.294 93.361 387.961 90.0705 387.961 cv
86.78 387.961 84.1125 385.294 84.1125 382.003 cv
84.1125 378.713 86.78 376.045 90.0705 376.045 cv
93.361 376.045 96.0285 378.713 96.0285 382.003 cv
cp
.709804 .701961 .768627 rgb
f
94.1289 379.686 mo
94.1289 380.539 93.4373 381.231 92.5842 381.231 cv
91.7311 381.231 91.0396 380.539 91.0396 379.686 cv
91.0396 378.833 91.7311 378.142 92.5842 378.142 cv
93.4373 378.142 94.1289 378.833 94.1289 379.686 cv
cp
.152941 .105882 .172549 rgb
f
94.1289 383.342 mo
94.1289 383.955 93.632 384.452 93.0191 384.452 cv
92.4061 384.452 91.9092 383.955 91.9092 383.342 cv
91.9092 382.729 92.4061 382.232 93.0191 382.232 cv
93.632 382.232 94.1289 382.729 94.1289 383.342 cv
cp
f
87.2661 384.43 mo
83.1391 385.316 79.0436 385.31 74.979 384.43 cv
74.065 384.43 73.324 383.69 73.324 382.776 cv
73.324 380.9 li
73.324 379.986 74.065 379.245 74.979 379.245 cv
87.2661 379.245 li
88.1801 379.245 88.9211 379.986 88.9211 380.9 cv
88.9211 382.776 li
88.9211 383.69 88.1801 384.43 87.2661 384.43 cv
cp
.709804 .701961 .768627 rgb
f
76.8547 381.838 mo
76.8547 382.417 76.3854 382.886 75.8065 382.886 cv
75.2276 382.886 74.7583 382.417 74.7583 381.838 cv
74.7583 381.259 75.2276 380.79 75.8065 380.79 cv
76.3854 380.79 76.8547 381.259 76.8547 381.838 cv
cp
.419608 .388235 .427451 rgb
f
87.6121 381.838 mo
87.6121 382.417 87.1428 382.886 86.564 382.886 cv
85.9851 382.886 85.5158 382.417 85.5158 381.838 cv
85.5158 381.259 85.9851 380.79 86.564 380.79 cv
87.1428 380.79 87.6121 381.259 87.6121 381.838 cv
cp
f
83.7981 383.217 mo
78.447 383.217 li
78.447 381.121 li
83.7981 381.121 li
83.7981 383.217 li
cp
f
20.4002 364.621 mo
20.4002 364.621 li
20.7333 364.881 21.2143 364.822 21.4746 364.489 cv
28.1497 355.951 li
28.41 355.618 28.3511 355.137 28.0181 354.876 cv
28.0181 354.876 li
27.6851 354.616 27.2041 354.675 26.9437 355.008 cv
20.2686 363.547 li
20.0083 363.88 20.0672 364.361 20.4002 364.621 cv
cp
.152941 .105882 .172549 rgb
f
70.3289 371.235 mo
70.3289 371.235 li
70.3289 370.561 69.7826 370.015 69.1086 370.015 cv
64.0076 370.015 li
63.3336 370.015 62.7873 370.561 62.7873 371.235 cv
62.7873 371.235 li
70.3289 371.235 li
cp
1 0 .388235 rgb
f
70.3289 373.85 mo
70.3289 373.85 li
70.3289 373.176 69.7826 372.629 69.1086 372.629 cv
64.0076 372.629 li
63.3336 372.629 62.7873 373.176 62.7873 373.85 cv
62.7873 373.85 li
70.3289 373.85 li
cp
f
70.3289 376.464 mo
70.3289 376.464 li
70.3289 375.79 69.7826 375.243 69.1086 375.243 cv
64.0076 375.243 li
63.3336 375.243 62.7873 375.79 62.7873 376.464 cv
62.7873 376.464 li
70.3289 376.464 li
cp
f
266.666 206.17 mo
257.621 206.17 250.288 198.837 250.288 189.791 cv
250.288 180.745 257.621 173.412 266.666 173.412 cv
275.712 173.412 283.045 180.745 283.045 189.791 cv
283.045 198.837 275.712 206.17 266.666 206.17 cv
cp
266.666 169.2 mo
255.294 169.2 246.076 178.419 246.076 189.791 cv
246.076 201.163 255.294 210.382 266.666 210.382 cv
278.038 210.382 287.257 201.163 287.257 189.791 cv
287.257 178.419 278.038 169.2 266.666 169.2 cv
cp
.101961 .113725 .121569 rgb
f
266.666 204.737 mo
258.412 204.737 251.72 198.045 251.72 189.791 cv
251.72 181.537 258.412 174.845 266.666 174.845 cv
274.921 174.845 281.612 181.537 281.612 189.791 cv
281.612 198.045 274.921 204.737 266.666 204.737 cv
cp
266.666 172.761 mo
257.261 172.761 249.636 180.386 249.636 189.791 cv
249.636 199.196 257.261 206.821 266.666 206.821 cv
276.072 206.821 283.696 199.196 283.696 189.791 cv
283.696 180.386 276.072 172.761 266.666 172.761 cv
cp
.823529 0 0 rgb
f
266.666 206.574 mo
257.398 206.574 249.884 199.06 249.884 189.791 cv
249.884 180.522 257.398 173.008 266.666 173.008 cv
275.935 173.008 283.449 180.522 283.449 189.791 cv
283.449 199.06 275.935 206.574 266.666 206.574 cv
cp
266.666 170.668 mo
256.105 170.668 247.544 179.23 247.544 189.791 cv
247.544 200.352 256.105 208.914 266.666 208.914 cv
277.228 208.914 285.789 200.352 285.789 189.791 cv
285.789 179.23 277.228 170.668 266.666 170.668 cv
cp
.901961 .882353 .776471 rgb
f
202.419 190.826 mo
202.419 193.148 204.301 195.03 206.622 195.03 cv
208.944 195.03 210.826 193.148 210.826 190.826 cv
210.826 188.505 208.944 186.623 206.622 186.623 cv
204.301 186.623 202.419 188.505 202.419 190.826 cv
cp
0 0 0 rgb
f
203.626 190.826 mo
203.626 192.481 204.968 193.822 206.622 193.822 cv
208.277 193.822 209.619 192.481 209.619 190.826 cv
209.619 189.171 208.277 187.83 206.622 187.83 cv
204.968 187.83 203.626 189.171 203.626 190.826 cv
cp
.823529 0 0 rgb
f
169.844 183.901 mo
166.63 183.901 163.96 186.517 163.893 189.732 cv
163.859 191.322 164.446 192.831 165.547 193.979 cv
166.648 195.128 168.131 195.779 169.722 195.813 cv
170.108 195.821 171.129 195.825 172.607 195.825 cv
179.945 195.825 198.814 195.709 207.083 195.365 cv
209.472 195.266 211.375 193.39 211.509 191.002 cv
212.016 190.888 li
211.517 190.86 li
211.586 189.606 211.158 188.404 210.311 187.478 cv
209.466 186.553 208.312 186.02 207.061 185.975 cv
200.512 185.745 188.417 185.002 179.584 184.46 cv
174.666 184.158 170.781 183.919 169.974 183.902 cv
169.844 183.901 li
cp
172.608 196.825 mo
172.607 196.825 172.607 196.825 172.607 196.825 cv
171.118 196.825 170.09 196.821 169.701 196.813 cv
167.843 196.773 166.112 196.013 164.826 194.671 cv
163.54 193.33 162.853 191.568 162.893 189.71 cv
162.972 185.956 166.09 182.901 169.844 182.901 cv
169.995 182.902 li
170.822 182.92 174.523 183.147 179.646 183.461 cv
188.472 184.003 200.56 184.746 207.096 184.976 cv
208.618 185.029 210.022 185.678 211.049 186.803 cv
212.079 187.93 212.599 189.391 212.515 190.916 cv
212.507 191.058 li
212.344 193.962 210.03 196.243 207.125 196.364 cv
198.84 196.709 179.954 196.825 172.608 196.825 cv
cp
.270588 .282353 .278431 rgb
f
169.916 206.674 mo
160.614 206.674 153.074 199.134 153.074 189.832 cv
153.074 180.53 160.614 172.99 169.916 172.99 cv
179.218 172.99 186.758 180.53 186.758 189.832 cv
186.758 199.134 179.218 206.674 169.916 206.674 cv
cp
169.916 168.659 mo
158.222 168.659 148.743 178.139 148.743 189.832 cv
148.743 201.526 158.222 211.005 169.916 211.005 cv
181.61 211.005 191.089 201.526 191.089 189.832 cv
191.089 178.139 181.61 168.659 169.916 168.659 cv
cp
.101961 .113725 .121569 rgb
f
169.916 203.868 mo
162.164 203.868 155.88 197.584 155.88 189.832 cv
155.88 182.08 162.164 175.796 169.916 175.796 cv
177.668 175.796 183.952 182.08 183.952 189.832 cv
183.952 197.584 177.668 203.868 169.916 203.868 cv
cp
169.916 173.422 mo
160.853 173.422 153.506 180.769 153.506 189.832 cv
153.506 198.895 160.853 206.242 169.916 206.242 cv
178.979 206.242 186.326 198.895 186.326 189.832 cv
186.326 180.769 178.979 173.422 169.916 173.422 cv
cp
.823529 0 0 rgb
f
169.916 206.215 mo
160.868 206.215 153.533 198.88 153.533 189.832 cv
153.533 180.784 160.868 173.45 169.916 173.45 cv
178.964 173.45 186.298 180.784 186.298 189.832 cv
186.298 198.88 178.964 206.215 169.916 206.215 cv
cp
169.916 171.165 mo
159.607 171.165 151.249 179.523 151.249 189.832 cv
151.249 200.141 159.607 208.499 169.916 208.499 cv
180.225 208.499 188.583 200.141 188.583 189.832 cv
188.583 179.523 180.225 171.165 169.916 171.165 cv
cp
.901961 .882353 .776471 rgb
f
164.979 189.832 mo
164.979 192.559 167.19 194.769 169.916 194.769 cv
172.642 194.769 174.853 192.559 174.853 189.832 cv
174.853 187.106 172.642 184.895 169.916 184.895 cv
167.19 184.895 164.979 187.106 164.979 189.832 cv
cp
.270588 .282353 .278431 rgb
f
260.894 189.954 mo
260.894 193.052 263.405 195.564 266.504 195.564 cv
269.602 195.564 272.114 193.052 272.114 189.954 cv
272.114 186.855 269.602 184.344 266.504 184.344 cv
263.405 184.344 260.894 186.855 260.894 189.954 cv
cp
.101961 .113725 .121569 rgb
f
239.074 144.331 mo
235.153 144.491 232.066 146.192 232.066 148.271 cv
232.066 150.351 235.153 152.052 239.074 152.212 cv
239.074 144.331 li
cp
.65098 .686275 .654902 rgb
f
237.355 144.415 mo
237.182 144.435 237.006 144.45 236.838 144.476 cv
236.668 144.502 236.55 144.61 236.55 144.731 cv
236.55 151.812 li
236.55 151.933 236.668 152.041 236.838 152.067 cv
237.006 152.093 237.182 152.108 237.355 152.128 cv
237.355 144.415 li
cp
.270588 .282353 .278431 rgb
f
266.393 191.687 mo
226.791 147.359 li
228.876 145.497 li
268.478 189.824 li
266.393 191.687 li
cp
.65098 .686275 .654902 rgb
f
266.149 192.074 mo
245.38 169.029 li
248.147 166.534 li
268.917 189.579 li
266.149 192.074 li
cp
.101961 .113725 .121569 rgb
f
268.995 188.38 mo
268.6 188.38 268.207 188.214 267.931 187.889 cv
253.987 171.525 li
253.486 170.938 253.557 170.056 254.145 169.555 cv
254.732 169.055 255.614 169.126 256.114 169.713 cv
270.058 186.077 li
270.559 186.664 270.488 187.546 269.9 188.047 cv
269.638 188.271 269.315 188.38 268.995 188.38 cv
cp
f
195.325 176.284 mo
188.124 167.135 li
190.32 165.406 li
197.521 174.555 li
195.325 176.284 li
cp
.419608 .388235 .427451 rgb
f
206.087 198.114 mo
205.521 198.114 204.921 198.078 204.287 198.004 cv
169.331 194.798 li
167.331 194.591 165.71 193.13 165.181 191.075 cv
164.652 189.018 165.367 186.955 167.003 185.82 cv
191.35 169.131 li
192.198 168.549 193.357 168.765 193.94 169.614 cv
194.522 170.463 194.306 171.623 193.457 172.205 cv
169.119 188.889 li
168.593 189.253 168.753 190 168.791 190.146 cv
168.828 190.292 169.048 191.022 169.693 191.089 cv
204.672 194.297 li
206.593 194.521 207.971 194.312 208.696 193.701 cv
209.228 193.253 209.516 192.498 209.578 191.392 cv
209.707 182.054 li
209.721 181.025 210.542 180.222 211.596 180.217 cv
212.625 180.231 213.448 181.077 213.433 182.106 cv
213.302 191.521 li
213.179 193.756 212.438 195.422 211.097 196.551 cv
209.854 197.598 208.205 198.114 206.087 198.114 cv
cp
0 0 0 rgb
f
199.179 175.792 mo
199.692 176.41 li
201.696 179.284 205.106 180.852 208.595 180.504 cv
216.655 179.7 li
221.046 179.261 224.832 176.635 226.78 172.675 cv
226.83 172.581 li
235.304 157.587 li
231.687 153.538 li
199.179 175.792 li
cp
207.634 184.279 mo
203.312 184.28 199.212 182.185 196.687 178.616 cv
190.98 171.872 li
193.826 169.464 li
196.759 172.931 li
232.284 148.612 li
239.862 157.096 li
230.1 174.37 li
227.572 179.466 222.688 182.843 217.025 183.409 cv
208.965 184.213 li
208.521 184.258 208.076 184.279 207.634 184.279 cv
cp
f
184.41 167.435 mo
187.147 168.397 192.698 167.327 200.183 167.163 cv
200.183 167.163 200.338 166.081 200.175 164.983 cv
200.175 164.983 li
200.012 163.885 198.919 163.112 197.732 163.2 cv
191.215 163.682 184.837 162.321 178.62 160.31 cv
177.487 159.944 175.475 160.174 175.221 161.852 cv
175.221 161.852 179.388 165.913 184.41 167.435 cv
cp
.101961 .113725 .121569 rgb
f
197.726 163.201 mo
191.211 163.681 184.835 162.321 178.62 160.31 cv
178.603 160.305 178.583 160.303 178.567 160.298 cv
178.567 160.298 182.119 163.553 186.603 163.99 cv
193.11 164.624 197.726 163.201 197.726 163.201 cv
cp
.419608 .388235 .427451 rgb
f
225.528 148.126 mo
224.568 148.126 224.129 147.893 223.554 147.247 cv
223.364 147.034 223.127 146.768 222.492 146.375 cv
219.709 144.652 219.204 144.678 216.406 144.811 cv
215.228 144.866 213.761 144.932 211.663 144.911 cv
210.941 144.902 210.363 144.31 210.372 143.587 cv
210.38 142.871 210.964 142.296 211.679 142.296 cv
211.685 142.296 211.69 142.296 211.695 142.296 cv
213.715 142.325 215.137 142.253 216.282 142.198 cv
219.474 142.044 220.544 142.093 223.869 144.151 cv
224.828 144.745 225.253 145.223 225.507 145.508 cv
225.51 145.511 225.512 145.513 225.514 145.516 cv
225.951 145.489 227.037 145.389 228.018 145.272 cv
228.737 145.192 229.386 145.7 229.471 146.417 cv
229.556 147.134 229.043 147.784 228.326 147.869 cv
227.035 148.022 226.166 148.126 225.528 148.126 cv
cp
.65098 .686275 .654902 rgb
f
211.631 147.15 mo
211.405 147.15 211.207 146.986 211.171 146.756 cv
211.131 146.501 211.305 146.264 211.56 146.224 cv
213.446 145.929 214.8 145.806 216.369 145.663 cv
217.013 145.604 217.7 145.542 218.485 145.462 cv
218.743 144.974 219.297 143.673 218.345 142.963 cv
218.139 142.809 218.097 142.517 218.25 142.311 cv
218.404 142.104 218.695 142.061 218.903 142.216 cv
220.387 143.323 219.723 145.274 219.164 146.151 cv
219.087 146.271 218.96 146.35 218.819 146.364 cv
217.929 146.457 217.165 146.526 216.453 146.591 cv
214.901 146.732 213.56 146.854 211.703 147.145 cv
211.679 147.148 211.655 147.15 211.631 147.15 cv
cp
.270588 .282353 .278431 rgb
f
212.164 144.914 mo
212.001 144.914 211.835 144.913 211.663 144.911 cv
210.941 144.902 210.363 144.31 210.372 143.587 cv
210.38 142.871 210.964 142.296 211.679 142.296 cv
211.685 142.296 211.69 142.296 211.695 142.296 cv
212.919 142.309 213.842 142.266 214.735 142.222 cv
215.938 142.163 217.071 142.107 218.653 142.221 cv
219.374 142.272 219.916 142.898 219.864 143.619 cv
219.813 144.339 219.193 144.887 218.466 144.829 cv
217.042 144.727 216.032 144.777 214.864 144.834 cv
214.092 144.872 213.23 144.914 212.164 144.914 cv
cp
0 0 0 rgb
f
211.185 178.023 mo
210.373 177.996 li
210.374 177.995 210.432 176.258 210.449 175.239 cv
210.459 174.604 210.719 174.104 211.161 173.863 cv
211.527 173.664 211.96 173.679 212.316 173.901 cv
212.74 174.167 212.967 174.663 212.94 175.264 cv
212.917 175.78 213.137 176.025 213.365 176.039 cv
213.58 176.056 213.816 175.875 213.848 175.457 cv
213.931 174.388 214.043 172.444 214.161 170.399 cv
214.313 167.781 214.469 165.073 214.589 163.711 cv
215.397 163.783 li
215.279 165.132 215.123 167.833 214.971 170.446 cv
214.853 172.497 214.74 174.447 214.658 175.519 cv
214.587 176.431 213.896 176.889 213.316 176.849 cv
212.711 176.812 212.083 176.289 212.13 175.228 cv
212.143 174.927 212.054 174.695 211.886 174.589 cv
211.782 174.524 211.655 174.519 211.548 174.577 cv
211.371 174.673 211.266 174.919 211.261 175.252 cv
211.244 176.277 211.185 178.023 211.185 178.023 cv
cp
.419608 .388235 .427451 rgb
f
221.609 193.1 mo
220.079 187.873 li
228.35 182.416 li
231.574 188.999 li
221.609 193.1 li
cp
0 0 0 rgb
f
231.784 190.41 mo
227.179 181.647 li
227.042 181.386 227.142 181.065 227.402 180.928 cv
227.402 180.928 li
227.662 180.791 227.984 180.891 228.121 181.151 cv
232.726 189.915 li
232.863 190.175 232.763 190.497 232.502 190.633 cv
232.502 190.633 li
232.242 190.77 231.92 190.67 231.784 190.41 cv
cp
.270588 .282353 .278431 rgb
f
229.996 190.898 mo
225.762 182.842 li
225.626 182.581 225.726 182.26 225.986 182.123 cv
225.986 182.123 li
226.246 181.986 226.568 182.086 226.705 182.347 cv
230.938 190.403 li
231.075 190.663 230.975 190.985 230.715 191.122 cv
230.715 191.122 li
230.455 191.259 230.133 191.158 229.996 190.898 cv
cp
f
228.314 191.359 mo
224.429 183.966 li
224.292 183.706 224.393 183.384 224.653 183.247 cv
224.653 183.247 li
224.913 183.11 225.235 183.211 225.371 183.471 cv
229.256 190.863 li
229.393 191.124 229.293 191.445 229.033 191.582 cv
229.033 191.582 li
228.772 191.719 228.451 191.619 228.314 191.359 cv
cp
f
226.602 191.763 mo
223.125 185.146 li
222.989 184.886 223.089 184.564 223.349 184.427 cv
223.349 184.427 li
223.609 184.291 223.931 184.391 224.068 184.651 cv
227.545 191.268 li
227.681 191.528 227.581 191.85 227.321 191.987 cv
227.321 191.987 li
227.061 192.123 226.739 192.023 226.602 191.763 cv
cp
f
224.912 192.207 mo
221.801 186.287 li
221.664 186.026 221.764 185.705 222.024 185.568 cv
222.024 185.568 li
222.285 185.431 222.606 185.531 222.743 185.791 cv
225.854 191.712 li
225.991 191.972 225.891 192.294 225.63 192.43 cv
225.63 192.43 li
225.37 192.567 225.048 192.467 224.912 192.207 cv
cp
f
221.276 193.662 mo
219.336 195.771 216.053 195.907 213.944 193.966 cv
211.835 192.025 211.699 188.742 213.64 186.633 cv
215.581 184.524 218.864 184.388 220.973 186.329 cv
223.081 188.27 223.217 191.553 221.276 193.662 cv
cp
0 0 0 rgb
f
220.63 193.067 mo
219.018 194.819 216.291 194.932 214.539 193.32 cv
212.787 191.707 212.674 188.98 214.286 187.228 cv
215.899 185.476 218.626 185.363 220.378 186.976 cv
222.13 188.588 222.243 191.315 220.63 193.067 cv
cp
.270588 .282353 .278431 rgb
f
220.055 189.323 mo
219.637 189.778 218.93 189.807 218.476 189.389 cv
218.021 188.971 217.992 188.264 218.41 187.809 cv
218.828 187.355 219.535 187.326 219.989 187.744 cv
220.444 188.162 220.473 188.869 220.055 189.323 cv
cp
0 0 0 rgb
f
214.802 191.935 mo
212.171 190.384 209.994 188.373 208.261 185.913 cv
207.774 185.466 207.743 184.708 208.191 184.221 cv
209.11 183.223 li
209.558 182.736 210.315 182.705 210.802 183.153 cv
217.344 189.174 li
217.83 189.622 217.862 190.379 217.414 190.866 cv
216.495 191.865 li
216.047 192.351 215.289 192.383 214.802 191.935 cv
cp
.65098 .686275 .654902 rgb
f
210.53 185.452 mo
210.246 185.76 209.767 185.78 209.458 185.497 cv
209.15 185.213 209.13 184.733 209.414 184.425 cv
209.698 184.117 210.177 184.097 210.486 184.381 cv
210.794 184.664 210.814 185.144 210.53 185.452 cv
cp
.270588 .282353 .278431 rgb
f
216.257 190.724 mo
215.974 191.032 215.494 191.052 215.186 190.768 cv
214.877 190.484 214.857 190.005 215.141 189.696 cv
215.425 189.388 215.905 189.368 216.213 189.652 cv
216.521 189.936 216.541 190.416 216.257 190.724 cv
cp
f
213.551 189.589 mo
210.702 186.967 li
211.729 185.851 li
214.578 188.473 li
213.551 189.589 li
cp
f
215.685 178.695 mo
215.307 179.106 214.667 179.132 214.256 178.754 cv
213.845 178.376 213.818 177.736 214.197 177.325 cv
214.575 176.914 215.215 176.888 215.626 177.266 cv
216.036 177.644 216.063 178.284 215.685 178.695 cv
cp
0 0 0 rgb
f
231.581 186.674 mo
230.004 183.729 li
229.891 183.517 229.97 183.254 230.182 183.141 cv
230.98 182.714 li
231.191 182.601 231.454 182.68 231.568 182.891 cv
233.144 185.837 li
233.258 186.049 233.178 186.312 232.967 186.425 cv
232.168 186.852 li
231.957 186.965 231.694 186.886 231.581 186.674 cv
cp
f
209.277 178.173 mo
212.581 177.675 li
212.818 177.64 213.039 177.803 213.075 178.04 cv
213.21 178.935 li
213.246 179.173 213.082 179.394 212.845 179.429 cv
209.541 179.927 li
209.304 179.962 209.083 179.799 209.047 179.562 cv
208.913 178.666 li
208.877 178.429 209.04 178.208 209.277 178.173 cv
cp
.101961 .113725 .121569 rgb
f
219.02 151.906 mo
223.775 151.253 li
223.661 150.421 li
223.615 150.089 223.309 149.856 222.976 149.902 cv
219.425 150.39 li
219.092 150.436 218.86 150.742 218.905 151.075 cv
219.02 151.906 li
cp
.419608 .388235 .427451 rgb
f
213.956 154.302 mo
206.448 161.961 li
206.448 166.746 li
223.139 162.076 li
225.04 161.544 226.754 160.49 228.086 159.033 cv
232.066 154.68 li
228.172 150.314 li
218.899 151.761 li
217.021 152.054 215.287 152.945 213.956 154.302 cv
cp
1 0 0 rgb
f
206.448 161.961 mo
206.448 166.746 li
223.139 162.076 li
225.04 161.544 226.754 160.49 228.086 159.033 cv
232.066 154.68 li
231.912 154.507 li
206.448 161.961 li
cp
.823529 0 0 rgb
f
219.931 194.222 mo
219.931 194.222 220.011 194.407 220.143 194.887 cv
220.262 195.334 220.403 195.997 220.413 196.864 cv
220.413 197.721 220.306 198.825 219.673 199.968 cv
219.068 201.122 217.722 202.116 216.209 202.397 cv
215.457 202.558 214.675 202.595 213.894 202.542 cv
213.177 202.506 212.437 202.468 211.675 202.429 cv
210.149 202.351 208.539 202.268 206.873 202.183 cv
203.543 202.007 199.989 201.852 196.431 201.745 cv
196.208 201.746 195.987 201.709 195.762 201.751 cv
195.536 201.788 195.305 201.915 195.077 201.984 cv
194.849 202.062 194.628 202.038 194.407 202.027 cv
193.742 201.994 li
192.858 201.95 191.976 201.906 191.102 201.863 cv
189.353 201.777 187.632 201.692 185.967 201.609 cv
182.634 201.46 179.53 201.246 176.866 201.095 cv
171.541 200.772 167.995 200.487 167.995 200.487 cv
168.236 197.063 li
168.236 197.063 171.79 197.218 177.115 197.556 cv
179.776 197.736 182.884 197.908 186.208 198.171 cv
187.871 198.296 189.589 198.424 191.334 198.555 cv
192.207 198.62 193.087 198.686 193.97 198.752 cv
194.633 198.801 li
194.855 198.817 195.077 198.821 195.292 198.926 cv
195.508 199.023 195.72 199.178 195.938 199.242 cv
196.156 199.311 196.379 199.302 196.6 199.33 cv
200.142 199.664 203.688 199.95 207.014 200.187 cv
208.676 200.308 210.284 200.426 211.808 200.537 cv
212.572 200.592 213.315 200.646 214.034 200.699 cv
214.685 200.756 215.305 200.744 215.862 200.645 cv
216.987 200.459 217.795 199.88 218.242 199.131 cv
218.698 198.383 218.834 197.536 218.853 196.853 cv
218.871 196.161 218.775 195.613 218.692 195.253 cv
218.618 194.925 218.534 194.695 218.534 194.695 cv
219.931 194.222 li
cp
0 0 0 rgb
f
321.83 384.541 mo
367.149 385.268 li
373.259 385.209 li
373.43 384.779 li
367.063 384.561 li
321.737 383.8 li
321.83 384.541 li
cp
f
417.25 401.144 mo
409.936 401.063 404.073 395.069 404.154 387.755 cv
404.235 380.442 410.23 374.579 417.543 374.66 cv
424.857 374.741 430.72 380.735 430.639 388.048 cv
430.558 395.362 424.563 401.225 417.25 401.144 cv
cp
417.614 368.3 mo
406.787 368.18 397.914 376.859 397.794 387.685 cv
397.674 398.511 406.353 407.384 417.179 407.504 cv
428.005 407.624 436.879 398.945 436.999 388.119 cv
437.119 377.293 428.44 368.419 417.614 368.3 cv
cp
.2 .2 .203922 rgb
f
321.872 400.963 mo
314.64 400.883 308.843 394.956 308.923 387.725 cv
309.003 380.494 314.93 374.697 322.162 374.777 cv
329.393 374.857 335.19 380.784 335.11 388.015 cv
335.03 395.246 329.103 401.043 321.872 400.963 cv
cp
322.235 368.13 mo
311.333 368.009 302.397 376.749 302.276 387.652 cv
302.155 398.554 310.896 407.49 321.798 407.611 cv
332.7 407.732 341.636 398.991 341.757 388.089 cv
341.878 377.186 333.137 368.25 322.235 368.13 cv
cp
f
305.241 389.237 mo
305.346 379.989 312.953 372.548 322.202 372.65 cv
329.51 372.731 335.69 377.498 337.912 384.059 cv
339.027 387.352 342.012 389.644 345.489 389.683 cv
345.489 389.683 li
345.63 376.741 335.218 366.096 322.276 365.953 cv
309.334 365.81 298.177 375.492 297.99 392.402 cv
305.241 389.237 li
cp
0 0 0 rgb
f
319.34 366.099 mo
307.692 367.342 298.163 376.788 297.99 392.402 cv
297.99 392.402 li
300.226 391.176 301.682 388.94 302.042 386.415 cv
303.439 376.609 309.634 370.37 317.342 368.597 cv
318.514 368.327 319.354 367.302 319.34 366.099 cv
319.34 366.099 li
cp
.309804 .368627 .427451 rgb
f
434.648 375.935 mo
429.48 368.621 419.946 365.194 411.019 368.161 cv
400.1 371.791 393.527 383.162 398.269 397.43 cv
403.447 392.668 li
400.855 384.864 405.094 376.406 412.897 373.812 cv
417.592 372.251 422.521 373.168 426.27 375.842 cv
434.648 375.935 li
cp
0 0 0 rgb
f
411.698 370.229 mo
417.898 368.168 424.437 369.722 429.038 373.732 cv
430.604 375.097 432.571 375.912 434.648 375.935 cv
434.648 375.935 li
429.48 368.621 419.946 365.194 411.019 368.161 cv
400.1 371.791 393.527 383.162 398.269 397.43 cv
398.269 397.43 li
399.72 396.096 400.381 394.096 399.979 392.167 cv
397.743 381.434 403.166 373.065 411.698 370.229 cv
cp
.309804 .368627 .427451 rgb
f
417.454 394.311 mo
413.915 394.272 411.078 391.371 411.117 387.832 cv
411.156 384.293 414.057 381.456 417.596 381.495 cv
421.135 381.535 423.972 384.435 423.933 387.974 cv
423.894 391.513 420.993 394.35 417.454 394.311 cv
cp
417.638 377.662 mo
411.983 377.6 407.347 382.134 407.284 387.79 cv
407.222 393.446 411.756 398.082 417.412 398.144 cv
423.068 398.207 427.703 393.672 427.766 388.017 cv
427.829 382.361 423.294 377.725 417.638 377.662 cv
cp
f
321.956 393.308 mo
318.953 393.275 316.545 390.813 316.578 387.81 cv
316.612 384.807 319.073 382.399 322.077 382.432 cv
325.08 382.465 327.488 384.927 327.455 387.93 cv
327.422 390.934 324.96 393.342 321.956 393.308 cv
cp
322.113 379.179 mo
317.313 379.126 313.378 382.974 313.325 387.774 cv
313.272 392.574 317.12 396.508 321.92 396.562 cv
326.72 396.615 330.655 392.766 330.708 387.966 cv
330.761 383.166 326.913 379.232 322.113 379.179 cv
cp
f
317.768 387.823 mo
317.742 390.179 319.63 392.109 321.985 392.135 cv
324.341 392.161 326.271 390.273 326.298 387.918 cv
326.324 385.562 324.435 383.632 322.08 383.605 cv
319.724 383.579 317.794 385.468 317.768 387.823 cv
cp
0 0 0 rgb
f
321.258 392.066 mo
366.573 393.016 li
372.707 391.963 li
372.942 388.713 li
366.593 387.704 li
321.276 386.502 li
321.258 392.066 li
cp
f
413.29 387.745 mo
413.317 390.101 415.249 391.988 417.604 391.961 cv
419.959 391.934 421.847 390.002 421.82 387.647 cv
421.792 385.291 419.861 383.404 417.505 383.431 cv
415.15 383.458 413.262 385.39 413.29 387.745 cv
cp
f
410.507 382.65 mo
412.92 380.489 li
394.035 359.404 li
391.622 361.565 li
410.507 382.65 li
cp
.309804 .368627 .427451 rgb
f
390.804 365.857 mo
388.119 369.472 385.792 373.714 383.975 377.893 cv
369.173 377.729 li
369.333 363.287 li
372.56 362.249 375.754 361.468 378.552 361.223 cv
381.847 360.936 385.209 360.802 388.276 360.835 cv
388.305 360.836 388.334 360.836 388.363 360.836 cv
390.925 360.868 392.333 363.8 390.804 365.857 cv
cp
378.378 359.231 mo
366.424 360.275 343.315 374 343.315 374 cv
334.596 369.339 li
342.011 376.836 347.942 385.59 343.227 399.232 cv
376.029 399.686 li
379.049 399.719 381.565 397.418 381.832 394.41 cv
382.596 385.791 389.722 367.535 398.089 361.049 cv
400.398 359.259 390.072 358.21 378.378 359.231 cv
cp
0 0 0 rgb
f
348.284 391.487 mo
347.867 391.103 347.505 390.641 347.24 390.081 cv
346.885 389.328 347.207 388.429 347.96 388.074 cv
348.712 387.718 349.613 388.04 349.967 388.793 cv
350.376 389.656 351.732 390.085 352.973 390.418 cv
360.764 392.511 li
361.606 392.737 362.401 392.951 363.161 392.973 cv
363.478 392.98 371.734 392.322 372.016 392.312 cv
373.186 392.273 374.512 392.228 375.168 391.738 cv
375.881 391.206 376.26 390.139 376.646 388.903 cv
379.172 380.824 li
379.42 380.03 380.266 379.587 381.061 379.835 cv
381.854 380.084 382.298 380.93 382.05 381.723 cv
379.525 389.804 li
379.103 391.151 378.526 392.995 376.972 394.155 cv
375.558 395.21 373.651 395.275 372.119 395.327 cv
371.859 395.335 363.534 396 363.076 395.987 cv
361.962 395.956 360.91 395.673 359.982 395.424 cv
352.191 393.33 li
351.172 393.057 349.5 392.608 348.284 391.487 cv
cp
.223529 .254902 .298039 rgb
f
346.913 385.275 mo
346.988 385.049 347.116 384.838 347.299 384.662 cv
347.899 384.084 348.854 384.103 349.432 384.702 cv
349.978 385.27 350.946 385.596 351.799 385.885 cv
353.26 386.378 360.657 388.406 362.763 388.517 cv
363.625 388.53 367.088 386.889 368.752 386.101 cv
371.402 384.844 372.146 384.526 372.8 384.527 cv
374.41 384.532 375.846 385.314 376.548 386.568 cv
376.954 387.294 376.696 388.213 375.97 388.62 cv
375.242 389.027 374.324 388.768 373.917 388.042 cv
373.768 387.776 373.352 387.577 372.902 387.547 cv
372.446 387.687 371.121 388.315 370.044 388.826 cv
366.494 390.508 364.059 391.605 362.605 391.529 cv
359.895 391.386 352.074 389.16 350.835 388.743 cv
349.712 388.363 348.315 387.892 347.259 386.794 cv
346.857 386.377 346.744 385.789 346.913 385.275 cv
cp
.309804 .368627 .427451 rgb
f
416.641 390.136 mo
419.662 387.43 li
403.354 369.221 li
400.332 371.928 li
416.641 390.136 li
cp
0 0 0 rgb
f
395.149 362.511 mo
398.476 363.06 401.46 363.341 404.577 363.099 cv
405.147 363.055 405.634 362.726 405.765 362.292 cv
406.566 359.624 406.415 356.845 405.937 353.987 cv
405.853 353.481 405.306 353.086 404.653 353.052 cv
400.798 352.851 397.976 352.969 395.711 353.526 cv
394.598 353.565 393.7 354.303 393.638 355.23 cv
393.586 360.798 li
393.531 361.612 394.19 362.353 395.149 362.511 cv
cp
f
406.318 357.723 mo
406.289 356.494 406.148 355.249 405.937 353.987 cv
405.853 353.481 405.306 353.086 404.653 353.052 cv
400.798 352.851 397.976 352.969 395.711 353.526 cv
394.598 353.565 393.7 354.303 393.638 355.23 cv
393.638 355.23 li
393.626 356.53 394.668 357.594 395.968 357.608 cv
406.318 357.723 li
cp
.309804 .368627 .427451 rgb
f
405.937 353.987 mo
405.853 353.481 405.306 353.086 404.653 353.052 cv
404.132 353.025 403.632 353.005 403.147 352.989 cv
403.525 363.136 li
403.876 363.122 404.224 363.127 404.577 363.099 cv
405.147 363.055 405.634 362.726 405.765 362.292 cv
406.566 359.624 406.415 356.845 405.937 353.987 cv
cp
.65098 .690196 .654902 rgb
f
406.318 357.723 mo
406.289 356.494 406.148 355.249 405.937 353.987 cv
405.853 353.481 405.306 353.086 404.653 353.052 cv
404.132 353.025 403.632 353.005 403.147 352.989 cv
403.322 357.69 li
406.318 357.723 li
cp
.721569 1 1 rgb
f
378.196 382.077 mo
378.196 380.726 379.291 379.632 380.642 379.632 cv
381.992 379.632 383.087 380.726 383.087 382.077 cv
383.087 383.428 381.992 384.522 380.642 384.522 cv
379.291 384.522 378.196 383.428 378.196 382.077 cv
cp
.309804 .368627 .427451 rgb
f
379.035 382.077 mo
379.035 381.19 379.754 380.47 380.642 380.47 cv
381.529 380.47 382.248 381.19 382.248 382.077 cv
382.248 382.964 381.529 383.684 380.642 383.684 cv
379.754 383.684 379.035 382.964 379.035 382.077 cv
cp
0 0 0 rgb
f
358.341 363.904 mo
371.533 355.797 li
375.686 353.245 380.796 352.791 385.333 354.572 cv
389.275 356.12 li
390.589 356.635 391.219 358.133 390.67 359.433 cv
389.036 363.304 li
388.521 364.524 387.271 365.268 385.953 365.139 cv
376.656 364.228 li
360.121 368.195 li
358.9 368.488 357.663 367.769 357.314 366.563 cv
357.314 366.563 li
357.019 365.546 357.439 364.458 358.341 363.904 cv
cp
.309804 .368627 .427451 rgb
f
377.387 362.606 mo
389.364 362.513 li
389.369 362.5 389.373 362.49 389.378 362.478 cv
390.089 360.759 388.839 358.863 386.98 358.842 cv
380.502 358.77 li
378.149 358.744 375.813 359.18 373.627 360.052 cv
358.569 366.062 li
357.634 366.435 357.458 367.778 358.342 368.26 cv
358.613 368.408 377.387 362.606 377.387 362.606 cv
cp
0 0 0 rgb
f
348.259 369.315 mo
346.424 370.55 344.511 372.028 342.3 371.953 cv
340.673 371.898 339.215 370.973 337.922 369.984 cv
331.39 364.991 330.824 365.914 328.759 368.263 cv
337.594 371.555 340.821 378.488 341.656 379.096 cv
342.491 379.704 343.632 380.02 344.569 379.586 cv
345.222 379.284 345.672 378.679 346.107 378.108 cv
348.945 374.381 352.343 371.083 356.152 368.358 cv
356.581 368.051 357.051 367.695 357.135 367.174 cv
357.241 366.506 356.606 365.902 355.938 365.794 cv
355.271 365.687 354.602 365.939 353.98 366.204 cv
351.98 367.057 350.062 368.1 348.259 369.315 cv
cp
.341176 .2 .196078 rgb
f
321.472 364.661 mo
328.544 364.777 li
329.474 364.792 330.221 365.551 330.221 366.482 cv
330.336 368.914 li
326.552 367.513 322.434 367.396 319.76 367.93 cv
319.927 366.052 li
319.997 365.255 320.672 364.648 321.472 364.661 cv
cp
f
381.938 377.02 mo
378.647 374.053 li
382.674 367.254 li
386.362 369.439 li
381.938 377.02 li
cp
0 0 0 rgb
f
387.836 370.816 mo
380.908 366.711 li
380.702 366.589 380.634 366.324 380.756 366.118 cv
380.756 366.118 li
380.878 365.912 381.143 365.844 381.349 365.966 cv
388.278 370.071 li
388.483 370.192 388.551 370.458 388.43 370.664 cv
388.43 370.664 li
388.308 370.869 388.042 370.937 387.836 370.816 cv
cp
f
386.807 371.917 mo
380.437 368.143 li
380.231 368.021 380.163 367.756 380.285 367.55 cv
380.285 367.55 li
380.407 367.344 380.672 367.276 380.878 367.398 cv
387.248 371.172 li
387.454 371.293 387.522 371.559 387.4 371.765 cv
387.4 371.765 li
387.278 371.97 387.012 372.038 386.807 371.917 cv
cp
f
385.838 372.953 mo
379.993 369.491 li
379.787 369.369 379.719 369.103 379.841 368.898 cv
379.841 368.898 li
379.963 368.692 380.229 368.624 380.434 368.746 cv
386.279 372.208 li
386.485 372.33 386.553 372.596 386.431 372.801 cv
386.431 372.801 li
386.309 373.007 386.044 373.075 385.838 372.953 cv
cp
f
384.825 373.964 mo
379.594 370.864 li
379.388 370.743 379.32 370.477 379.442 370.271 cv
379.442 370.271 li
379.564 370.066 379.829 369.998 380.035 370.119 cv
385.267 373.219 li
385.472 373.34 385.54 373.606 385.419 373.812 cv
385.419 373.812 li
385.297 374.017 385.031 374.085 384.825 373.964 cv
cp
f
383.844 374.992 mo
379.163 372.22 li
378.957 372.098 378.889 371.832 379.011 371.626 cv
379.011 371.626 li
379.133 371.421 379.399 371.353 379.604 371.475 cv
384.285 374.247 li
384.491 374.369 384.559 374.635 384.437 374.841 cv
384.437 374.841 li
384.315 375.046 384.049 375.114 383.844 374.992 cv
cp
f
373.785 374.577 mo
378.022 373.931 li
376.832 366.12 li
372.595 366.765 li
373.785 374.577 li
cp
f
370.712 367.49 mo
378.674 366.277 li
378.91 366.241 379.073 366.02 379.037 365.784 cv
379.037 365.784 li
379.001 365.548 378.78 365.385 378.543 365.421 cv
370.582 366.634 li
370.346 366.67 370.183 366.891 370.219 367.127 cv
370.219 367.127 li
370.255 367.364 370.476 367.526 370.712 367.49 cv
cp
f
371.255 368.896 mo
378.574 367.782 li
378.811 367.746 378.973 367.525 378.937 367.288 cv
378.937 367.288 li
378.901 367.052 378.68 366.889 378.444 366.925 cv
371.125 368.04 li
370.888 368.076 370.726 368.297 370.762 368.534 cv
370.762 368.534 li
370.798 368.77 371.019 368.932 371.255 368.896 cv
cp
f
371.765 370.22 mo
378.481 369.197 li
378.718 369.161 378.88 368.94 378.844 368.704 cv
378.844 368.704 li
378.808 368.468 378.587 368.305 378.351 368.341 cv
371.635 369.364 li
371.399 369.4 371.236 369.621 371.272 369.857 cv
371.272 369.857 li
371.308 370.094 371.529 370.256 371.765 370.22 cv
cp
f
372.326 371.536 mo
378.338 370.621 li
378.574 370.585 378.737 370.364 378.701 370.127 cv
378.701 370.127 li
378.665 369.891 378.444 369.728 378.207 369.764 cv
372.196 370.68 li
371.96 370.716 371.797 370.937 371.833 371.173 cv
371.833 371.173 li
371.869 371.41 372.09 371.572 372.326 371.536 cv
cp
f
372.851 372.858 mo
378.23 372.038 li
378.466 372.002 378.629 371.782 378.593 371.545 cv
378.593 371.545 li
378.557 371.309 378.336 371.146 378.099 371.182 cv
372.721 372.002 li
372.485 372.038 372.322 372.258 372.358 372.495 cv
372.358 372.495 li
372.394 372.731 372.615 372.894 372.851 372.858 cv
cp
f
381.947 377.551 mo
381.502 379.84 379.287 381.335 376.998 380.891 cv
374.71 380.446 373.214 378.23 373.659 375.942 cv
374.103 373.653 376.319 372.158 378.608 372.603 cv
380.896 373.047 382.391 375.263 381.947 377.551 cv
cp
f
381.246 377.415 mo
380.876 379.316 379.036 380.559 377.134 380.189 cv
375.233 379.82 373.991 377.979 374.36 376.078 cv
374.729 374.177 376.57 372.935 378.472 373.304 cv
380.373 373.673 381.615 375.514 381.246 377.415 cv
cp
f
378.641 375.52 mo
378.546 376.013 378.068 376.335 377.575 376.239 cv
377.082 376.144 376.76 375.666 376.856 375.173 cv
376.952 374.68 377.429 374.358 377.922 374.454 cv
378.415 374.55 378.737 375.027 378.641 375.52 cv
cp
f
375.91 377.834 mo
373.426 377.883 371.06 377.42 368.81 376.456 cv
368.282 376.353 367.937 375.842 368.04 375.314 cv
368.25 374.23 li
368.353 373.702 368.864 373.357 369.392 373.459 cv
376.492 374.838 li
377.02 374.941 377.365 375.452 377.263 375.98 cv
377.052 377.064 li
376.95 377.592 376.438 377.937 375.91 377.834 cv
cp
f
370.185 375.168 mo
370.12 375.502 369.796 375.721 369.462 375.656 cv
369.127 375.591 368.909 375.267 368.974 374.933 cv
369.039 374.598 369.362 374.38 369.697 374.445 cv
370.031 374.51 370.25 374.833 370.185 375.168 cv
cp
f
376.401 376.375 mo
376.336 376.71 376.012 376.928 375.678 376.863 cv
375.343 376.798 375.125 376.474 375.19 376.14 cv
375.255 375.805 375.578 375.587 375.913 375.652 cv
376.247 375.717 376.466 376.041 376.401 376.375 cv
cp
f
374.042 376.744 mo
370.95 376.143 li
371.186 374.932 li
374.278 375.533 li
374.042 376.744 li
cp
f
378.319 379.648 mo
374.718 376.4 li
379.125 368.96 li
383.161 371.351 li
378.319 379.648 li
cp
.309804 .368627 .427451 rgb
f
384.775 372.857 mo
377.192 368.365 li
376.967 368.232 376.892 367.941 377.026 367.716 cv
377.026 367.716 li
377.159 367.491 377.45 367.417 377.675 367.55 cv
385.258 372.042 li
385.483 372.175 385.557 372.466 385.424 372.691 cv
385.424 372.691 li
385.29 372.916 385 372.99 384.775 372.857 cv
cp
.65098 .690196 .654902 rgb
f
383.648 374.062 mo
376.677 369.932 li
376.451 369.799 376.377 369.508 376.51 369.283 cv
376.51 369.283 li
376.644 369.058 376.934 368.984 377.16 369.117 cv
384.131 373.247 li
384.356 373.38 384.43 373.671 384.297 373.896 cv
384.297 373.896 li
384.164 374.121 383.873 374.195 383.648 374.062 cv
cp
f
382.588 375.197 mo
376.191 371.407 li
375.966 371.274 375.891 370.983 376.025 370.758 cv
376.025 370.758 li
376.158 370.533 376.449 370.458 376.674 370.592 cv
383.071 374.381 li
383.296 374.515 383.37 374.805 383.237 375.03 cv
383.237 375.03 li
383.104 375.255 382.813 375.33 382.588 375.197 cv
cp
f
381.479 376.302 mo
375.754 372.911 li
375.529 372.777 375.454 372.487 375.588 372.261 cv
375.588 372.261 li
375.721 372.036 376.012 371.962 376.237 372.095 cv
381.962 375.487 li
382.188 375.62 382.262 375.911 382.129 376.136 cv
382.129 376.136 li
381.995 376.361 381.705 376.436 381.479 376.302 cv
cp
f
380.405 377.428 mo
375.282 374.394 li
375.057 374.26 374.983 373.97 375.116 373.745 cv
375.116 373.745 li
375.25 373.519 375.54 373.445 375.765 373.578 cv
380.888 376.613 li
381.113 376.746 381.188 377.037 381.054 377.262 cv
381.054 377.262 li
380.921 377.487 380.63 377.562 380.405 377.428 cv
cp
f
369.396 376.973 mo
374.034 376.267 li
372.732 367.718 li
368.094 368.424 li
369.396 376.973 li
cp
.309804 .368627 .427451 rgb
f
366.034 369.218 mo
374.747 367.89 li
375.006 367.851 375.184 367.609 375.144 367.351 cv
375.144 367.351 li
375.105 367.092 374.863 366.914 374.604 366.954 cv
365.892 368.281 li
365.633 368.32 365.455 368.562 365.494 368.82 cv
365.494 368.82 li
365.534 369.079 365.776 369.257 366.034 369.218 cv
cp
.65098 .690196 .654902 rgb
f
366.628 370.757 mo
374.638 369.537 li
374.897 369.497 375.075 369.256 375.035 368.997 cv
375.035 368.997 li
374.996 368.738 374.754 368.56 374.496 368.6 cv
366.485 369.82 li
366.227 369.859 366.049 370.101 366.088 370.36 cv
366.088 370.36 li
366.128 370.618 366.369 370.796 366.628 370.757 cv
cp
f
367.186 372.205 mo
374.537 371.086 li
374.795 371.047 374.973 370.805 374.934 370.546 cv
374.934 370.546 li
374.894 370.287 374.653 370.11 374.394 370.149 cv
367.044 371.269 li
366.785 371.308 366.607 371.55 366.647 371.808 cv
366.647 371.808 li
366.686 372.067 366.928 372.245 367.186 372.205 cv
cp
f
367.8 373.646 mo
374.379 372.644 li
374.638 372.604 374.816 372.363 374.776 372.104 cv
374.776 372.104 li
374.737 371.845 374.495 371.667 374.237 371.707 cv
367.658 372.709 li
367.399 372.748 367.221 372.99 367.261 373.249 cv
367.261 373.249 li
367.3 373.507 367.542 373.685 367.8 373.646 cv
cp
f
368.375 375.092 mo
374.261 374.195 li
374.52 374.156 374.698 373.914 374.658 373.656 cv
374.658 373.656 li
374.619 373.397 374.377 373.219 374.119 373.259 cv
368.232 374.155 li
367.974 374.194 367.796 374.436 367.835 374.695 cv
367.835 374.695 li
367.875 374.954 368.116 375.131 368.375 375.092 cv
cp
f
378.329 380.229 mo
377.843 382.733 375.418 384.37 372.913 383.883 cv
370.409 383.397 368.772 380.972 369.259 378.467 cv
369.745 375.962 372.17 374.326 374.675 374.813 cv
377.18 375.299 378.816 377.724 378.329 380.229 cv
cp
.309804 .368627 .427451 rgb
f
377.562 380.08 mo
377.158 382.161 375.143 383.52 373.062 383.116 cv
370.982 382.712 369.622 380.697 370.026 378.616 cv
370.431 376.535 372.445 375.176 374.526 375.58 cv
376.607 375.984 377.966 377.999 377.562 380.08 cv
cp
.65098 .690196 .654902 rgb
f
374.711 378.006 mo
374.607 378.545 374.084 378.898 373.545 378.793 cv
373.006 378.688 372.653 378.166 372.758 377.626 cv
372.863 377.087 373.385 376.734 373.924 376.839 cv
374.464 376.944 374.816 377.466 374.711 378.006 cv
cp
.309804 .368627 .427451 rgb
f
371.723 380.539 mo
369.004 380.592 366.415 380.085 363.952 379.03 cv
363.374 378.917 362.997 378.358 363.109 377.78 cv
363.339 376.594 li
363.452 376.016 364.011 375.638 364.589 375.75 cv
372.359 377.259 li
372.937 377.372 373.315 377.931 373.203 378.509 cv
372.972 379.695 li
372.86 380.273 372.301 380.651 371.723 380.539 cv
cp
.65098 .690196 .654902 rgb
f
365.457 377.62 mo
365.386 377.986 365.031 378.225 364.665 378.154 cv
364.299 378.083 364.06 377.729 364.131 377.363 cv
364.202 376.997 364.557 376.758 364.923 376.829 cv
365.289 376.9 365.528 377.254 365.457 377.62 cv
cp
.309804 .368627 .427451 rgb
f
372.26 378.941 mo
372.189 379.307 371.834 379.547 371.468 379.475 cv
371.102 379.404 370.863 379.05 370.934 378.684 cv
371.005 378.318 371.36 378.079 371.726 378.15 cv
372.092 378.221 372.331 378.575 372.26 378.941 cv
cp
f
369.678 379.345 mo
366.295 378.688 li
366.552 377.362 li
369.936 378.019 li
369.678 379.345 li
cp
f
383.117 387.946 mo
383.117 387.946 383.192 387.966 383.337 388.005 cv
383.409 388.025 383.499 388.049 383.606 388.078 cv
383.721 388.111 383.894 388.179 384.066 388.244 cv
384.743 388.521 385.661 388.993 386.537 389.962 cv
387.409 390.903 388.213 392.335 388.377 394.163 cv
388.567 395.961 387.827 398.242 386.066 399.685 cv
384.337 401.143 382.046 401.788 379.769 401.97 cv
379.195 402.009 378.618 402.041 378.031 402.027 cv
377.48 402.013 376.922 401.999 376.358 401.986 cv
375.233 401.95 374.083 401.913 372.914 401.876 cv
368.263 401.731 363.309 401.509 358.346 401.449 cv
356.486 401.416 li
355.557 401.4 li
355.247 401.403 354.94 401.35 354.625 401.474 cv
354.31 401.587 353.991 401.794 353.68 401.853 cv
353.369 401.905 353.063 401.854 352.755 401.855 cv
352.141 401.833 351.529 401.812 350.919 401.79 cv
348.479 401.704 346.078 401.62 343.754 401.538 cv
341.431 401.449 339.184 401.391 337.055 401.284 cv
334.927 401.183 332.914 401.088 331.056 401.001 cv
327.34 400.841 324.247 400.638 322.08 400.517 cv
319.915 400.377 318.677 400.297 318.677 400.297 cv
318.929 395.303 li
318.929 395.303 320.168 395.348 322.336 395.426 cv
324.504 395.523 327.601 395.631 331.315 395.843 cv
333.171 395.941 335.183 396.047 337.311 396.159 cv
339.439 396.264 341.68 396.43 344.001 396.571 cv
346.321 396.719 348.718 396.871 351.154 397.026 cv
351.763 397.065 352.374 397.103 352.987 397.142 cv
353.293 397.174 353.602 397.153 353.907 397.235 cv
354.211 397.324 354.508 397.561 354.81 397.704 cv
355.111 397.858 355.422 397.836 355.73 397.869 cv
356.655 397.944 li
358.509 398.093 li
363.453 398.514 368.405 398.771 373.042 399.052 cv
374.196 399.117 375.33 399.181 376.44 399.243 cv
376.994 399.27 377.541 399.297 378.083 399.324 cv
378.589 399.351 379.093 399.328 379.581 399.307 cv
381.533 399.209 383.303 398.696 384.463 397.764 cv
385.633 396.844 386.094 395.52 386.027 394.327 cv
385.956 393.126 385.438 392.105 384.86 391.455 cv
384.299 390.782 383.653 390.44 383.274 390.267 cv
383.175 390.228 383.113 390.19 383.017 390.157 cv
382.91 390.125 382.821 390.099 382.749 390.077 cv
382.605 390.034 382.531 390.012 382.531 390.012 cv
383.117 387.946 li
cp
f
393.07 360.082 mo
390.946 360.082 389.783 358.021 388.655 356.023 cv
387.676 354.287 386.564 352.319 384.774 351.149 cv
382.412 349.604 378.794 350.741 373.321 352.457 cv
372.218 352.803 li
371.525 353.023 370.796 352.634 370.58 351.944 cv
370.365 351.255 370.749 350.521 371.438 350.307 cv
372.538 349.962 li
378.499 348.091 382.807 346.738 386.205 348.96 cv
388.529 350.479 389.862 352.84 390.933 354.737 cv
391.703 356.101 392.501 357.506 393.126 357.465 cv
393.829 357.41 394.472 357.956 394.523 358.677 cv
394.574 359.396 394.032 360.022 393.312 360.074 cv
393.23 360.08 393.149 360.082 393.07 360.082 cv
cp
.65098 .690196 .654902 rgb
f
371.828 352.862 mo
371.271 352.862 370.755 352.505 370.58 351.945 cv
370.364 351.256 370.748 350.522 371.438 350.307 cv
372.602 349.939 li
374.49 349.341 376.442 348.723 378.431 348.267 cv
379.129 348.105 379.836 348.546 379.997 349.249 cv
380.158 349.953 379.719 350.654 379.015 350.815 cv
377.131 351.247 375.229 351.85 373.392 352.433 cv
372.219 352.803 li
372.089 352.843 371.957 352.862 371.828 352.862 cv
cp
0 0 0 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.0.0
%%For: (\721\740\755\777) ()
%%Title: (1602.m10.i310.n038.P.c20.318423638 Motorcycle, scooter and moped models vector flat icons.eps)
%%CreationDate: 2/25/2016 8:03 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BjVNHo07Ue^-81\*o`1]ERp^!5U?t,'EeI2"[`nFP0GPLj6sha[GUYZl:E<1ae3UYS6Y5TP>6$r?!UZ9=5UX!<b[k@L%<o#
%je&B&O]Z^1,Cr)!?iR`^ms3k7?QWAp?-+utq/Tu[<lsLip%:q^;QDGseph8RM;?AnrK9a"a;9c"^CtD%9_O(lUpf+>bsF/"=fIZA
%NJ'nB>\G4#j#;*q731;BQ[?d-,q:t"2]=LZlC5gWfNO1CM2C3+\PJh\bP^_;lEfYUoWLX^\t;.3P^d!:1%>"^6ZeOG<\j#M^7)$4
%)MLeO#$OWdo\UYeQq6C91X0Ark*'K1U5t:h$$7nofW1aBcE.dT_W:_*rL\HnrDl5ZhkGu-\#]1N_IkB--QF":Im8oI/?,;H$M:[$
%)jibjTOa'1$1&_p9@[LKOlp;_/2uf?(?M1PQ`r6I%p*$.XJAaN7HM&$5UBZn^R>2;l+1^EaT!gPs'A;[cY%:oRU55XX`7J<5?^oY
%2S/[V=j5LSPR@peRrf@c6L7`nq'(CCDSB8tn?PQWjM,hsUJ1&+h]Ot^'Ur3[V1`c?^V+BJFu$i'TL_ulZ<,;;O",'nU',Lu+D?pu
%P;$iW469Z)8l:E_%`Z\k]0q"Q%f>q'2Z#n8HaU^nTtIbre$:IHe?lhf/*,E[lWFO$ro1)EIcO99rm;B*YT&RL3LmWo*O"p$2M%"G
%4iG\djkP0Y"T6mAFY-CQTUer]SEXD8?hcSFU06$NE5D(F$8j5rdICTDHR6H&a8<h&rO>k.1ooBme&l%tRnMim-i(^8I'unOd>I'!
%HRI_8bJV9RBA9^UgWK;-47l%2o#EV`N:ru?HdR!gr18ul*)HTB[Mq:&mS^SGFZb`]DN1",'WM\!9TF'mb9u@PC<Ku%J)do6h+gYC
%h8*aYY[fqbQY3\gk*c:gd6Q'nb,3MWa)_mAf1,RK^0%@DI-EQ7"SRbAEi,/\+9$6WgXMUPle-SQ+tM`"$!@:V5pK]uee6f9OYMuG
%j*e!hdls_Y.M[DeW,Kq1BSFN'Z%gCXc:O&WbIRJAA&n5;+_(]U\m^"0@#(U),K6)'iNL[$V-'[_GZpu98eg_V"/elOb0mo@BMDX@
%U5urG&s8/^b07ATM]^/2H]N0MQIGnnN\5A^+?3;8'XG^UiNIPP+--Q@G&$-PZ66d1XIgl#.[B"c,M]TZqjpZZ.54-nP9icH2;5S3
%GVr##aFne%R*L0iPZFi#"iJh0fX!DC=u'%EE!F=Y@'"!u`PPb0;`udEY87g%_N[F-Ce&$:UO`\rQPhRGJP\i!HR1ofZb2"'@5L@"
%O"`QmmKpN;3Wa6@Q^j/>BnU/j^^GFT,rhRSooRW^:!J_3)n?%71m\KkJTVJ&c8;ii4,&kA;@+%c=t#RQSiCO%)L53.bYE7>U"%\m
%&CKK*W(p9_B=GZoGC8&7JU:(:AlOgr>TBbPRYL`bpi_RS_$97[a0![E-2R=aGNT\Y"8k/ba?mA^e:%l&BfRpB:T7Hn*u>6G[DGMA
%OXFFCJL[O3[7ke8m!5:lX6%N0_b*&J/iVKKiig?TBQ3V(S8n"+ipe17=[)/QnhX3\l8l[4WD_$+U]q;,94fu_+T)lTKRZGrJn`.(
%i]LR-4)`&f,ciu^i;?m%29o\sU[*mHQjVT#&U2WAaA.#mZQC:oHl]Ub"_DHGR"W*ab&61*NcAkFLUN;&!@0-H_ujE&=Ce104)'l&
%Pg'`ZKsVbUNE53e!N96`C_TFu%L8oWp#%`d6c^:U7j\\.L-$BZP>"-S=j-hYd^$k)DdE$+"WU'Q3,l9Q]ig:=-c1b9!ll2h9=\3Z
%b;M+?@hE+UE_L(dfu2-$'-Ah,njgTb7V(A.d6EeZJY-luOHjRpQ6C*/`ko*`Nf)<r/'V6U^Epm/%%28Vr#IPp4RS`4:qgb(Fi%RH
%I(uaa9%?P)D7US=jb@B`MV.D)4AP'8'?`2TDCe&?=a&g1cHNS`!6`ZU=a$^N%&o0(=-Z+#B%p%5D&:)10f/4:_6f-:?"Ttibd<k-
%G/)3,Au=C6f<kEn.'B_85d4$Ha:;ZNO\"<UWoIAn;GJ'4AKC*3H:,`"QoapcN1("sEg3^_4/$)bW)WR16\D;u0?0cMiogXn;uA`K
%lS;r;<!=5/>"i3uC5tu+NrdNtr[a@Gf(DK99"eCZP[feY2H.gDkW8u:mA_E&l6OSbb=J!QrG<hDcSBpGJ!U`k4rdW&(l/'E'h;mV
%a'#uI2VTc?EN(&b8C>R)>J<)o/(]`Tc#^!a_(eWH8(T./q%Z\SpbI!C*u0G70fptO0@tn>pj4ljBr#5j>GU\c5bfbB1N>`,1:^Wj
%On!ElX]9M>-;::A.)k0M@qb7VE?'P?FT,p(07_%4"@fGQf'#mEX65m"0_nM%QYuCdFT05]kIRdYS+9p&AX`:<+]D^Z*3/Pk!E81O
%Mb.:9^?_uh\@d^>D^5m*6W`/Oo.iN&L\tt/*1>j,"_,!i/hT5nM(Su^NQfh-!J;Bt#(+!kLpPJ^7_$e)d*cKEG/.LG%YdZZco<]?
%)f]!K6qPG"1#WG$P-HnCM3<uUGenl185A/1`"gnt.XQ)uCV$"=S`PFH;4c^g/7rP9ZSU[q)=hpB+ih*K1HRsAOim#!H$4r?-_TB#
%3>9;]2,S#-b\;'SC`1DN\aJh>G]mtP*H96JNG%FoZZG0[\af%Aq"e5d@gpZLgj"3A.YM7@8c=UcQTJrCMTC6dhWEdi'lh]g.P,1o
%^c)I>h$liNM8s#[c.XTQh72e%=aaiGC(+[]E-g6>kLV4qZ<#.g=C+d]1$<uF/s.tSVar5TL1o]mCRJZg&)#/o2Y3%'<BQSnCAE7&
%RFlq:REYNE=_7DATi0)nQ>?<OEi#'N?[BdNF.J;Olcbn0f3'XNGNM,Zq9OM.lMk/iRH_aO!6P.GU"#$d.B-<g<+Mk8J<MY7\!Z$f
%8DOliC!m0nr-%(2i**Y4M6N\YUKR.UP!/%`;s[XAVq&11--c`X\jM?`mDa#cN%`^qa>a*tP/86_o@;T+A,sW2/`CNLi7dL613:+P
%*%s5Nd`h5:hMrE>AeE(Ap;4'6A`e6*3F6<XQ^QlFk'3lL*&%=`a33[kht4k_N/[r(:`DM1m6R2PA//0d8rUHAA_M%^hRLaBPalHR
%YQ@1Q11<Tk(re^I73!/a4^gdLU`6Xn'dJtme!%R1I`11>bK"(cZ(EIMl>N:$a"_2Kj";<afpp&L36nfiNNmG]c[a&B/mcp<Sf$-?
%bMk?a=e)Y!Y-SO3ZOBU(,1Au%$D)L%#K4,:o'0!%,HnAfR6C*jn;Tl.ZW9OL=6W+[8s4ZI,FGOq8&p`k@E8T6=Rn+#K=O$[R!4sp
%ocLd((us#d#u5e$4V"o'g5Bb!HoIn_9mkZQ(gJ1"8#sdl:p#TW6QDpP2aXW]8hMDh:/C3O#'N?cT8Ru64u'-3J=@VB[5SA_nRc"'
%`C_F(iM9*o`D#u73?^hVC*m.ur)tk=Z1OMmna7u#]i!0_bc'3OfgddUR?VQq$,W1Q>r6]_B5oA9)TCnCS0:S6G#1ELj=5Y_:D[r=
%m'qW2bj"lrH)qr3'797s>48$.;Yj+<jIN.>Rp(TVBuf-_Zcc5k^FV6opK;B+I2\U0;U^_FB;YDsVVX*TR_b6NgUTX3R`Wd_'-Fsg
%@_/+u;D]7`d7bq!p5."2OH6.EIs-HlS3?YR)rtMP$)Z[Eh!>7@G[-E$h&meL#rui'Y-T).1Z:;'9R5EIj6R!GGR2@C%Iu4hNjB\c
%1YFauZ>gL?aM/Ol(k;"6Eac.pPC2.dk%8ksjK-C]c=.tHij>#n2DW6QPsQI;9A0iOMcTS9i*dXIR:!*:2@>H1AOgSXG?7W0W)/G<
%TYI8qW.7MZ1!U\51A1QW/cVT605'<M4RB(4.bKcM[?G3bjq)$09iZ-t\QRW2T(4ZQ)+H-;=Hj5"Yjpl:V$qJ_,JCu_n8L0lkl:L-
%C6]3_G%)LD\I,qcH_Ii9Xm6'UdO*\R.opDsKD+#DZ\dpAnhD_"hp(&7)s&-0p`(001"=dZ:QhtB%9YH(cHA$WE;':-qlljNr=b]3
%@d7FgY+V^fjkcDU6P:@b!%8Zie&MkD4,C[G`jqg"M<a``W,CsI6PQ%-[g=F!(JVP/4\]r&[.aJU?e[-]7d0jh[hWdk:?&AC7!L)]
%6ju"6"8k'[qlupiLq1W>Z^a1G82`4t7$dHX7Uk)nChlLPUF%d<qO-$j8:s:^`5.`%UKXO"5E579_\gi"e@@cGVP]?dep6@=+;<`/
%&?&(!8^CW`rDn\@hGV>Pbej0]HC]alhFrae%F&:\*`)VC4UYbGqDfB_^\WO0@:H1Je"6JT$6t&,fDK18/E$9VDp$$Z0U^:<hs:dm
%/50WJn(=ei['T^7^/XnGKAi!o^J)-*P4QXiZ4emGkc2Q5>a7$VMPmjS.F*6Y[8B5Q.K5n6FW!.%A:ok8/LDR(R\Kq`==E>g0sXek
%1WA]u-'"*%WB*'\UE"miA?sm#WEIH`nPF=,*Yhdp%+<><3?a_mUB2[#rY&S7E:d3?_!mWSX?S0_$ftXmZqudJ_7,`6jti!=XJLj)
%*>N6EKjlCS7?1%o=(i:#'uq>qeuBWen[KGq8>]W?`F9*3kD5PuMcs&'OqLEi*d=sf#4jTFc6:*LFZQ$hfVrQC.;A_M`3JOZT5A/]
%F4-),a/EjSTPSmd)Liae36%5ABfA<WKaVRhgi-=)`LQ>+)r>Wj>QiNik@1)l[c_7Lmd`MrXlLA*f9@E`Bs-4EH^?#rr"!YL(au=o
%EeS*F?[5an<4[%O0Ylp/WE..N-HR9BF@N*-4g,PMB/*0(At8>D3M2a[^)/8cEP<=RRrQ14kBr2REGmgf`/2SQAR:9s5f?610uCR=
%V@s2jo6e20P?J^A)k=YN\QEd-l$B*+7e?f2$X?=k$b`KFi/6CLH,np9#_2?6j#H"3;m%[qdSETS@7\$93[a=3`PgYsO-?e^gp9aM
%6dhq_H,$eYVg\F8q?/16l?n#+.HVl,ou=1[00i1D;:41c8aEWn$$]lhp7-7FWgc.a4W+IEU1r!S-Jtf]`e%[D]c)f0]Z'Z\(h!:!
%aE<I?8n%F.odhN^%jgJmlNG]3@eK)qlET@LZNiK80\GCp_sB\7RtkEe+68s#f;c"sl,R*gc<fQO.NBh`#el1oG@JERAhS.!n9WmR
%/8"E;ZSYN\Noud`C36-q`i[NhW5codcWR3d=N^A@W5^Afj$jaXft1Y@CnBJ,;g+@7(6%"j9^C5cRB8Ai[b@J?hOFEsLKHg#H'Eqq
%cgG[U$I+CqDZ"]A)RJ4sEGhf%4;oHRF_2\SYuHGU.I_#hJRR]g(gEJRde<U_UG;@RN8)M!4;p#:`e8RnVB?\o1h<=7VTYG@$_3VD
%@iW0"SCeLc2GEr5g2.@U;Nd6eo4HY]s#8OHQ6JKg4pnb;MN([",C6V(WaE_#VY=4EOQ+NPG2qjSplfp,7]Ac$hGkDrM\>Q'cIdJi
%AhP[Ym(Jh#2m`7u)4[,.2o52o%,H3_mCarrb^%>_^)4]:1P9Tc%)*Pd2)G#>#2dY_Ri-T0KC<Q.Z5>*tFNdIn`G(-1T!E2(k02tW
%8=RqjI/:)=n?:m9k[f.6h8l0DP;.[!B5d0r5.T(JKOWh89]ik%Eo$ZRVDQ[N^3hbI@l$#d".NlWRFa8UU#NQcB$BSuZ!"!_*m?Hc
%R8.3."I$1,7pt0.e-;Q'VcTbb(bHM7NVd%So!?+KlL9Iu"eNZ[oI#>aa+uPHPEWee?(ab$4;316)<9F;4mneA,CU&:)IuUESMC*]
%]h`+!e\lFb35AdQ>E.dD,K>l/qK\rCc5.#_`I'S8c`"=pW8KanE?':Ipj/Eg=PBPYokH4Fc'S"_`bqY7OWp]fU$cA0-r,Gl@jJqk
%&j7>]NfV'Yk)XM(\?OspF2Y="[5!&DP9Zi3!&H&Bof?EPh&XEZ`ga`^GoLf;'7RopZ*E3Z1$n/Hg%D[E#]loOI/a.Tpe=Nl`F?Ki
%UuLSR1rai".WKR)b335h_>[2FPu=-[i+f$=,?+M%oBS/KXHQjF1:<M96>DNS=cEI-8cC7V'A)nH"\Q$rc=^U^Us!A-g"f8j$r)ka
%UB7H#.EC@WR;B<7C(?("L]S<n4>O&TKC!Vu&l_K*;1T<HBoB,l3;>"qs6ta-X?S0WCO,V,`.0M-.l7St@tE423`=-F;_F;DD460J
%R_][`A6k^[N3(J>M3=F,8<c*L9T&^V(5XeArn1D<2=>g>as0c\3"K/8RR0lq(hX[!(Q/o=KdK7\9R&*\%+TAb@Ss!hlGVBoiua2B
%SYfMR35EaI;.d']s+[nK`M/<ZXYV4&ANF<u@WB>k(U_^+M\68^8^XJLYp_c(oiT/,`1jNAht>G4M\68^8_NdgGtKlL0f?5end<!E
%P\W;4%qik=n=$Jtj<^^kS;"K#=c@A*;jGmp;jl=AUori:B&;lgU+9MjS=&(rq:aq7G>_B>9^;eC=%bV2@s!4?k[HZ^54+:]"q"t$
%DT:mPN/eb2^!sK)*,h'_/V_;W/rGZr<Qb3g97o9/>h%kNLj>'\o%3nJ<I_VT+MXafNPic>@_PV'oWh`t]?K0:=EC)uH`$PjF&h5+
%Vel4fi!]LWc\d0j%/T>=+8XSf?O1ZT&+bZ#(/!+d^=AL2fY_(T!<E+GT0^R"rK[!pgTo%VO]7?ZqE@)FJRR7(_)I4]3qU6FD9m5a
%4rCHk>D`)'oOI1#huCR&(\HrRQ2R7-NPo_odha6kqhonc^_5,C3L\oUL@Bb*Los5J4@V"[*4>[3@_U72$Zu7n!%0HPa2=E1hbuX;
%AHom9d>,MYPc(DdoNJ,"e?K.g%UmgBjkgWUN_>`CK^\q:eg,..^](^7V*Aa40Ns[R)JSOPlAa[DLL,p38&%X!Zrd%C_dB7(8eGA-
%J'gF/<I3=()ROT4gVgp:3n#34]Qa95/-**;CBm)$JdA^NoCM(VO".WKhnR^d22uVoQb7N):r_9PT"A@4+90R7lH;O@$rt:X6e-b=
%D!IQu-QZ9mmbCXP@O6A`+0%Ho9Z!e;@fbLZJTJ=357+'q6o0Vo7[tDJ4JQT_lQh?P8'4(cineZ;<"q)81#ck$NArFOE^I8s;crl6
%T.Q`(GS!!qbVndH8ne^dhi3f_;EY+6%l0CC@=1]G2tkMTn2h3]p3``Q/([Ss*Wu81!)?iR(:)E,`YTZI83B)WB8QdV*bpE#"Fc=:
%`uY`:d,5i\I8&RUZU42R2<%1q*]BGqfODO6`,fV,E\r*`Ls`;(.YHY?WAI/FfZBaDp1f9u=V>s7]oC$$Ipg8E%S;-6l.UCC[+L*d
%p,BE</%&:;ZAmRhcI5*75Ho;Y@77/W`<J$mr7h<\,?$\I2b9'_4/]f`NWj$5UT&8UgtCcg`M!fGl%T>*`^3q;qRFnm&-c:?ls:.@
%c3@bZj_uqNWAY*[_Z.Ss#"<9f#COP<IK$"0.2EilFN@M=YlJZ$M,nDWZWb(LO--u+kL!.V>[SPGJ"7:C[8_u.H9=J-XZe?K%U$bu
%kp2nU?=2Tn<?Ob@J_ALaD"Os*C<"$S1$OqT@kf:S7/>9I=A>lGqY++9UQf\-EgapY6)n"S9^p)d\WbKTH*R'SUin,8>:\k-3>bM0
%,FuH4A,1G*WU1gjWARF#R9D5*Kas6L'#^nVTF@r-CPcWa]!cs2<ASW8KfMQd[WkqigGBQeW/3jSJt-XV1XDsT?%gSZCDZ/%KgmXm
%Y#dD:A@Nbd$b8[=n:*#=e]kMhQJBed$d$baf0qMa3.e8!r)Y\b>W3@n9`:\i;6!\JNUD+g'LY'?WU3*Rfr-/+1A+,Net1qKaLN^#
%Z58d<K7KsYX1`Y.6o@off*GX,C_pDGMQqt==RRXYREG6j<orhHH9G4+RAh::_(e$efdF0N?i-6e*9I37,W9[s7cpKXd?SrB"OiaR
%?F*KTO@'^:=G_Ymd7H+qU$6_Wg<J6qLGbLs[%#AVR\e(Y?QpGQkLqtE-g'-a-8pe/b0,HI#,769*:]G6b3s2WP:<+]1M?O%I\drg
%\]BLhW`5bj\b!iDGe,rEHhd25Z#Z!V*osBH@Qf='2T?7dh^-j3KkfVGP"=iVm+GC9FaQa0._#7(\UJY!&uR>F1Z_(L6):$MpRU[i
%]69ptmBo_O<J\P?nTgut8DC+S1IY]Zc5$1+*3IpOqg<6Bh,---q[j;t0Q\C]N!MPQViWhnd3+;TWP`h@7P]95p`d,ZfdmoVQ$o.*
%!TEZd+"Ha2H+d(U>dST$-aLcL=^dQH@Q#KTniu`bE39'SHM;.#C-IQOJQp(FNgVLXrb8a9`.5uA)'*jp1\MH:c"[t3IH'(.JN3/U
%c[;jP&="Es<Q"3/#oeO?H>PjodA"YXEq(O7ekZkMAiMNg^eqD1i+rRpHN+Pc3[;l#HP[F(^@>",;JUg:f+/BF-,6,Wh)hQ5rKUL.
%A1t`EbIRW,lqKX8fIgU%+#Zni/&baWUl@A@`T<1dK]\^9VX*.N^:WsC\qKBm0Hp)CeRt-4%%B2r]r_t)16'5a69/-Cq\$8)/+.#T
%r;hjXH;cHoe)#+.^DAqUHIlQZj_V1nG1?EFr>o!mhp]hbZ&jY\YXoUeFM!i'cho?$h'(U)>>@[)L[a7lRU]B`1-"h:l"l4&#*NaR
%r)Q2JG8o7E6iW#QXUn.A'cWTYr5W^lC'*qZe.WEc^HB1*V<_c:N^o"%45eOYqNibMOCmA<2,h9AbjCJ6+g%8-<dRBD(3No^<Cg;Z
%EM[8ZhgISfQ-j/8%;U(mD-^J_].2F[p"T1[5F1s>BQp@S"e<4W4ZX2/=clkYDPdcS-)+T^0q'))pf9&MI[#;:_nbH__p1R(+'(1#
%')W]FC?*ol^0$<tmoF"T["ON^(]-b`5&^c@VadKgl3C(DK9n[FG+@NQ4KjhV?R[oh`V=:@3GX]V.<a0-8**B4W:E's1>Ueqg'U(h
%lC.1-fA1R<Id^oQ8%O-"]=ViF<g]Ahs4XlGNE!Sm1KhGno.Js*oqDX`B*H^1Z^"]HTBh-4`8apa7d'4`CceHSL%\"%FDG"=QL=UZ
%m<!`G-+u/2G=AEjm2.*PXkkHQF8=9YZe23W,6muj*Hjg]ZraKD7gYRKkce]1F=6a'-/UG@J^n[P<%VM.P&gOBC@-SAZnH8-N<U5)
%;nB,#+<*G.o.I1$W7N5]&+OBm.b+RcKR.s8L+Z@<EmgXUdZn*6lcu:Z4-%m_m>)6HIm!SqRL,r).bZL(h2Wcr_`MmV1gN`J,U;`e
%!G'\GQi3k8X0GI#9:eO%IBT.dfm#R*!=+s7LRPc$]l7$?-ZJqU)>3;+XI,uZ'H3fAFl9Dfm7u1'Jm>)\;(7\pfROWO&3-UllL6e*
%XjSsW:Q!*6#$%hfOsD`;P79kiC7^SkH![KK?e_X0[p$1;06DH!L_SO,,8*qJ2+NiDI9)pd\'U^F?S8%WCo)rHFk#l\@?ebsSL)VB
%<!qZF:#jZ:S-?:MgX(gBLL@BYXVS7X#&JRaPV(JlmLuVM+JZ4'oXu5:,)0R()P,L<MWY(rXe(e1P5-jq70@ftWn!fY%,;h-9k6P3
%dj6TT0?Zb#ie?k479SGs^1m=!$B9VkRHpEZ&N?dhQ+1t1Hs.Cg03bJVLXgrSVG:rFaKCa+T])DOC@qTa',B]_paoiFJ)Sk.RJ?;k
%;:SOU;<dVl?=(/X95Dm1Nj))tC"K1Tm@rGplPR%aZ]7mC3pV794tS^V\`+/a/=!6Cdn6gThd*GB4DAYU],qp?$/DtIZS/0)PND^F
%VU:DXkc7G-P:$OtPCn3+C"2&K9nOs]fE40fJnaL^Q;+1e_#=b,.b;p%\U5tn#[=6mDnsh)VP2b+p?f&aRb(>CrDQF6q,H1!j&.`;
%E-.\.Zk('cWn)Kr?;aXYrJ2i7hl=(7MH>1ET/^`HdtZ]]_<t&iSe(7i;QUHIX]!CR@Ye86f,UI,;2r0\V>h!+H>B9BDm7G\obD3C
%Is)J;T5[3=oo)ZG0]0J/bBR^U+aR9C=0'B'F^4=@=j@MO7]E1(oIYse5;TI3.@2Q;3@@no0Vmjr#?tu#m>Z7"#"gIN8b4]CW^Js.
%Wos(U6V:3UZes2.%5@41;icBm_F'B#l.813ZsC#d37%?q$[Ul'22<%bLTD_"E7*24D9H?3XMaUf+ZqgNpZ943h)FZqF=#*8JK8&$
%55HSL-;n9q7-&$!QtP>t>6IP,=]]6g<k`G0'T5>YeLq801,@")eeRjm,ee$d4Jl4";AG(<gR3+C,iMo'<M0ZQoLJS4b/lR+G>Ubt
%d<L4_V1!0H.$XO\%CT"^A7asB\Wo^&%m1Zs4@;TV!tLAj4m]g]M0n:slZIX4GL1?df2Hlh+0Zf0*3^?J<BFrRVW\=4f9)/Ga)C'Q
%Eio4PZD6hopN^DAJ:`dZ_^f+&[>1GKqM^7aWB;//Sb4VOQrJs"1>QG!cD#s&D("CniLbL;5@6Ls\*5dhi?9_UKg\&%SgiiEa@BTk
%VR+e_5YBS&'uusUN[E.P^[bd\/C%p1NZ8qV/6UAN0*9:N(%FdBEIk[q@jJL@`?q'jZuG#,]*XNf57RlgpX>VP'$=5laDAc*qh0[j
%%V)nJE-:f"1sfnFX)8RK^<<.]/`cql;4G#F0'$L.8K:,LY;pSAZ1H@6aRT>Qb)LWph+i)g.QVD_-Moj9f?UXC/agoGog9*nI5d;2
%<DJ@'*qCl1RgJ>Ka7n9qm5\AC`+LBU;9/8@H=B@5VHPTOZUIYkU7ij_15AQ?jfokAgp)b'30B6.X-\;Q5/2f)G5c5-nr0go4?Khc
%Ls9>gKY"Z4@SnAf#qJM(P[fC#Hg$_Q_HCAbA[VDO2j&.FY@E.$"V"bngr,6"Lnbd=NKV,0?I]g)8l)ZK3^Y(^8jnd/["4-9jbY]S
%[U.HcP>ZRue'Hn9\$ZM#;RO(k,.!p\gZ<N`V?o1?0,qeBE\]/(Rd%;S;0n,&.5167WfJc+3uFmqmYgG\ej?,Ba6LMf;eY_7FpX!.
%7Zl!JZaE+W.M;riTQTXu8C[q@\2q.Hg+X7*SB>8mjA\3-E"FN^WYJ--j+TR3#M18CE#9VLH5JaL9BM>8<qG/;N;Y*M*R6PK1-U4o
%)sj.)B-?04#Xg4&oF2/K^AU[/cuP!;FjjSI..2,TW9qb6,="dOdFroD.Y5!]QAX;O]b>Rs>:EXZkI!p=m'jaQP!Yp6=W&V["e)2W
%r,mrUHrJ@tZ#UQOr=8sT$O@u(lKGl`3[n\KXUk^pW)5/<CVB,mHWb#&Q!`[Dn##]#_[h\fM.4.rc:*eRL,&d5[7i^EWOkS(\IE-l
%7,%%iNM'_LljgtGs6J2HO*5<NnYt_!&JMFK^FQ^MiHsHsc#9.YKCs,lSA'Hr..t"Lj2d&+8`f+X2bJE-Z*td4*"C&10B$Sa_oluJ
%g"3Xpk]\a.3u;Qa*VA5"QRkqVB\`U4k3+E;^g+$3;?stK+1H=0X:(q[HnFcHM.#Uka2Lfs\qIQe!Omh2SQO,28upGb'2mLejWr=-
%ao';jAD,lIGHlpp)..63g'1ZLjlqo$1"_2_c(Sf6r#u=gpQ*Q@."");81-9"%6^7Sft`$b[4[(o&)FlJk5C\ul3.bl[+q@6"tqDq
%,!#N@#Y)5V51/D1(NRU-;u_gph,XV8Ur2=$QEX8))uu%PV`4+^b[@5TH<iL7:<_*=_W06PDO.FCFPljan]-(+-!U*IedA,&.!<&6
%^$WGrHkoePnZ27tn,B6\Q$6"F/8*fm]Wgkn/Zu5,[S#^UBB<>N2K(1k4]j@JP4cHPc1;BeB5.%`f$dpfg!\1/#J7%EB%G_lY]ftl
%VW6GdN-b>IqJ=!X]=Rntq.On^Titg*^U,'20WWAY[q]?R(QGi/kHB)1=.K3IHJuupCc[u3E7Qhr:@82nkbU6,/U8GI)X6]tesqeZ
%$`R$8Vk2U+Cn/g9<Hjn$C$4or[I;'>mqA*\WU\uDDf9j5i7*,NqU=WWd<bBNjeG<2/U^c-\_-hc\l;Ikk0j_4R[\A&\PjE$n[81P
%Qrs4Wb<'XE\6=9pFLlYP=?lODRN37@G!DNTGCHWr4F?Qm3hf3tf>!o*XjF!C5LS;sm9=@arqF%(_o4]KRDetrY"?M6hrj..)d2q.
%h"nR&]Y'E=BA]=gHaW?[IWbV*S'CVRo?l$r0CG>`B="!6Hn*?YSF2ojd&-=mj4+K\^F^27^<!Dkmlc$%=I]?G9^NhVrrE*@XtIIK
%[qQ\er:\<KWgnK6RX_WTr7ENJIT#[Ja7W@m<Qf9Lo+t&3X35>U7K"fHc?kZIhUtA9WNc@]6]5dK5+,V[aKH>lrK=tc@HZM4qY&(&
%G8gp@MsSFIm8*#m;fBA?FaiFhmaI>AEp!i)qm:a35^KFOh8-CE;X`-$1/RXcmGagCe-,V+[pte4md-emB3+G=hO=IH__;E^I-"\E
%$4UL8gtm5LbP]i6(&_k.h8W*e^V6rB9mX-0=PH6[mu@.@:H'&joWtkO\taIF<gIga?[_%dCsA@DgKSa:@Aqc2Mq/TV[&7<W4ZPd0
%]Ye=KXgRdUURP6WB9)he^1UA7l0n6.e&O+kCh,:3m]NOQ2m7l4Hgfjfp=@jhe#.tT+0.W?/=k0BCX.^1@mT<KQ2A(2CsKe$F5Ehg
%2UgR@*Np9nX2iD]V0cjEl_fe;_Vrs^Sp-9sZj646J!=9:p3%Ljge9rV]bKgd\<\]H&nk7.YNMOkc28-7Sglt2\pW#;SN;)EB_DMZ
%L"lq\_Spb,]+oL383:L'*P%Ip53D:(=l38OV2`aGX#AGCb.!Y\1ssC>L&&,Kn?mVV3ft@egi,!$I%Hn\RuA^['1LH0SZUE3$^9ge
%A\PbRD0,.;AMRhu*.>18hYk#01[2i6C*!NRc+3`%L[4-gi*p2F-b7p-=5!m$.a2]=2f^%j<SC`TqZP]FL[/U9)g-'ZqrT$_IC.jR
%YJ^A2inKL=Df9JD/t<(CQ6j&^^Kd[F;Fe@0H"&[-KCmmCLPpWQjf4Gh>9CLVg,p=?@;S$:^#[YphgDq@>i&/d+0G@:>MkO%\d]Ro
%Ps*sY8A!`I>24JJ]I.DWJ%NLkVB:;g5$Ij?aHb>6jgUN)dJ<[OeAoc.<X707Kuto]oDYKY.<TTUrd^Gc\\G$(GKr)3I$d*Gn6F@g
%/*Fb^2r;8u*cc?@iT6CNHZSlHaa<OSDs7qur*AU4]kkBghYks?dAN`=]stShgoW.E0MK)Fjb9tFFtm&MCp%TBEtMIQn_d7kMAD@,
%&_:e;-d@X]-U6Iq,u<-r+R$@jG=E7i+8/\'^WeEMf2%6QBCE?GB!_7]Fnk@C])FQXI9U!&^7M,Mhqeu1fX\b/IV^('%\#s`qcBp/
%Sjk$&eQR.\^+<E/UV8<3IjpjUc[2(jA"K2T5;9F%V.XE6hP3g*`J5fAIBB[#f@Pdi2YeJtJ%^4&Pfd<0ja4Jfq%F4TNM8"gGLsa4
%Md,i*o6pV\^D\aXEbXRq_dHjOAU\!a^N(e"lYMR[b,cL7kMAGR?QZEkEZ(O4cL7'"UVlR(A`bXQlVSJa.@sp,i6D[PR7ZZ"jutr'
%^N+,df>cYS<I+1prq_jo&&TLr$BC/=0FUMC25#H'6(`%sd9l@&oRL1,q=.23!O*iu_%0FtkP=sNON+f`fSa2k*%Q[R,;<AbnJ=,G
%ecGB<8Jj*E5'SBu:<r-=*`[q43.7Ad#JR/.qHCoFpac1*FgOaGE'-f!Hp,8n]X8E]"Pj>i0qC5d[&uMb&,"cW/n?EK[&K-KdPDE=
%s8&C`3DZ:E5j'9sL@[g>#csCEp"(PS2Dei`4^`W(?:s[[;T=3^X/b*7LQRn8^+U`+rQRLRJS*c$chBe?_YIXgbEcS\0pnN4+/'K6
%V^M_X>I9MX<<O4jegB7I.-Q5S-o+C'1,S9MisR^BW2`:IOg,`,D&>mkg+>W"5<Ft?chp$^4BD]_dD+SV$LM7G'Ef,Wl/pjYF9`:/
%,Ou>!+p?^nkNr]iK)p,BAqV85\.B6cK[P1VE<e:4I%fF'p=ftY\H)EKk=ucb;<mB4b;'O5\b[Fu7$bro'pWGuW_E!]ChN@omY@X`
%>E=s17fHr?%i(8H];/c0036udH#pE#pj0TaOhLO0?USa!j`)7:XLLNHl=YW9[A3PAr<tBOCAMc:iA4>.pU;5nDTgrJo?`$[>^cKW
%/m(>V*dgYrI/.8($I[XJ5'9[sn#[X[XdtOk=#)jmR:f0*l'5+.?<R37=m>qYna2+(aDQHb7mT&=$V-90e:P(F0m:gLPI#B1dDkd6
%&pX&C)74CYQ,V)K?3JiXU-n'"m.$aY=b5sc8K[CAC:RGl]R0-.Kt/duC#OO=9j<MJZn?Lu#&L8XQn-oh%%PuG*<uDmMmbq5(R)8i
%D$B4L]aLs`]mm<,3d2sOFDlY:#PApfQ^^<k@L)R1RnHEu2ZH,HnG28>b;JsC7X00`p3QD\UUA_J^,/r52dU<gSu1*N:MbB$)Ge!H
%SuS.!o_*J^dtKfq"KCs5mqm(-.(/g3-.+hle*`WGRQr]'gBnRp5#plFCFa5'("M!8/o.;!W\i'"?@(qs?Cj(.lP4YSZLhk)YuSJc
%&d7gLc7?.*,5pq7@TBNmi)*F.`RT6KIeL\'*^&2`<o;[>Zupfh-r9WLE;KA[gAWqc'H]!rXIk!V[7$3B4q:0B99K9M^0J;&SL;$`
%s3tb"PU2\O?e6p3-b%eoZtS;ub*@hgQKeWUB@O@kCRZgnT9HC;]ZmWe*o5N)-o\nDpO\P]oX/Z4nL*5;m^uYK]t_-s4oA-&V<?P0
%E%gn\e_s_W#f7\?ICIs#@HG5^>r5@NNLagi\5hG0f<0+,R(.Q6mlPX$K/ZkI[IZ?&ddF_[4MnDoD##%:d<4J+=Po.S[9$X\^?.9(
%$qS]u2t^AqlgX.S.Th/1f_XRJq2m5(kgtfJe_9C,cSlq/>]>LA]d%l?+]g!nFg/E%r:&8t@'s';:;3#qhn>Vr^N;Yh=<M;pI&CD?
%igF(Zid?$cR!qnZoW9cR[VfqEQ$TQLgsMDD`fN-3GI"&CpU*s?[Z0[_gU(`8@r48NEb$rXa^i.e:=fmHJkDXfINfeJj2ZIIQSG!D
%n9)2:I=7%7H+9&TF)1_cO_ZP:riK7k%mTD>;D18%3EaEN043hh\PfXCP2P-_o]_!@7XG%/*FY1jQ!7%Jm(WN:&=N4ZM7]#PG!E0-
%omHf0=tt;1;SS"K[P"lXlAbgTj7qrR:Gi$V>H:!>^<X,SfQiDOL]OQgpBVGK2ImBsBcAF\58H:;)eS'$f]f%tps'`heo(/b;j^3@
%DoLSSDg^A&3@8l[)8,/)iC8"IpmcBeK%IpJht^@n<Y=s<loV6ucedGQDjLg'f%db'PH!/pp<QVA8+W3SpU7e\CDUTc(0+a1^cZn4
%hYsnR#TCbb=!:n`EnHtq->8g5Irt_YiTB[$q]F7aKX/"[Is3(7@d`2[>NO8t`S%p4,)bCQo'+uJo0/p1,ZYH@)tT-?.Ef?3/q>7K
%*j9utI=&HNBFVXB.t)S620Lkgf%d%]@`JuiDAh3$[T7JT/U>NWk2#L(Vb;^KYBNRc>Cb\;RJu^R;89O'W9VY]J#Rhl4K-EW8)C<5
%nm5C_jo!_c(D(BO">7AK>:s_C<'Hbh-=&EMk\bk&.Q&815h5>?CjKdZ:7Yq=m^X_kcd_iooiLHtT61_O+2uS\>>K%D5*8nEj+(0V
%og_Dke@c_k6Lq`<+6W9!LEp`dQV'Eor:,.\?/0GSg9Fu*YBOl@YObt0]l<kO9-irlV92TC/,a-Q#]Ho0XTlD8O3Q22d`0J\jgAi&
%/_:Y?R9QdF##0(#eWfeSpPO_4^-1?JQuCdK_J8SRp>CaKJZg.nQ1M[Z;&'DD%(.M_qRJb;Ra\V1#cTq7U?je7FV%/aOkMceH,0N^
%PfN%;fCbKip!iS]IV3^bp#U"2IJ)sbq;!F\Ft.`aOm6:"p#nIV*_4tQc'<Aq1*bf%GAaT:^!!%MqUO;>`4=UiA&EWfLt@PuC&`Q7
%XJ(`9k^T-DX_\_r9CkrmXll`L4t_=u/X9%8F/+a/LY"p:hs[b_4[!OL3e+/91t0R!gu@VIX7%1pM"4;j*N@e_j`Q!=eCqAr;V',s
%M<&*c&j.R+50n`W(?.CD7+(OPYF0k=[9cW^S8:M'X?=.BmgTljLEC<.]r,a$h7UHr'(+]=g;U?X7i]jc7ge&!j7MS5NU/skZkV2N
%g\!5W[dJ"hHF[4ko<j]EXjiM-[,;!+F;p;]4aW"FWqW"KVpF_dD=kf"2u*XC?(6&qIkMY)HZ>Y6H?q5?H:OXHOdpjsZ/4bfR>9J@
%]n6@^)%>PR3kt5#[R>2NRpk$3jrXA:D>>2$93^:PHfgbkf(cS0eWm&_44-b?W^cV0pUJZr0^9#fe^HJ&7`o"aq&3MUllLn^n5R/?
%>"<ueeEtMOnj_1^e'O#pLL')7)RK_umr3K7f&=MqWffF1@K.1!YlE/?lD)nG*%=n-g!]<$9sXHUriM2*]RIIN`b+\4rmifUd@e1#
%<)+=^Zd%)i=5Ssrm"ZKqch-MolAr1K63Xrl&q\j6YZg)i;-#^>T=jso,(^r#6!r3#hWeCT2"^UF_Ej%QW!U1XYdAYd;N!fhiNCg]
%rm4at(9??(:&SBYI^3s&X?;;RfG]01IRk20GoX*EOgDGW7d?YPdmu.YrQ'["e4$]$o<u<j@IA&EDlYO%l.i:UDYOI_]/>ZlcOY3O
%S6eB2h7lb:rHAF1UI.K8dL(/SIr?Sc>P"/TZ2AKLIdb*8iUH/B^Nsp&bZ1;'dXHRhQU]k+%NP?$l:Q'f@8oP]*qcaapN<]8D!)o+
%Y;UuN,%."n56bt2aWNa7Hi<F9/=9M"$[7n;[&t?KffUlN<l?[lERfDc[ZU-il4'9L0/=>gZ1rLuHrI$ukEkV'#k3J%d@m33-ts.^
%=Z50Z3h%SuUj<f=&BoJc^<Shg-*Ui0T/Q9uk/*Yr<97!REMQIT;o?PKI[Iqp.H?2QS#^0il%dNYggDo"Ao&>PX8s1m'R#=lhH?YP
%XR)eo(KP6ec5r7_BQPKR]R?=@(R)>%-`SdC,N2VIY;mE0S9k(pb?NkN[f1[Qr)<$l)!i3N='&__?dgZ8Y2!ocKQjn1hTXd4=C(ps
%L=B)hot4]br5]N"s*-h=pp?JN.(\m$/=H9Qk5B&niVVBoQS30"3DtWVeuJZcC`&JBs3WnhDO.9YqNLQ>X)>*l1d;f+diXW/a@ppP
%@rl3;X!t?nW*2=KF.5O4SlXH$a8Z&5-`c+k1l"TJAA5-lLUkRM<qYn4`J=h`b@Qa#XN[I<[Gmp+[.XFYq_G9JA$,.rP:EcMnq#la
%[kH!I`0<Alj(Yd2E9-Ym\^AL>MOZk:Hq17;AhI(I3NKXa>boQfDdTUZMo9cU#n>A:mp"4U^GZCR+79`!Hen&doj-kHNH`lA?Z<:H
%I>8pu^$BWY!mTWZOhdt8oou_umjpsKWJn$g#:i=/7to":Q%]`%f2DUb2S-P.kgBdLYTFH)Z9VU^gE7MP/^#L/bNChk55P=j=<5k:
%I@J/DrmPoM?0-G0n](<MRi=YiYjqDbq&A<VM]_dprheQ=IJU+7c-GHam[5N+\+@k"NTJ;P<]tQVFrrn!Gie>Eo=]&.f;&f@DE]2C
%^ADn[nUl>"k.J#:,:$+\\o<rr9%P..qVfK<bd/[-6-kYo[UOCif]q\JPNA")M^RaBKb&AOjOWUPc$tmBV7mtcn@5rA^Ks-3bq5g%
%MsKiCe,[C4rV=b$grhQ>[Jt6?&j^Dj#JJA,$F!C`NK^+H\'6/&Dka"VKKeoga.D_GRIW(?%h(rQFo#a:2DX1(0;Qb:DXD@kS,6Z'
%7sn(H\92OSB%N%Z3<$M%^%_Fi/\QXT6I=dP[JEDsVch%JisbeA6Q4p)eB+n[mX0j'7)e`:%?BU1G38t]JFa/USW;tSfr*/q[l=&^
%GCqgnTC)nrmqO\gkA]W4^S[%:ZOP.Ls#p=]Fk,6`-1Abnh]AdFdeqZ^kIod@W5-;kVE7!]!_'^RSlRZ/<dL&KC&<3c)%5Pa@_IoJ
%7c$oIn"t#i0+rL@4aJ^9o6i9<_)_p&,Re]g#M!&G]5F2R?>iMU,!Agm>'41NO*91U_Y%@"B7@<mC_WngI&c@5I4s*nJ$n-qms;D?
%*o;;M(B99)*RA0HJ,R\eaF=EmLVLMF@9S,sEaAP$U3,SZYQ)if5>:F.)>>tQI]n+3fhU""bT6`D&d]lf[Djq$IacHJB_K]0c1C/C
%O$0H$gHlnu5s$"co]*^cB-^CMli#`9HOkTD)D:s^5(aJHQbEEQD_L>'G:NJO@2b!Y`2>7X,52oPGjs>bE4plGnLU@XJ(g#;GN?fq
%L[_e%9C^J:0UF4>/^`i@1?Gj&B5pb.e>J)bR;.1bl$9.r/*:WP&o;c6\[8`(f?O=J7'k'-5^%@b9!+Ve*Fs2EApnAB9\MS;?2g6@
%(33\ZMmPQ2@R0bj2cSMu_GKO#b1l"Z;WbW0Aro]\&UP(W>iu[g!3ptd&8T?8.9Wn4R/aC^46LNgWOD>dd$h]Q8_>N``b8H@GL8O@
%=.GI/[.fU9_cN>=d:W>_>AZT'bEV:Yr#BUg2P3'fA@V$Mlnh@Mo)Bdh_._<95*@DbPiX4TK4,_573>dd0bll#a&e:q%p&JGYQN'X
%`ar=kddfr;/1N17RXkpVA=?9AEG_0Q/`.]%D7E0X-f2Q#)+e1<%[U:XB-nCB1T>&<"K@Y71^r8;/-b=_:^PUXPAXc)2:F7CNos>6
%Mg@<&>DbOAq:sJsrp\,=QNjTcXOV<(WeuZ84)'&McR"T=YUoY#^Cr#58VIK\4mELI`O&X.3cTHAT'OcTHD&Il@&n@,7aeLl_i-cV
%YdTk?P41Q3F<oXX$&CE7klBn6Y+)e(&pT@-O3hF*>\F>!:h^O`*1EB>,Yd#p>bDMEM"E:\1/([0.?@l24pf"-qXH/h+p`S5R:e6J
%VTggj8`-9hB.R69GlZ3D,d"@HaREmFg_Hqci43*%poYae0f0M[0,[lNfmp;?H;om$UM*pfF4^&:6na)BMoA2)Y-5#f,#[=]rq`6Z
%bWSY4J(M):=H<FLY-Dh1QGR*-"+pl<<n\a.qT@nTU-]t6HU3t7[TluC:nn)L%9d"ld77cNiHW"D/;(sKbbXQYRmRcN,\SmLZidur
%E2f#S3P7]o$E^+\mH;ofCfBk90sR]_LOQI5fq=qWoKd&Km5hn>/XqR4Tp8Sp^pE`>,+K_$DIBBh(oB%jVBZJA!I_moCg5$ja!UEj
%edU[o5-5!5:dFr2^]=34dh;9VoGdLS7pYtE;G/;Ff>.#AqVVGq%snE9/PA!Y6RXjWPh?(W,f`P-gGZSYh]O56$62JZ!-PFZ81WsJ
%+BlScZ!<`Q6_)L6AB)(HR#)lg->n1o>sSm^BRr_22@RVRc'E#p:^/h/5r=/p+$7EMOMuk9KOeiU\)`B_)MBGK'%mm2AgU&2.%o)j
%;>Ji_`86(G\5Pek$CoopVF2+M]1#T/Fbg^'p7q(rU$!<#Ka_F+6!uGKRgtAa.T*A3EsZ\0-Y/jXVgOd:MKY&H6XYiofIs,[U'''U
%VAX'U9:]K-/h0:Gp9_'pYX,8,0kchHb6*ri3[=]Z%W+NJfI[G%EY<^G:987b&<UH7iI'#&Qp_3Ab/?-8\%j\n`)+B)H80ZXA/(4`
%=u:L,m*@QlLgJGYm2K/Fdj0rBAfTlbX$A&T2N`6;(;M,n*3r*MBS@W!:"eQ/@mK02))qq\jLWO"#\JjHUB8UC2R(4(QamWlOX<@%
%jXXMKK3HY(p]5UdXYNe_cr_'!"]XE1:8ns73M4omb$:PmmF_!uU@1B0E)>I1J]4+K=pnO\#%610/A6SDWD1lu0gR]S$g*M@E8:MD
%Zln?1T;B<)8=^CKH&sN"US.Eb`.l(d:uJjTLB:A'KSqjtK,G%$0Oo/A0f"=cMZqs-"bB077"GAn8Rjcf,M0Jg"50pB.1G=T#"=p\
%l/HtD,oVb&J]e3<e/'TRCs.tCdL:EcI,WR'UINaj2RI%a>X7#7`s"**4H2c`3uG^;r'<71ePT$;b7@]^,XV!V*._CLmAiM_+GLVf
%6(+WZq+Pk:%g4p`&L(eX`(<cpTI\_%4#2!fRPU34#4YFgkbDdbBEqL0"f?q2=UT1Oq5)q&&Ps[VR".\Z-Hk-DHATTkiCGU=C7X<+
%NeX6T9Zc>RnS3YmELG&*"`Xej7-$Y.#Q!b_?]4:S5Y(^iU0T+?SLD_D1<1S=P^'4+!nKSaO&QPa*[pA9.^0"PN1f"<N$]2pA7FOT
%>t:qO`$bp>Ami^ZofW@[Q@p[<iLW01Wj3na$Pe37!a5Y%WY(W4bU8K0U6RID+RfhIPHJP#k_]!:D&HY=[Y^qJTf+KcndLim>emi*
%#Q3m6?.t"NPQU&V(7:LD#-om5/gIK)5UN0+/J_muR15N6#qqVQ'If_(YZNRLR1,=W6IUX-!i%'0b,pJE\\N<4'*Jltphj3*d`fQ0
%4'M8BBhIt(Ns2<iC'9SP8Y!SVUB3b.(Q^8OUgqi^R8oYaAannOj4qd6"^!+**pD4Z(V)r!!Gkj&hK+B(5dIWI91kiB.c+Y\fST3&
%>S_i9;ZTH5(qg,1IL@qB=='XZ$Go_okPA)rXN"j(e7&=,F,4bPhK%6Y,U.Drak2;tZiqm20jl'["u!AOjO%pW-Msm4d^$['Cr7AR
%V80@gfHok;n.!2nRDabP=H>?BCV(q&l%K&)OUL35)6?1Igd!+9oiW'@`9#3."(s=t&gOiY(I=%$[4ie(3%2"9?OE`oWKHMYJ`m]g
%GC7CV)\6cW)Vg3hAb5[H0HH-X`H:AW+2Y1GnH0>ra4?aiZk2KT;Lm.8Caf*S$DsY>C\st7=VHb0Am7`82&LBFnCN\)f*P;B)E[!1
%"]qq9,"$^D$9Zs*.'S)fS4sp)D+fEd%'R"c,fg5?/dku`J=$d44^e/K2M1=RB>RT)$P]YKkh%[os/%Qtf7OZfG>QBn'[`jCZ!83(
%9Q)A!i8DE7[.+5ci!=]V`(i/7^']ZHdpfoM/]En,&AU?#^KuHqpBb"%]IOH;B)`^5Og-?>f+"tBZtF2F.L#U$$:m)kj-=/8+9g[h
%@ImVPEj,VR+h]j-J%#O=Dh2Df)CHe7KU;7+JeM&$>qY.dft\EJ,bI"Z%o6Chhu_6sCon6^caKVXJrC$VB!3gl)\0Tgs31eF=IuCF
%:>i<WS2m\=pbE"KPQcj8;,723\l&QIEu$GV#a^@j&NNN'RA8s05SJa&pKSj]RQA)(lm^H2\_>4B\/#m*U'3fS:q!6*M]DgP#n1:P
%<'^5C<\E/@Qjmb?dZ*FqdQq9&nKRf4c%sumJUOG,"aJTt5['d/e#!EsH@Wb:\of-K=^NH%'POLh'au3_9blnu)G>gg2;!GH!>1>&
%EeXK03/f-##usYT1or5RN5U_bTSEQ1524eu$QRUOJ46EX>f.=_);r,ecTV)iiFs9oRA+qJK64/I6VQ3DlQEuB*T2a`KRc?HVldWk
%T$MX+ctlZ)L"Ff=[*A4U"oN[Lm0Hs]IqjeGT9t$YAA\1>$VKFBE#ghP:$;[[!^;*sTd"b6;AQg]ZX$GEIE7MO*"==F&3[j`V[ZoL
%JRaQF'@'&A9KX]\!aCBH&]_,PM!,4ABIG-WE(C'p2a.3qD/i44raU_]!]C?dSe]FcFQElV=k$:$M-^1#`48Yo@6%M?.\C"\>c;VO
%iA&7NSJK,mk-PSs8u;tReAC)QCr%;1HB'XVe?QM,'GU$a.e-)>9*tKii#I;_[Or!kk1[K$!p7R/aA%)N)@@H#?<o$Xb)glP[ZWZs
%CW+srKasm\$;!0V>g6ZoP=eN<]hqb'[%4D9LY)DHj*Keg%QbX4Ri5liCb1!ti]FRQ4lA+.Qp0l]`o2ViEJZ&\$=`a%g^,*";V8tW
%:,q_GB)oa]^>U"NSH.5YMpp:4aj/a.f+P]c<#l^b#g"V04-Z&Jj$AqF84-L?.%ku5m<HEhRD*Cf_L?cFR"\+(N9/0/2$>2J"lF,"
%W'i9oY*ZeH7!>KENeJc^P![dIo#o%H'M9oSE`gJ03(lVqUI=HOn<mg`SPkc@nie4KVf/!#(;ue_F,:7r+eD3bVq6a'?90=-g^MfU
%<n_QOA%SDP%?r7qG+_p]iNk]tnU3-&H#X9>ZIN!aUR0EXC5!YF"XIn(d=2G:Q;"%m(Y;@5[&43JU/8*%WHiJ+hB)Ie7.3R<@qf`*
%LW':o$M\EP>,UOUM<A)8X(R0!cpWkr'$JR#3"AAEV/8B5KsMej/%5H9k45%([>=,OL6a7f4C;16:M+&anAJ<1,udHm@*F6eUY2,2
%Lp=q25SfZi2pYH,PB;4/d>NnJQ..-cH3V[r#gka;P"Er8+@_VH5f0mZN=eF_!+Rj8+6j>.!auQsFEArTo3&K:<43KEI+X;hOcDDg
%EhoD2:O@rc#(gQF>$i&`J]>G<MJ9,F8/?!4cX&&$mkHC26V;0<bE?@V.V!62NZC+U:n[ScR,GF2U$]h;oj_11E;*JB'a;Ka_cph:
%c1F=rHVBoJs$Fn!M4C!-`5T7n+jAuQ2ctWM#\cu]5*eOeGEh%91r\Mdi!)T+Ea8.j]4>:UWaXZeCl+@YC5/+!+G`m._p/AfL@9u8
%DSpKb$/,@4KNBa)qn=t:%0KfI?=M;W*,lWWd>NqK`\k2DLbJPj9/852+J)Vs>`2CCB`AD4q%+AhSg`>Q+nYt"2TBB'YhtW*3!rs7
%QU9Hg&-A4KL3QW2*-iqePr@MkA_40l-;I*C#dUB[f$si<(^WDKqZr(PDb,_%3dQpE"2O;^6Gft`&!.DJo\f_fGEY1U&H@IhZ4e&+
%//\1JKhmZcX<?9",_^W/JIUuL9E]ndAY@!9*DDD&0P&Z03'b^qO??)e,jr_E-[!6;Q_4[Y*:67hSq7M8L??!.i/TF2/.l2F2'.oo
%>-)7DY80pWJA[&2Y-^YR$$^A^E@312`74o9!I,7e>8m@PVpF*KnS@mYigL%GNHcKj&r?pp,_`,S$3tZ\rdi!mMdmZ]VjS+_+?D^+
%-&?qEMfA_#['8Ni+hn\B^j]K,mQ"VsA[tGXbdE+1/Q"0oX!fd2>s(:\UI#?3#0+#E3PSrd+&<:A:/3VK@l/HdF@9-fM=KH.P:!p'
%TU;,!Qgc@!SiCe=Ck>tm>VfNh"4[teQF$X#fAHdhbq[rNR#f7SlROu<'(L_*:s3JlQ?7+4Te!&)Hu'l;RE$IH*X=%F)R$"X9.<&Q
%#?!_T1\eE0e(LuILc<2W$n&u\j%*;QNuA@iVpE@R[BR0Zn\[_(3I!C6ENf#nY!n3oHDb?(nS1mUH4_lO^&g*QWjWlN5+,q&@[TL)
%!Ls.#Bq+)tn8QT`O=7JDW>jJj5)24f?HZ1G;q0u\"kY"3^'=$W]Ni>%Bu,0bigFi&k*$cV"D0`_/F^SI$K,)tSWLqK+e:A2iXc>S
%Z"sP?EA/LCCP7&ERRJ,k`1XQNE%TK&"\PtmCV_so-<TpEBt;S3jc%sW@"NpP$kO_FlF@]I^A:5.>lRDYKjGH<+GGsj9t$S:0fAHM
%^hH0Q^h8-l&:/8BLBJR"=5ZH&i)LpgnL5<,*DAKa_tfYD#>Rt8<h`,E-gf`oV9FPm)%_Q6PaDhB4N@IEAc(I5[Nr/:(5?@P,L1?9
%1"p[;,(MOjb^_4FSlZ4n(IcQ,lndSP_eN\\'I%DNE^N*[=ENK:iLh6^pV@N!jaoGPK*:iaXKB">:2p*(6p)J"R0tqCQ_.1#KEH-)
%iLOdV,1=`R%YhS3"+g/Jq1VVm&B>=29cJC+>aZjt'+2dSOLkuZ$"DdK#LJe>DWb[rM%Jl;IMbsp-rQ.3#B=sT(&^HQ,/VVZ+R!N/
%X:HJIc9dba`@uXX=iqVF_\&K#NFPnqUnHm;>K)->LnpKUD?H>pB+q([J+AGh$O6g&!\W7fQoZWU@'S^sabP:S@jcL-Kelasc9i!g
%&Np8<]j0r&EfY/`Qh56LUFIionHYcm7-DBeG7[eDgHZSd"G;?W7Jml!a$^FRD)e8u#D&8a5)t8DM>D4s_E5CBI*:%Z!V0DP6GRI_
%h?ZN;fE`8)0`q\g+'cd/fcD?t!7kQH7ZcK=B5tUGc],p%GmJjTAV1j[6Nn]ifa@E0"eVHJ<M0k0SNp-p&+bQKmm'>m<]`F6;=iXa
%Tf4_[A]b-i)^_gEGQf,?`Al-K6s0Wr65=Wn2HkR_J`bl2\9$mEFMf-_p?o`hSfPoK1"_Hpaj+JWb5gHs)dG]YYo&0>@o)"n5a"aU
%]qW#gLSJj@T4Y5;qggLE#@Rt09(OYCIP/TEaqs#HM[N"*4b7KU*"3M/'mr"q?!MVS+edi6_RZ,p(^HmWD/aHJ,-;L*(Y$T,:uH&g
%)i-:J31Zn264LgJqk&=IYO!Ilb!lp]c%E-1L'p`XNYI4bMkF*PgiPNoL"gdu5p-CV(0k]]J_?4WL0+hA2iWHb?pfN]R"q*#9["[h
%3LX]qJBq``(1QE$b$P562Dd0/='SJ4pn#QP<[/?RGP-@d"C_I4a7Uau1(`2/Z!Y]9W*PRQ/:r7-isARHBV4Nq6M6:&KE4bL>>F<4
%_aV%(TYt/l[KQ"iHFl0"BfuWr3-&sar6-@M0qgQ2?[V\s::_;,L9DTu&i?NEU9qW'TKGIi_paD*!E<;RYRT=srV>gS<&dQm`3T)U
%0>U"4[uQ4g:?a'4R@@Xjqki#U3%jec3J2FXqgAs5Ol26"<(R7d+D-n9N!/h\q'>=U$lL%k>d6bsJXdeeqQ,9LbsQ<)&d4A:iRPP[
%r;^XPRiDIq(7^0Yo`O]4>Bl?e:b/'26FVV+THF8]pu&odq#.HUhOfWd#&CuN"O#,YpqOngEI?'6fZ!"Tq4rP7'jO)&XVm.QE,u/n
%#<3*6EGGQESiEj1R'<&kX>gd/%W__LSnX2chjIm#!J4^K48Q7I-deib,"m8I8^OCRS"'I:#mZhQ`&o6#C%lY[TDo,)lgR1;k%uS-
%:b?\;R$Pbt2&6\b%#N&J&ASVh[-`^qc9=0T7P_II[HgutnN=jUKlWjof^L']Eb;:iJ&LL-7L<e5@=+^`gp!)(Vb"_f&2W%P3r%G8
%pgT:7(09A94Xt[s/KLgF+>eTk;/&E)#Qa4Fl/*1<N^6\kj9d'OB'YAV0jY@56HDBW73T/Q(M:&8EU^.F)IGZuiP=@8.u>9E\8*Jt
%HBp.c3B1.N6_]-K3*N-%noZ2n)4qPi8W.#Ei^Ir@3I^/D*Mq(!i0E']1[[MLMblmoS`B\mb.:=!5K+Wt0h8D)3>*QgK5(qB!0lHL
%)oq-'R=%_i.)fiL<,lSF@*$kt30m^J%rdA]X>M*)/s`^f%t"F<nm%#3%No/T'epM+N[#/'NQo@i;1rH-S7sTfi93F;-#sJMKK'K4
%R12)4+9,Mb.cJ2OKgSI6H8/Yb<XTn0-616a1IbQJJ-5MahsE`7#MO$H!Wso?TL1lI)dR$]<Z`I:gD!Gsm:agR+?+1Wm-0D^a3ch6
%4Affh(>&mB_!)s%]P6#SUp.6H_=<V<$^%#O0iOg>iF+QJ-$NlNLRh&qc?u>0Juhm5?6C%riS(YA)[[,dkHZP6/3-0.E-'![qd"Y9
%N&O"4)u-j.e/I`M!*0l&R)0R`*Vj3\j'bS4'9RqJfTLTUVAOc0o@#D4'JtAnFh(\Xpb5)ZPX2aIBcnhAP3[(7#\r:jbnY13T9:(>
%32hIU/U\*sL!&$A>qD!^^]eZ5c$WO3!Zl=X``63>g+=,C.1M+PTRHlU>G#7^6i\X^Z)94+@V(gEA1)tqIUc">KJ]>Id[hgi$2B19
%!sSfR17U0%YO(%q$Y5%9$t'\e_aGI^H49GJ<s-j0>s!"uo*_]8KB0k@n;oq`j]XX$"h1(2_/\NIOtV\Sio2.nMRWZmba$@h2R14(
%#9MQ=,L1=@m<lYE,uG-X)oSG1"MhfO&;Yc\0fVJBSI51hFR4O9"#gns3ckCX^$M$mj@%9&>)c(0dK.Jr38f-XY+4>%,`d<)^J)r\
%4:-OZE@cug?;p;["^]6)&TW5[*Lg1qZZ%q]9<lo5NVH\HcX$\),,2oi^URGiWeCo?Pb7IN*>V83a$E5.]fh_5"IB7a#]g%J908GF
%*V5"[BqZ-!kBtB#@,dY'4''19LB`:Z'W,<$huc6)ChlPXPMiKRpEe<Tk]#Or<[Ol'/mL1j._1Qi"Y_)s5heR3Lnr[Pi`HL5:tg^;
%5t%6ZCke_***,qud^,#0InQsYhu2KVNP<I\PC:K]aT)\K&k(tg'8G;MJ.OFuIHp5s7m?Qp*QX2t;gc%p3PQi_`<dIeRV[B8f-k$F
%%UY!bmP'eQZ:cVu"_eURnj(,?#Snsc+*$3EV.XT!]VkW2[9s,*.5n-/%rq>DLXGl0+mms6NXS:&O=Sn^mmniaXuH4n2?I%54t\>Q
%o]pLY7Wjp:KT*0.-=fkG1*PB;`#r\1Kna.Q@TtRs_5'E-G7'\bQmEN:@gZ(NE'8s;+.ql8\*NqfCu0a+Z6[(U+[grgD9t7&%+jR(
%:tuK1@D4)VpbI=$dH`Jn:],Ao1?_g[phoZa&3(Q$ol:@3Bp\9(>@I<?M+`qLY.9^M!VRcQ7gGA%9VnMqTf5&f`5q6%>$I[Z#>&6<
%M9].L/JqQC>[%9+"-1X3"1]Pl%5$sl_"AD*S_=*di..B$$7Zd4GE+S*&/&MGUcg0l[_i>+crlIQLn-hdFs)+FP`WEqH<>;R*s4^_
%J.^bW#V9_W3T'"Bq38p1cane&&aEXig%?oC5fX$D`NUq:SVP7]+$,/"lEO(99sCPIBCT\l7pYXV-NpP;8dZ@o0RfD+HBt\_]52B2
%Z8n7'S&0So`=37_?7-_65VJCi*3dcR3cs8nQlLK$-H*9JH_[^)DPhI[kBA8n@Ja_qgcZ/1FLhK.GC%?c*^]#hZJ3`J/Een^Jb3^[
%+%UnR4Gf2?E7NY"&9pD%p1:?4,sJ;UNa?g0g6VMmE<0-rH?0WIa7P*FA[$K.?D:h^8R.p&i%C%[CmZp7GP^qke!t$=dsk59iiDIl
%9QU%tc0<P-EPeQHcdEehZBEjaJYs%H!^g>J0fc"pKUNd5NoW&LM4!<:FO)YYCP/1+cC!CGao*$D*3O.Ac9#NVIr^?gD3:HF6;T5-
%/9'.4`%LPpkMpKVJ.b&bQeQI\!(ltX>ld/`ie>%*9&a`8qAU01)m=YC;oI]9*6HNOgb9d^,u$eZg`2AB8l,=>-9=a7L\uAQT=ZMS
%LVJ-(nNc8XI0<:6FUh0\Jg5NlPOP[p4tuMkdK`ub4M$6A/4h7+Rc=,2l#4T!B)M&2aknWPER":5B_`U!KE@1pk?BnA[[QHs+EdKD
%X6+:#-WNW\/:?;9]e'IDZE]&9,j!I=jOKR7I;reM/U<lh,Yuk4RWDIP3Z,=BGC#bXMdZQnA-tWd,ERFSa")Eq!nYgO\4psQ%Hl,-
%<m*X/CqM!CE&,nNjMm);],Ye0[scrCXfo,TG0&3rmL&KJ74tod1;L0NaRY)43g1eo3KK<#UD7Sckq/#&8;>>s)_Ma.H@/0*_sM>b
%TBh/uM#H>S1`':!M,k3OAKaeW+mqtCF!-)p=2FuhagWl_Z<9b*F3@Si6g"7r*8Q>4PAV?Lnue%+MZjW3>c&fR,,/!`oh)LBkapZh
%bNN#m=t*C_RYZt7N:jfu7-$21B?-+_<rp7N1*G_E>8Y*_](nE![H<7^94BJ-jRlO9'a!Ie\R6t>I2*%e>[BLCYFHPk3W*B<(3!6=
%`Ve&$=c<SVHu=`f`NVaj,8s\dl#7)!6G!=>;Bh'h,Oc[%lfrBMBV$[u`PM^/QZ8L_OYV!p0S.lj2(%TL6Mrh]]'CSn]>P'o##YWH
%<@f66K6H<N"(te<#Ts^[k%TT+?g;fW(k,P91]B;mDuWQ2p>9u/N#@,_SM7U2KRA2##7HVsAt_#ZDml@C0]C;Q+F+h!QK:l6[Zfd-
%$,R[/Hq-e86GSj41;W'08DHhb$sW6b,//+E5nZ>?-cZt>GI9CZ]>D`@o"7H-.;WS79iH)mnC&Q7)1lBbr3.M#GT\1E8cJnJ,Ja74
%(C;nZjh$%!lh]t,nL^B(0`aN+,0h%$-44]43T.(JC$l)!A@1uOF^%(nAru@93Cj`@!ECBneJ,X4kNH9ur+,+M?m&J!nSgM,j\/7G
%FbS(/`3)EPBOFJG.VY<*gof[2&I=EY,^Lm/3V?VfY"%N:M0ibgo?$p%:BoS0M\Z7Io?$p.I54JE.^3j,-Z`"K5a@#)o@&/cY]nBC
%lH@^b#CURbE:uHlnr=OSc19n_r"P$h=h3Of3ID4]j:$rt/"Lp0Z4sjsr%O=gX)D\K/4MVl16OC:I>juU#]MMfDrY!sBb*_kpZ#4Q
%Ed-0R;dIIUb%Yqm)(3U$oRJbiaa#l']$:fQaA"g.1$:(a8@N*fL44ZNG8.(k!H-ug2.e-FPo@(VW![@_gV[Sd"L<pdQ!AWh9o8%P
%q#W/a`6cWk&<h"q9\2[0OP5_khd/.Dk#dg4nn]82gu?*WB)K^khlF5S?4:%&iaCgBX)=m8bn^'A99VnJCW^u+L?4f]ZQ(T)[,C!Q
%JL$_o3Q-MZ`:/j>V]qI#W\tE\Q'Ba0Qt[F>67fjiTi2lfeO>^U)(J=^e=]>fR,]M"=$k1S8$:8F#lDMIJK7:<n(Kgn\>:8mof)sY
%?d;KV/[mm.ib<U(pMV[@BCJW$eunL;.eIf.@I?S.&rGhH]0pGra:dLD=t)lM.Z7esQ*9cfj$d=(C=2#,8U*D9OA)gIe;BmIYiJKF
%$^AXdaX/ObfkjssCZ6g6i(HR(/pQEZNZg>a=JN7@$Ts.KVMMi]S9:=Y[Wgd>$l&n-TO[8O9Z33mSY6d.Pi51^L'CdPd$)>)LHY/*
%Ru:cZ[`uG%EdWMg6X$iV!Bq>k*!sO(6Xj2)0!UMBUjT4I<eo<-Jgqd)GF+eD-tABjjAL@gLc"RNT?T\t;PXocoPFGE%qd>66YncK
%c7\@Kr)a,UK!!@2D154#e6/5S5[ot(=g=F0i%U7N=e$a,&n^Z^,Re@+ra(g+L<`/;"R(5?:Ed?YcSIF<f,lY1/,EN_hYd4TRdp4D
%qq[f%gZcXS@da"5gH9qP+C-8#D&UGoR==Ad3p8]UH.9DLG7@@"41N_9E;48nUEXa#n>g=WP"eCQM-WFld0a&J`.1pTgEf&\3TXPi
%<iKqd+&KpWB/Z($-GIhJZrKLg*B`DaE,!!k&Wc!mcC/opXeP$`O]"?UG&JrLqS4R;^e[![-\W6=EZ<O`pd&d4.<Q%tSi0`YE!Sp<
%-rL\K;l#YV*`(RuHa=j0OV'3$WN_1ui?\5)a`]fd)?>G:]=1=.'G[auE-br*D%M#%'hf`AH-D&bn7EiU?p*=6J<#1rX$4^Z^dGsY
%KE(6]11Y-P^KdPbi&'r*;B%W:O=u6DO@>3UEhoXdbZ^k4di^5Q]0"b4i\(9Q!E0dhDK05'.?3$rObfWnM6sm1(Ngk0<>nW:h-CDI
%54Hi'/N0:/IBhO&iRJrHb=rf+7LUUqZHYB-0jj]dL;kKNE)nEb*983*#CaI74:_)d>9L`^beX-BEZ@aC>QUs&Y\[W3]UpA&#g_<E
%*b33OFL5.a;k!8c2BIjuZUMUI/-SV(*'\9*H9R[903Cl$D"Om5k[>Zi-lbo+*Ze$ZmgDX*Ln+$P;SW4P=REH,IoDlid%a<$ODdb^
%523G9$#rt@e4,lYO-qfP`paqDm@rf.Dj<Wh.,2OQb$fM&M1k`H:96s&'qckE:ZYY\gXVthnQY>Hc<<XWUUEg"dqa*X#,3'fa<#9E
%#bGVRP%S7ojI>P881CDO"ABP]P&.4^U?IO[V9lR<KQ4%S:p#G(jOT:,!lb<je9.M9CsEFR6p$;@77M-\[\h[AXpmcXX>_S#g)tG(
%94&7rl6dTUV)B#S:0hCMXrLu.C_q4*=K@ZG^ZeTKmHu)='].S^K;].p3CkQ278%J[CC9C%h,gYQK=o(<f%aGW[3=`<F@KOjWN.83
%!#C_R#*@f)GM3IS4G%ELZ77G<BLlsU=)K%-GTEsr)G$GBEWltEf[6[b3_BJZmgqb4+^&jDaPo:+paID,_]kDVLgak_e>e>3:''qA
%[C^2j77D*i'Q8igIG8ph\2XOTU68h!Yu#10YZ3CZ>hE=8]RoXhp?.^*5s0Ifr%<r:9CZo$k<WAYUCVag8cZ1\MG[ZtO?jVf4"A+b
%j)oOs0'^5c]+fQ2hK3XZLT?06.O*o-76GI'K'eG4i*+t0^`*NRInI6/@MYliN1r=1)Ba0t$SI"NfF:p2,9DJSmI[U_]+t-Im1t+k
%2;:E_&MMj@];T5;[nCR9aRB7Y]/rh6WFcbAU'm>E[3jM*(',uQX;BH'-<ceEScS:"9LmPGP-sCGB`]APT#sbZ#H;6M7\7H\<`*JE
%8#EdRdK[jpD*<:W4CBL)05sK-^S[ZU.uIS'U=e1+S,sQ)b46aQJ;Kn#&0\*``(if5@;-=M8E;0;T.[PID,Mb.gBT_TUIA%:eQ"(^
%[S*mkEPrJ-,b/HgG_We]pj^nIq((/V[Y6QD3*E_Pg^!:3QUJAAq*G-TD$4_.8GjJVY/hIsBn*^1S,d^PVT\R5[Ylu"XGui=#/&TK
%lp<VcDCG)FmZWVoOEd%JHmI#R*e63NIdG_H$OnA[JTVsiqn0Ot->^=EBd7;Oe%f.3Xi(K!#bHTkr348-*cX+X<]%8p!XZ3;EGkmh
%&('MUU&]Q^#B.afXHiCP"([,?\7";M0TJJ?,PVY.)]?K2W+DE,+FD0IC^[h%h"BV(LHl'?q$>j0`ZR5jiAC'I+bMW`c:,jT&F<Yo
%G.c)alE+_3UBfJcD(eeu,7(a\Z-I?s7FF*J8Do23\i*2h'>n:.U@_YYTO-@hdg=<A`C]Ye^of!I_'Kr3%!]gWIG:&5IAGH`L]j/g
%O<_+C2%<uYdC`/-Ml\%56G1Gfdd)L>9ol6Ubq-`t?'_OP9:0%F,X8)\$(F5M.k$l'TY&]-F^5A%1W/PT@1b9!pL8[C@_i0-7E43K
%4/8A*_?#`Y"qCjQ.t-Iji,,L#9j(oY.7:t4)"c[=0(g@pbpU+/84nTagdl-DH=XT%O-h9LF\t^nR'aO+I8<1,@;:%W"<;:a+"o/:
%RHE6@_X_mk!j_4,aL5`Wo\g<d>QdJYlisL!f#5,jKJa@8(BsUu5J&C-/5QYtks@k[C^DjI0Ju33$cWp<-Y7\jCHJ%agQs)dcR@HV
%SmOE5$$pj+*E,6Q6\1USgb:6NTuY8tY\,spZ-DGS_W@HNJ5,Pi*JU=*`c5/j[]?d6EG0)M_.U62@Q'N[hh)/0\W':tY,E1V[##G(
%m+([[2_"+D'opeM-8B\^mo'3-.efGcomo_`-/=iN5aqhSO/5X.o?.0:]80Br!!4("8DjT;1_'gt;`"a5nff0;4kpk&"jb6DGi&N4
%gj3R3qBNPUW!I8!he.s.M%PGW0:l3ZOhjd,.ern.,p;q>M`6?:O+o#NXq-16*2_As'EqIUK\.n'<A`4Eg;EP7%*+A1koX+Sr%9B"
%LU[p9m?OJ(nAItPpW@:q:S1uF;-g"Xf5UlZBs;$?Jr.(A\7kCV0LQ)b8MIc0G8IH<!^5pKA38COXO's1LU#UKeE<(q<`j)CBC9-l
%+f17TDR'j.C5Y.\Ns+FP&h5Z$3#!NeZ%Km)%"45Q[n_2h>G[H.@uBrkee.mt@1'RW_Lp1F)&sSM-eK$>.m!ecb]oXG'M=S_:5>Z-
%SY_Xbbf$@1(kMAh"ZiuMmH]Z>>Y<HfM2_>c*8u_u&!,Rd&O5]9,%\mKfYtQRjD3e8*^-q520G/g37?ESC*D]bNpM2G@n/(HJ1TlS
%4[_qiW@e[c?c=q?9j_$W@*R3L%:$p`"MpB+R>k%nJ8#pGR7[ESBFa5q38jXES>_cgm>*rBH"OF`/QqfMT`Ggh\%n^[KWY^,E4t/9
%#N@&p;>VBQ#VUVq]3N^**PCOQjtkjA$'[u)LOK:<LJ_nM9Lj=9&J'5_-kL:"&.bZ?0(R!R`bSfNCZph!9TdAg6/UXr*El0-$j6[d
%23![+4]0'9>W*X0>HsTj*Q0(6ECBGoQO'G%UI61[U`plVTWW-WHifLOm+,+H363iM3]cS:Y2j5H-0"GN+db6%G9O'i+`JX"q;nbC
%p_oOB*jKCSq>Y_X_N%X)#YKQ>fJO,"MSXVRDe\A%8uReqo^J/@&F/F.nA>?&-fA8AQ8/O2pl+E;5%;Mp=`rdee6$_dX:8T&r5]rq
%h$/eR0V4[&@?FmgY0n=>oc6'Xk@6Cn,N%\OJfFTaAI]h-O7.!ir'71'oisLb7G]`[rVu5t95bhDP,17T_#4c`<[Vhrr;Gh@C8`H_
%Y_Ucm)Wa4LO/QJE])Va%Djbn;f\E8jM:Ci2-BOXY.<\+hLV()[f.taK0n4G!C16h_/27#t'hCc\21g^aL)CY77f^P_pA&mZIPM-d
%R2;ZX6CW=YXc;5_a3/=E==S;_\EDIu*Hm;H#Gj)m.i0ar^+9TH'M>sjTAD;02ApmUCBd/X6<]";fjK2C\&OF0[\X0];h:]FQF`'D
%np]8@^cjT!*FP6PZG`Fa>\eHYo%uPEGtY37@.5,(l:$lF"qZN&fNO)?C*&e!eN+nGGgdJpdr.,g@9%6jfAp0Ih6XGaUnCmi!C\Zt
%fDX,gQ?o-7"E'>k6*3Il<u3o9cK04^O[&T8Xj8T<AlV"6j`Uf\NcOet(O7UQIR0<lLZ,^h@_=oNN"/b+32^1KSV<T>bcq4-9'L:k
%A%@62RSFK@@mnF=CiN^'Z.o#D0)#5mgj,&l#$68"gh`q[i9I"?Uu1Ta]3KQ=l+#F,;8-RY1FObSZlY.*V3_^V'GUsdb&5ppls=CN
%JD"[P+lZD-+%Ae97V6b.65PlB[],ap];5Wc$b"C8IJ"l^BV*,KW9&"B(0ECdBA`,&o&o;ILQkJ"a1o.>N\UUYRF?5dLu2NFn8dJB
%N8o)jj8C,O)!j5%@O8$(C"W8mAotBE]e-pI/.KFl=*Jmm]'o.FkPWrrF+3O+mk)gt5kO/C`UDI=9`OK5fAQQB)6jtn8#NgEN[?]e
%[]2_eYe#LCc2pb@AT_*1DDnaoF;u6f?cuVIDLY1L7Sf_+V-1KB;a!*0q-5@tQPiu$YqfpYk`?J[GG9P/(-R=V"nEl5>fR$)@Y#6b
%%sj@:%p$Z3@"aamV!cbX_s7DuKg`tJ/4*+D=b)>=8J:t@J]&7_$L)\^7.kj@g4cJe(8`!Q&ZShP&+Qu/;1+bXieu:58*Odr%!-`:
%DAUbiVJ(id4Nh7EU:DG17<0':T-A_r0uRbt^.YCmWg]]uhV_/GCP-,85i]tZS>W\r$^5=)7l,>'!a0,d>?_f>Y\"M!5Ve;Z'M*&D
%p;j9-0IG9R+pc^Y<FL-'+j"MJ4MEbF_gae\B>44C0<EB%>CjMLT^i<7n>mKRU.@=!2n=&IgMV@ZhRn)L*$[FK*a#OcQfTi&Pd&:W
%S)dY*5%W\=#c]j/q;>b4mp9g-<+t1bghOOuA#_u1q>C++3II#Y`(cc6SQ;Seg?u&6,(a<h.9"elGC_r&Y[e0C?rk\BiKn_9mnfdm
%G(e3)G')VScU>%/UIrtk1W0"/&_<YmXb>u=7a5)I8\umqpG[Lod-7D>SH^HAWt_I0iX]T);R&C&g]?FmQG7$qLf8-:??l&f9sfp8
%b<jL,TZ+TW]%<H(@AiB/U;oh7<i0-T?9;;@rq4omoDS7FK8+uU#5@:&o"hGe4VPktkHKVbY!&X#/-EBEZLoIg9pOqb$T0M)KN!";
%'>h#^0s^Z,n7b:dS8eH?%Ku0m*%;!JO/&uoFXR/sg.Fp`2[/Z,MpeN'9%N3!/6E_i=VNt#9uZa<jK*Z/")O>j2-c24q=a]?@BG/-
%C"l_+IB%caSKq.\S^(Cgb`hgmVoZZZ,b^+VQF'K[3oS#6@cXK,.V(OYP-MrGHtcEOQUe+PYtLWl:iNq$Z-CERL-i[]"M7Y56K)(+
%&j;Bsd/685hMmS?l,]lf\ZTD'fo=PTG)3p/p3H=NA)ADsMI)=Q<M.4f[EKWdlm'5V-*PYHbg9<6l0?UQUN^Jabi8U37RLAcJodt9
%G-FOEP"KJ@-Np;%ElV7Rbq,<Lf)FTC<ZN43#G*3_("L>pYL``50\1+Ni%:o*GuBH02GBdYrcX+TC%(-DHJ3.Z#b0u7\lqO3JZPm^
%S9<E8h\3hQbot_"R`"8";iq?LeL$%);KWI]8K^5SJ[-LBX_]?uBh):U^6-5S&1)GhmZ!amEl?<.8pT%MpLrXHK?O\3R^q.A09qmm
%DT;Dim[F;(BrP]>'?Vq[+Hb6FMAn5A%VHfOaA8<WhRkqXk7T2s'foATaO6k(h9.T(nAl6jgN@GOUtTd@WE:0AMBm(!hlE2T![Q4]
%,5GWi.@<8XZ/J8b2/$KU9;lE1,kRka+!_0;oO@DE3eUN"gg(.k<'sJ?Y55PRB^=!L#e7^T%%9$_k]u_BTZ9Z.G280'/PX2o@:5VU
%(2N,?jWe1q#uti/kn@kL+Z2uf$"X.[qdE(Ro`p,dkh-leR-pmU09lP'Db!7Ae<Q5Xl*uGTPj')1%Fn9u_^tkYC._=U;[DNq4Q6-h
%>$N[$457JF[I<_/"uEY-[ZHBCdCXf]<M_B3'f."9qT!BVk]PcIPbP4ch+E`[DAfc+Kn9Vc;=Q/:3E8"%`ZVb/-3]T!;dYqh1D2#q
%s,_KaDc&r%#9&5X%m!]g\'((E[b_%cP!krY6nplNC;clh"be4#<T=.j8Xf;(H$RucZ/CdHFX"af(b5:Reel$!g1igRDjPirC8UI7
%h"c1T$>U/Hk$h\hD.LtqV:9$I[[Mus`+4r`(_+IZjJ)>BCL7ls-b@u>4W6h\^8m@+a>\@772&EW(/W#?Z03eX#K89\E71\garr5)
%WUeK:)O<7o;j%jN:nf:+`nj*V:R1"*_DHmiU'duT<UASU(VXlu#ZT#EA""-S5ngH(;IFHIMf>WY^r@(aak>W!3\sA7H'`Re;Tjr?
%*-Jb&#r&*n+^7VHh+Z70Mt#UpIIG7+NLZm`R:0Xt#hBCK%ig#fr/&>2[gPZR.d*8g;oNjSBaiq&BJBkf^0?/T=q]?F_WK'J*aTIn
%0`*f)]$l/*&*'3`G$%[O6^=uKh-i\rj$j#TK3MZ%lonV?`6c%W0FZN8Tk]JG\mcQ1G,qV-DfeljfnqE/Te>nfMm[U0dQia[7@[9k
%JPdgH6;P_U=Xjt(*;#ghU`\3r:*D!DUmOa^`e(:-q!;hk<6XO`p'aXg<`^q.`>[QB7Sun@<,0TBAqKm,iB'?=r^1N6;4_T$Go?aE
%*+jUG!=5jcV;Z;Ka;dNT>.]FP&N(\>2Ms>A0'(&[[I-5TlVII@/Q@*aLFnC!!=^Q(/BYIu'7+[_BAc%D_)%+)2U@ce"qjI?#JJiM
%<.^RA'_ejD]7:6>V;_W1gG_-/@$#X`@e"!9%]U)kiL]9EM44G*&i]bch'#)jU`>/:$]'R!V,?8j9WBRVVbDrAEbb9B+Zr1c=6rIn
%3^eN7/?U'.Yq!<)gjc9cE=0j](&EaV#M4MM,QjS6m#IlH"-5n\as3<(TfFiW6gZZge,6(dm7XGsE+u0i>:M4;Kp5t'kD0W)RDf>]
%amRBM-S-j'd%r00Y.BmU"g4E9K,nnO*_b5Y"Y+l5=F!1Sbto`+*7@@`KaF'N?G_M-OVUt+(dJV7#C(7HI+H51W=(cf$W16aB`PQb
%dD:IJD@Cpq//"m:Kb-%qiptip^I0[ofU2f-@dAW2,KjdQrg59]&<bZ,YK]8=&drA:<4_6T9Jr&CSt7CmilfBf8b?\p0#R\MKW`i@
%VogT0B(\YFN2uB/ZrEN:8F%Ft=CBBoQ_ISSZ6Ua)QPEG!8)Qghn`8@Vl_3lDRDkQAOi>Vkk+X)kC<&<e,q@5LQN1M2KZc1]qX]=c
%m%\SJX<!l]HUl=L'V*P0ZR3Ge!0'=YP2\)-X<M[T=U/FdP#-.!'@&1'1>XP<K,.Ek#?\8N/qk#.DMRjo^5@?"\sBIg_duuOg3'D;
%Ls=S(4Nb*(erTA'[kmDuORjrVnJ&93QQ38flXNs1it^-:S1(9;Y\>B?>./,J-E*JXlq!0=91F$@KIGKPcuV($o\G\/BMB*EhiLYj
%0.a&<)n3fNpE.d(=M]MC8KU#EBAn8@O\<)kcW\`H7K/U>3NLGM8Ht99+)DZ=o`9\77eJN$Pc;b7[PT*qSrUNHL0*NYR`]dr:#Hep
%PI8,\PSR^Z<-P6SU#.lA*Em7HMlk73Hunt+`ak6d+O<\`[+;X\WJ58U=1e<@?RRFQlWD-lm>.5s_Pc9?OMKTYP#F^9!`#E4`I&71
%Y#:K^i0X\_+,LC-E[rCR4[?I"V^.`jZYl,?]>F_mJ.gD.-SS;:9XRe_q@aT#_iLoT;\V:@r'_!--5;]`E9=JMS9%NC#?G[MT?KWj
%\K)0nl,mAYI=L+!?WL?PkM835,8mZF_2`46hGi;IA7Xt)`$K-[$Dh/KBD!4E058*db0<,.S9ith6!^HReGd==YG31?M`NY+=W)N.
%8)l>O[o<=cV>(o-qM+m1YEM*E"AXP9%7L#UCY5%=:M.<X&1=4n(+kL1G=,7jo<\]^HE[pC8$gkT3S:GXAbsuqm>7_Rb<.+4%\#+3
%=0fVG*tF9fKN21=)+$+7$X>?N;R:5seF+3i=`'2=3Sg=;)WD8iX'ZqsTY=aDNW;\W=:i>XX"]`-2o(EElt_R<q<cJDB`rgDH3'D:
%Hu1bmFjbMFlEI+7Q)u<'m.S(eSAp!7g7eaAQUsYtoq8t7[)"/R?u/Wf"uC(c%2tD,I5@]X24ia2eeG\gY"&12^<]"b>Igq]J)FIk
%9n8?_S(AU3e#Yg($]3O;^FDeTgR$pWRYdtP-IlN:(:XrR?OH1/*8I$fWqlb+s$l-Kpmr8S;c"E!<+EkBkbX^;>F'aW'V$<\dp/TI
%T-HsnFXOUcR,t%e$j,h5SuF'Yi:J63o[2rV&J9%B^7![aefTl^*Pbf]IWD5Qio`@*.6)9>MQ3UaBsXU=>P6F2jFnHkNhptoOPjO>
%ckS,B.f)S)UQ$OVW7.?dOo[)?iS!Oe>t:mD>(d+eUaMf@egYE)->PW0o,/6I.b#%ha6M\u.Zt69?RdfD>O.?%fgbegP#VB[>m_[T
%QY8FdAY6jZBgbF$&@dR-$kb''L^)_<=B=Wt-ALIa3TgOL[_ued>RbEo9/K8FGgO@dSPd17[5H!fHb;*uS1F[%$aa:c`gCtW@a/):
%XVa)+.le<_T*s1N8TjBpWRcu"(:=&%5q^Q<0<LH'8P!)H-""[#C-0sf?8a.rq1FAY;fb4_82l=Yb'(8eEI7DfkTRHp,hp&<`"X*@
%EDC"1X&4+]9s%Q-n-lbK1?dt[P7grnoeEM2`<%cja:\ST4rTl2V_[)7+DUn[aJlXRQKI=41%[m;8XgQD(/GW9&K'>#[*j"MO$CH^
%jVqO0\Z0riMs2/*U/.q-jAp1Bc1R:k+BL-hP0oL:84U-n<d.iV[B"buHP7;,3X`M3+t6K06sK;oj(9sd<4[p7;;F!8%lYkt<Ap;F
%cULbu<[+#$psRrF=cGL8;e3f*][ph&^P$J=_'?jK[`[<2c.$;OplkA3Sf0%opl@=#k$LfaX/O4mhJK1T\XCDITBd*aceA`\)^L*u
%`S1_.[+p&7F3-J16"+cik,]Un-"#<L>KG0*Q3/D=Gc12Y4hhQB?Iu>crlX9se>b9ieL34ffq3#^>MF7u7qGiL9u3_GVF<X1f[6dc
%Fm%2+0&A!U0_d#[K44@1Z2RoH;$DsSL/agTINdsuG&\-lUO]/^GTk!gZCOBB6GM81o.6k;"R4CbV`HESTWDBB4>S80#5Dl8S)Ns9
%;N/30#Lb1ZH3%tc-=od&nDr1t`gUj;eH71tK=5T7KFdd4OJWUipRiPG-]UZM7r7:!dQV<+r=\K@97Qq@G]d=TQ8bHtcBR17-X*&W
%O!B,@%t5.j%S=KJ'R`JL*>!_;F"Jh*Om)R7<;Kh`o8+bN<(`IL&9NV4L$d]\0q;GOcRJf"KGqj3.u)Z07&4HNC9()lpt\*UFsHXk
%%CMMNfWXQW:'I_=9ZM[WLkZ]QfTKd(c]@e6_)i@\IP)('M,plBd_RA@+@Xom<&IiG&?D3e^Cl-AX)!jTWQf+ag^,&XMj-No0Zn>,
%]A"3MfB2PUr,8d`8M'OYD>oa,3F7q*kIk!6KkkbI!aXq9II[oGP6Kti8l+(#m:`7;gn@Ao91D47(Z4!TrFSW`+u9-t0p>9:/FMd[
%$e&8;3Ft[^DnrnE/:/)0%t$(!M?,c3N9qo]BmfK$<=ud7g1n4?]5^'k$N4;r1sp-Tm\VC?("HE[jJ:\hcIf`eJ(Nh4HYm'i`dHD#
%5?jU)"622G6>NupZ;p?,]cWL%\H_J"Y=i!>=!<u+q,'t='hg6Eo9d'=YX$h'f0[5V'-/f8C[)OIK((OQ`^-$)U,8/O"FDOYBP4XG
%[Yb3d\pLY;WN37j4<s>l8?0H8Ha>PuXtcEW=[(JjK\&Q*gPhW(OV/X&-Iq/4'of[FjRp1!lh#ClrjUMD=lgUk.fJP1FO71e2JGm+
%"=!K?J3;5@,[hcGbn*mr09Fe"BuaK&;B;/pTr,DaBO)dWh*1](Y(V81Yfj=;,34kDGi_u(L;BT@e_7OQE#:$48ZO,9e%VD3^iVKW
%@^S]o_j;,e=!&^`\j:*NL[G-]EpUDD$iOs#LhW8>CUSQ<TO]XA`Jk<%c)eT/oQQ#g[o_dfJL^+,r>RJXk#6cDb*B\)JIF1*VQ#T^
%*9cMdH)1=P)B(4S*4^8dTaL*e6J>aG@K@AFbaU9ElB_0/8JT6hW4D?t2$XE[ZT)UdG]T3Yd4N%*Nph`^8)%8j^Du7'/Wfm6%]6]k
%Bh,&Ab3C'82EH1gUg*;B!&J>mIP>39,+3"a!q_$rS@t@:M<Ce9#i;R@7Z;>NG?bOMh7VH/IBH9kWYL3*TL)HlN4m1e2304`rGJ(4
%95!_ml2VL1=6`b;7d]JM*VN:o_+m.=/+l$/;Qkcbp5#\qA>@_^(aD<aaXTQomrLR+5KfjNYo\BRBtqK[ICVCg2ei<32'Hn6eDEln
%8,1Oa.,8i-1jTAf?,e;FO:PsH:>4la=4EL*Cm5*-9h=Qt_Te##S,1JpO8)hemj;pL+rrM@nBbW5KLA0-<+pAc"Y1okh$JnBL"3rc
%e/IO3>p';R1$_AF'1l!Q,V=r$/eNr#(<,,BPT/Sq>9)4g?g0N^-8nT"<0*tRqI\I<<Vj="s4aUH^M@9!0;d.uWqO:7[;ENJ%g(1P
%/fEL58m#Bf.Lc]4oBDYc7aO95TaPJhM@7?;qNYmS9!H5NiW:/U^`e>4SV"bq;%Rb)Kd"9G3-e`g`hMZL43j5_DmS!M<I/nOUoG1j
%g@^3bj;>I^[HiCBoN:lrO-m=Y=im1!/^nC`UsKFaO>4G:[!.6'Y0d4B$N9Es)tIbnFN_$keNoGQ&)tf1<QpceefJ$'QOmDi_XEB#
%[.#hMkD6;$6h<&Emg+=mg\7_ccsf?QFr!adG>fBBF?4MrV\4f5pSPq&\oT?R8)^#jD$0;6ShIr@M$J/(#@#W_#]*?mnE(b;AQ[L*
%NR7-[B/-WD64^.=.X\U`;\DcE4_sL)rEZ2um5=atZng\Y;s5XXCrI!M:.87Jl8M*O!fc5$f^QF"$ir@HX03jQSaugdO)"f_Y)5Jj
%3+=Ml_L8o@*5]a`fRT-R<X@,=BU%%B#H(0]P+tqL:'F3h'hABIm_OR_"foTmC2"G7KidG3Lr#2V4+5,;1onp6(%/[;eHl_@\`1%!
%N!Fa1hq_&]]0:_rkC7i,rc]q&Gmf?*K*jt\#B[eTK48q>%mILBlbEOmd_+K`%)Y?/K[J0>F!c[)3-6mZ6c+h5=p#``<;\T2EtA?I
%H]hf#*5CO/Q'*EW<rsD8C3$(c=RPZ<-AN]mam-!ddJCY@3U?1OCtR'Zo43YE,n#_2naLuM7b"J31r7k%L<UH&4]h]=!7-Dq1c2+b
%ma)cD3H!snKF%o%UH7N#"F8^3!0[bXV.AVDBSp8M3$YA*d7?<W%pVFG4!]p11T."iMq-WJ$n,bCb>mmGL#H!NZVC_9#^F)j4G4iE
%.R.j+pB*Y)lh:j2X27O2U5"s$os8dU[XaXd<Z*FGDrpYMV56e@L)^l$is%!F'FYRlb1j9-2Nu)EaR7.Mf@$91>n'pFL@c0Q0V::J
%a5"gH#f:p(Fd.C`G@g3r(l%XHJU#e)X0.^YAuo$eHTf+3rcOf4Ej+:hZ5Oa9-u<-f\l$8?(GLtJBtFpP9d6qmijDKco7B?UF2JC[
%Z8q(P5b_YoWD%R(Ud!]MU9nE0_fLJfi2HCke&VcIG3fq^lSCW0&0)D>^Em)N'rG3lU)$$Z;D@+L,=KbN2UA[^HT[1dkJlR%P>[Mi
%"@>I3l2W)&1//i#qBpK`FpUW@&[9+MAk#l^NAFa=]+V,;UKFO6-MBr[QbH`sjBQ^+kC^=NQN](GdCu,i+i--Rg+262@oY4seRY#*
%NHPheR]q\]%TVa]_\gaki+\CNBhFk+IJnpopGmh:l*fm*W"-oTm$+)TnG6OJHCfa*Mp7S%(hahLnE@Ct9i&5cr4Q&\=W:('"0&GA
%8$qr''AXd);#-AcE!*oOCrq"\#NN\]6p<#"47Ao:KZ2DPG?PnCR@k7@huMr`&'cTAcQuOr_,s&T#/JkfX?:BBa3\Wf8aK'Sl,]Z;
%DKjZ2HD:bi9,+N5pfi.f^tupbX\hQrcdP<q0dOt&`:kT0EpZ^b]qeqICuG,)n,_V2qkrk-s/Ylq]GD<4?"4%Rpq<X$MlsC*CgQ0_
%Iq)>1.@BqdQh[O:eo,:o4u+VF()b]uTSqLa+q+9YoX[DOJm4$VMmQ!V'&>O/UYKRB]63*PKKSKCXMt;dWT1ER^SC")!WP"ok'iUD
%Pr[Zk=NB@*Z_6gRk20<"l[!6a.`E3TAOA?#>h4OI3-Ul`,X!$B/0m5E33"sc=J5C8lm$>lllmpM,.RX2(mdq9aMT$_DPo*R6[<2t
%W8\@=O5Y(#e+7f"^P&e8"g7WHV!M?F)7!-`[-#DcE7T7%7TC\'miqU;-ap6k6XWe@c\"r&R:$4p#umiG/$n7</kMt,'G/G54/;?M
%`>&C(jDJ+M/:?s!2:4h^os#"Y6RT;eg_gik6+'/t%T5PR@;QWX-P>ZP]IQF,,=UDKFb?i/ES;tiU"IU5/H0%@d=OnEYj!U+bX;Go
%>uhnQI^llk--_775tO]t,SppF;ZmB*NF^H=CE"bE/?2C'(WZ7>oRFu>.!((:L5tE(:3`V=$%cpAa,!2`i05Y04KsMnTPV^.N9cjt
%&QD1Z:fsO=R>,4>!?'0";]).lI\f>s9qC'qD$&[Oj0t#ZD;@e7?2*e':5GA"FaGA2^d])UI=^,F#X_-]TFSn+VVd5=0Z1#$!X"2%
%_gGt?^hD^*!D=&Q0%RBpE%,;qo%f(!-qHBemS98cSO!8S;oE9KKhn5\dMHC!S%-s=ecj@,+k1.gD$4_Ge$Er`L=2UUZs^5l7=)Tl
%[Stc;$IQ)=p-[jF5f(kV/0n[JnW^928qsZ3^uc>?h/?.m.t8DT;r,YI60QkC4=k$%8DJR4\%c&iT2g)R`76)uZVh3"42_p%W+$WF
%,G"/9r1],$*$jR@X38,#R[=SZ#D(8G"Ag&1qC1SC$%*d<Be*(pE-mRRLC:uc_EODoQDZI?XAd`#(Qt!D%=]LfI+?lKCXiNFnOEWW
%4G2K)`Yi2VE>\>TU%,f)*([e$L!7L36Ifu(Vh*r:ccqN,A%XN_n.<?6<8Zhs<e[=$:c@+G!DO@,Z=3$S_3`K[$jbn6Oi2%Sd70r>
%,\m]TW=1M<BEoINfJ!m]JIl!)Bq$7_+k3ma[_f3+<`oQ5U.,=lSp1Fo,Ea$TO90s=ab1,L]*k1^TR8>iFu@.ob#nqoh[$3I4U5/L
%@ejg-W<Qg")<LR"_?j/O)K7uN`s>M?&#@>pMh:_!E:WA[XU!WTOZa<YZg<$Mjl6ZfVec>;ZO`hBX2u7(>&ZsDFd=--QK%nj'@O*D
%"7]9&3C6]JL1RpnH2lZ]GNg%9e1d]bI+-kfA-6<X?a\dn`F*6)&UR[-BsCcM8"(d7T!ViHD4u_tSZ:R$Xo@>-]ER:]IP-WW#'okX
%%jZW&:OZ&V?*n>'1U@SDs0E;nT*`&i_jnIKLebjM1^`'m_VA=C\Y#29M:m6kd)=Cs35'8biXq#4PEoITB5(gbm&ACS=2;-[_1'tJ
%W>G8^kujT1p`0rJ-I4.3Eg!@kNjM]Va3@N'`oN&9n_g]>ll*`'?8*<gVFdf$(J2_^"P#A8NglaY3Uo8XA!E([8k*KcP=t?J;9[k`
%FM7#3^T'JYd/:R-oQQ#g-&&LUZMaAs#'?Ha+oh/KhuESgrTi9h^&+.Grh#_\q-WR@C](YkMrC;oiq3i6[sh;)E())h:V8f,MBReO
%C^-,e*jOgS-Fr'X6<C[Artc\oVaV#YQD0V19#mi1`Yh7m8b'S>KU86Eg*HdlIX,9:aTR.Nd-M;%HGhiLdbSo@'EdQ9jmM]X6aV:Z
%M879O\6PCV,k'u<Z]!oBb`d.`gZ<=n!1k%+.=.*qSR)YH/GT*++f-KR;tH(`?W#9VJjc(*pE@)9LPmj*U=Qs"]cn_Il]=0BO\%A?
%KH`cG>t1&?&mE'*lQeO9_]_2"m;f[G!)JRGj-TP5rpcW4CQ/Lp=:SA-:\$<\\/Sg6-\$Fd"^[3;Zt09<>ca73X)=)Ec8OK4W7A42
%#5FE"B;@nlS-5a@+0r/qR)2;h7O^aK)k;]N,#)2c=Eemr/;,SGq0".5H+GZWrGosG:'8!Dl0"uA[c$@;N;JU(*+$/ioCX0Npri9A
%a.\3`cLJ3$/s=]!&)lB2a.86mHT^f1`PEK@b'O^MNM4Pn:5@d*]SgaDeo@VJeSds&g>&%(3UQ2BZSRk#LG4oN+B<N"T0mXJSWhF0
%j)M-5AP[5cCi#KAM3]5=_>Fpc3pq'PS4:8Ia'0R.3o9dXJ3SKUT>l93d<P`>Fr'4ON(6U[hD?V%Bp(,9hh9%PNh(J7ojpX[$4#F5
%6Pg;koQBl0:6Nd6:I9Q9j&X4Dhi@6-p@9f/DT`BQf.feZ9'iE'#;>gK#*Y[G03,'$QXN1o2>&7:C:&blrR)"_-W?e'QBUqAWL=("
%DT-0.Qb"@I\[U>i\G_GgVO6&sUg(jueSm2Tbl/hR7$oN+"q1:WO5WPR\4@)17g_PXr/]iE)"Jq$_q`::+ZG<YU.u@3;DOG`GOfC(
%Z[G/T.AK9^mPaqs:mB=T%$TbuK1T:P.0)4/rD,2B%\&\TU@=#mqpeue\?+e)!J#V\fC(4Zo+n#^iq;3Np%sW/`393_cZ/oV,Q+]m
%luhREnSI+2cOAq>8E!nrbWBCa6I1n>#P^VoGn%.@OclH/Thqm2eG^7ap_/>0J(00Cdmn)SMjliO5=j7%rem'Eie)RP8[U.<'I9]Q
%8)&m[0iA$>WAcl*4DKm/KLHN1BI/cl""b`H_lOc$$]=MulQ;5RQVsnO?%(`"5$&s(07Pekl(uq>$(-H5;7,Jd%&U<HLl7\UcoNsC
%4nh'^aj'VmNMQQ*^O1i,8B]t"`6c_=Ru+J6$ngX#;,A]eiqk$2O-cJfGk-U`01_tTEYLg[1$>#35.cu'l`A@+lWDE;m!'2_6"`1a
%f83)^%RlHqi=J,I+3C'Wk+RBZA-[(0(3@Hu/Q(Ds*[nP1_5@UERgfto7/an#n,LiMhU5!(*_P5mX[![G8[bFa9aHm5X'[-:8@PVl
%/(.Bh1a7lO!(BcqQ>h>o8P&J4rb9s"QDNW*:B/KK6+2*RY5\FYIqQKA^Itq[Q"D[28J4AHXAUR-N0'OqLDK.'O9%tAOhQ7A*[/R^
%N!X,Ac#JlJrFDmCm*pb=au@GMfFqJr-4<"ZW\t2No;QPYVj+9B+%]kH>V#:Yr1&H9dO7nmOcM.uR'0Lr"GNk-1!m)@JF^f64uk^S
%U/N7FbGLh2_gaeRD!o&\fmJ$Vfeeg_:R`[lbug?L2PsT;>2t2->tlWc&D$*rCTJn?\Le"'FU2,<eARXDDj*5fg0TT:6Q3B.q`pif
%>Dp!5$p`o;o.CX:YRm=>'Il<Tg[D3XaOnh5)ukN[CFn7)O+kb$q=]Mhs6RTST3\rKSm8f"/o=KK>o[YUc:$,-aVSh-?EQ\,DmU1X
%Q]=Q3!TVU2*)?d7Em-DWTlj5Cr_U'so!9hB+)e!Q8X!0KF_>nT?tpg.*%<i4F@n(eF)*0A?,&s=6M=h<3i*ZV3]$1#-b@#S3hq(k
%e8\4jcWDPcKU8+D51>bf,l+*7$QpEoKF`sR(l.?!ChteBQVJ:8ZJSCi^42W!2,0!P%dM!.:4XJ3k1*CSZORcY\n6"b2,N^_1IGLX
%AaBq+',>QhIsSd[V:0X(l,^Oj31S2WoiC^XX`pneLV5kO-!.+"7!B.!j]1)6cP(C^4!40QF2!TJ4)?FLeLf!\Z)Kg@q_ua*[/kpF
%dZ2rSnC5(`aD?+'G-3#UEG\>(*Ab"0&J9je"q:m>gB=kdMU]S)X.i4Z%gn:b:E+Pd,4e)@YE#;&%$Y$Fr9g;E]TsB*Om)N+*ZRi0
%J;pdJ,u]jGk_A0;9lC)p8)G8d7@L(UGj5H>1o)Q-.kEf6O&A5&ljH3">VD^e9<P_=(9[CE/[Tr39#u>#_c>:!D)k7r"]R[rK[UXF
%$>&Vgikl:r$]:eU@IfuH\ImqmR]N?Zb-Y2?g;V<o>MDWOmaPEsYib^EO$DW:b;ZW)r4Y%c*%87SVmCKIRs'J/:*u?I'W%\9:h\dd
%R2n%Sh4,aX0>hnQNUYmX>]Wspf"Be18kE(&jYaKb,(gcubDYl+G&Yaihk%hVl0VZW-V8pD=l8:`pn./&IYHDd]sdIA>jcMH4/)kS
%5F4<Xle'VZ$6+E4+MP*Dm"\&h&m`N'Q8?0BIop1gs*CISJ&qIjs*6EOM07AP(%CpZ./hS^h(%PC[ehb<S^nst%'O(%pc9[U69fR8
%J916P6E=`^KF\^@SBf!o_4=l[@_W\SBa=2t8Cb$cW`R%e$gtMfIL?%ZQabV1O6?8n6@6,i>.acN#dmsqs!#j+f\KfB?hiTB:r>>3
%IuO;;epd93!;>c#JaD8hNPBip^TJ?%q&&*ms5GClA8s5M=3*ba^@L%nr5?t^S#GjqfAQlt-1u$oNj+dtXi&?Q/]X,'/##Bm.D%+H
%f&7G(8V^XZV.20fhg5(g(+1,OH/Feq0D'1:If8"0il10]B?A``(Z@r@?O8Tkj7^O7DeABBLVN0EG9-[leDY=WMn_T82t2q",:-*6
%-KIZh]`"fn]ospuP!.ul[Q=j,-%6-G9)L4s-%"GH:rLCYS<`m>^1SbKrX9R04ap&9B"beU=`Pq\6[2YkB;('&h#8/dc)eT/nTQ;Y
%Y/K4_pa[7:^40Q$r=)>d,/N'Ah*-sU[$uX#W)."?"eUpa&<Tr8<,RPh-$.1@Te[lo(^Y%_DJ'9PP/d<:&pD1@\D.FE'G@(*-Z4bu
%.enoBQQ7_d<T)X"/n7;4%F!pWi8;;jKs$;B-)]h!eo>Mi*G0.9iT8UUA=^p6/>49-J4cFR_;e<M?Ms$nk3B064rn#Vb'/JV1A*6"
%kV\AZrUA=(*aUO]hjCdEb,^kV$sE8?(SQ7`@4P%Q9=FFA&GU&>Ym]iRcZ-VMZ+"TTp%%0Fa9(+hnta7Y[JiWm_0$"q,i[;PY@*d*
%8,N=bOqZlM6("0qYf%5M?B/&`,'["de16j?Ef!C,W&7Ia`g0N;O=XVIDfuol6bNk>9?Wq6J,Xi-9MT]$+6sR:B)CuhAX=#(]l")O
%P1lUJ0V:"ps%7nS#QHu@c*1n<(#E+H*U6@,M#M5!$sXnX%k>64kopbJWan?^F-67XKYMR6bFbVfs6R6oVC8:3TB?i\'ch5#0>"mm
%^=CI.^G(kT:Y&;!Oqm(2<,KqK'j([-FU0Ffb2"_Wk-hd#7eLQFYcg4oOt"@N/cC\t!#nJWqF;g)F?cVU1lQKC2=@@-3Z.,6qCN5A
%#V!p]r`rNbB!kHWa8dt>@0MC<#)lto5;=#jF^#@sO/D\[[7YH88Pi5&'JQNLF:1T@58AOE^VmFf&EI;cNpCu>!,*d5(!IE0d$lY'
%=]tKA37k_5a2j!jB9Hfhbc61j:BfBFla,e,5]ATo^DdJnD4c8["hAkU/e\-PkJN[Dd"Ct+8_3Spa\$?4(P1FIZ_gRKeRC91[OpXK
%aTnUi8+gY.RmS<$en<nP1[VuE/Ua7-BmS=-:&o_ZZ7h*sWT?2l<nQ`]&QTGIRiQ`E\kJ9#CLSs,Rs"P_lP9I>MUIXk%-]Ts/#6hd
%T)oG%gQMePY7%]R"5rLFChHmRR8+m%U?qi`4P/O*p./k@S#LWs9;#UO5,2e`K0j)5]L4<'+?-?@"0J8t(/DV"6j(NXM[m]PN3md9
%%XgbF7NaL%"hQpb%F":GkWtrkV@Tr=p!0T*P?(TfGcchW$2`6no0a2Q?`$KY.n9+7>r!"BOmhA'J&Ot<fDjnZH0B%qen8bXhS_j\
%]^@dHSY)9!MqE%0#9Y:V2aU&;LI)`'/e'9jbNL#o@dBpIeVI?dSkeP"N8>QTC7H7M]J=WS;#+9(==7+!!QCc=ADhL<'9PsR(<%4k
%QZn?5Mo?J4nRa@48S8-<XkGM]CSV;^K)@(OTfFiQA54U*UpAY]T+cmr7CG/jrV0/[*0(_Y00>^3<Wl0.1(FAM,W5s=Zmdu8$1dgk
%N$Gj@&asTBq,p*I!]A/.a=luB;>2RO.033]cNCm&bp4F>RLn8:c@k[>'`,!HFjdRIA>i-;CX6e,&^F2^ZmZQek#OL"b+?GYTj]gK
%(/^bc?U^]0ORRc+e$/StB3Xt5%E<'%iE;?:!9:Ljk-E<CjB1RCMa8L<q[RhIkiGID06]Rt\"1Qh4M,mQra%6o&[-7D@0niDP%t#o
%m9T3[D2r%Te;d5I[S^Ff'$BkRpBFe[.0>%"<5e(.:U^ZC6J7SGH86,+7LX("6r(K_e67>)A[1&gU*bmR[n;AfQ*@*jI0HBA!?F.'
%?1DrU]:9@aAaQH">EI4:E*I8u,Vd7;%M#Fd<jC,5(noHq7G1M7p$0=0hi@4#qWa[VT6RL;UnkQ$3sJ[kE#="H=Lc<f(=u$FGIZoe
%MeQE=\.Z_^ND!cl>DA=C\)G9d?0\c6N_:"b-cOh:T0tDY@a&kY68g3J%iH(9R]]U5aA&AgRn'I(KJedcp7?]ig\sXOHs&r_#K`E]
%9b7H'/nnq4*T_KATKIl;&6"jfg.XDTKM@hQ=(pBj@[NcA;_jX/=R5UCaLlPH4Z^thUsk.2r"qk2`o*m%<G4(K?l4h`/K7%tEF#sq
%90EOBS+?4Q1+jS>!=S>J8VV*k1rC"p&,g1[\.lfTKk*6ZjimdTYC6%+[&:W([C+VC?g*tH)rnBHRQs%WaJmELp4T&uA0$r_^,bSt
%+)TaI_DtMZZpO?.B;3`W."@Duq??qBruhjPKE%fYb_"IQ$"pLHK"uJ^+jJ]L,\p1Wqrkit>R47>`'.iIJ_d='[$`/6:>;sR6i=X3
%q@/,Tl0C!X?<O,d>][U^lVlL<jgn;Qk0e%a:J2;D3^7goRoH:3#jLViKK1H^%u:6I"6pL/]Z=eiY`45H&:3\81''I/`mL`c>X38H
%"N23>E8eg[KQ)hGB'o,2`6h:M]N,[?a*P?RqeMQ:[B)tbA-8pC@Ud,P]mjc^pRhDs!rFFM0''ML)YL+T'7ZBT1`L0$B"6pf9^fi)
%fcS+nP2VlAKXmL)n/5!])cON)Vl,1YAn?eo:cOYd%O;LRFr`$Y:*<\OL%0DIk!hBt[FcKD^09-H>R:$!jj'`+\sA^hE(NZ<45r`(
%lH&8dG;nQe:j8\T)uU974n_JlB%e9>?<GEV'8+\V9FF!m?a\U(87<?;B2Y4_L`K'b\ud!aK69*+hesn+<t?IZU<?o@=lq5(o+jSA
%cbc-`!RAiG#84fN-U.uOAVBN1YurTVW*_63ZrTf?Y6*CiacBF_7`bXpK^RDG>E2U5D,tfYh`?@/,@e[7+_VFgrtXYLA.iNQ([>L!
%+YNejR>`,M1b"Q2HqAu:KbLGSlKfdqi$/rWLsUo2HmCY+^g?.MIm>IlMg_<o=N@iu*1&2GJ*H+9O-G2#22,$8+O%]UPAhs],]PmD
%@jfl],cD"b8T=nDVaMS$s&cN@iqP=NlD)S,@a7Er.\!!k]pQ@Oh3t:9i&.<M<NcG55Gfd/S5FM6b8*Z[4rQ$W:$X6+e1`-K5ON&L
%g1Ar9&Tn#T`@rTs6Mp*fVR&Na;h-.8Wp&a!Cuu&`6%U5P9#[N'8ODJ(X/)W4*Qclu">gRK1lu,)XdRJ/=c>`o`T"uSls&r49aP"H
%,[#cDOjTB49uS."9(3+B\k_f,(Q_l4?bTq3-sW%S&\!R2!lflqQbuVH/=8u6le'L^%T]/uM,`j3gQhWDk4.Ujq6.5s=Pb7XT#?YQ
%Hr^Qul#<=A9%dND6Fo]OllS\Q7FqLnB?HkSCa&S!88<7Dmg)B'P4c46/ip<N\KIDPR^9d.2(O:275<'\`/A:*0/pq]HmZ':+&"%!
%M3?d'LGHJhVmYEWIbUet8\&5W)g-E,`=PVL@+#1S@iVZaMd85DU.@nrn%P6MX(hKJ`q1iIhN`!ToTX7)J#.&*c'_?`[:&3qW,5&@
%EPhI+lk63oO!1IM-cP3_5lf$2-J2,`h5+)@4h.6N`"Z_iCO*Y[DJ6r@Cao[XoT,m!VLU1Q.e_hiNh%Y)H/aI!rAITC3=N?FY]Oc\
%ki5V5p3E"fNOS6gfi*FsO%!]Z@5]s$;m]u8<NLKM)'J+5paDpFAi5s\/dg<CAEm`?=<o&#Esi3r5Ec4o!\MDW=D/Vr?LI-A6F%J(
%#uK5NXdIp\ftL`C;lCT`'L5o>)m9@bSB!<DT;K43bM*'O3'&Lo307"n;$]'J(^TWA5-H[Yn_s>c6^J6dTq'Wu]iZfigWR4<Hn6f<
%0JM]'`TMA*4$W:W^-;OfJ8TM\XC:"PY`(\0EGH$D`YBPl:.?XRLbEITMqPqVQ#a7Jb:lJ7;M:8WY^s*;HuO:TRNtU$4.n0-nKl&H
%o`?Cn*6r^,e=GE79GnA%hY4pKR-bh.XB/1Z(0/p*_2W.T_RIAe'2J(!+s^mC'GLs5N.kDf?P_S0BTfIgCMr5?9t/?Q0\f8Gg/O'1
%W.>G4`(d=&@<lp(Y;[gbRW]+q#k_p6,YB[_da"kWdI!2T5pDO.C);Y03s[X"R+JHp.O8FP2?koA#Y#W<P5l$ic*$3lf+/`)46A10
%13i>&?6(eOH2Lebco6au]Qb^ll[SJhO>_(3^2)+&X?>m\cBFmS(\14iW:2sMci>X$QeeR;KPll4_;KuH/BR1E66d2c@*U)Jii*$-
%e;HI$<fuE.@p%L"Rh8la)NujBZ7OL7qUpg=aul5m%Lbe8L9>%t-Hi1kN:Ur0ZC8<GI#K[L,$L3=lC-NZ;L$s()@a+b@Al);;9^Lf
%k9%U-ja8jGmu%'LZ+hg_GK#SOIj5<62c/kjPt0;$WFZH^g^'bHTX^#ZfFuLf8=De"d=KZ799OpA`RI$(K2>]kb0\M#I^`@9.s=83
%8CeS5`NCNn]nZ.:Wj^o^^Y2ia@'UoF>_If_V4\k[e*KMGECba=.MP$!DaR'M?E]iV*B@Ohi`uWj\kKem3Y<3RXo;d2oCK-=hc9Qc
%C4B=PY?(&J>MZ?jRRe)X.+k(S4XK`Rhh\5k-*22uOonOf1+Bf215lo48g="0XBZ?GYNl'lg9V_J#/[>>G9lm:K''NH_[guJi?#B\
%X6Y_iT&A-]O+m=(^$b'8PJ;_CI2S@4Tm4<b1\0;mmT74o?<VFp23C*onHP)<^KZWAMb!>B+Hh1k3,\ggg<DPQ"T_2GWX,eCcZrc"
%nHN/t<>@rV&CH\7#h;V]AJ1)L2[SUA8;IsN10ataH!gMo<&PqWC$l,+$K@AIHR2s5h(m#mRLX5$-MS"oF=/&\_h;e6r3lVC.tNVc
%N;0(B8FlJQn3fc:\*/d"=A5Zb@,50=gXN?Z(<O-TQ_^G)O3DStF?YWYH\k=<\r/ebEhH['e;4U.3pE\f6j2TqM3,b4p[OEXd03?H
%A&WsU)n%_#h%I)*cYI'$51nUKQ!(:L$WPUP>kF?\F_e@pR#/$Z#euWUZqs5D%6KQsG-,FSr1>F5em"JtL2BY#DVZXZ'_8+o18mV8
%:D3/Ben5n/@GJI'NsSJbQl>aeG4;(>b4Te$8LjXB.WOE4=(aG4o&RkUR4r8o/dV"3W/N<&j/BCOO@8ce9&c,@qP="o^bi;Ya"GC8
%_b1UTXa_&O>$LN](m)Q2K9&`H&pMd%r.>a82+_bUP>>3%[9#:d&YIfhZXKS-]Z%T<UE3i8k("-O$2#qnSf7>68U%mgp5OZ,e[c+R
%h9aeR'haN"4nS5M5+"eg_?D?^!@ZO.Vi57#OK_;SNi&:8CLn=K?4.iK(tD2I'e^GFBd7J4(#>>7fXhmf:6t?=HeYrXS#NK&=DTFM
%Y%q>U9K<L"8)h#@OZa/;W,s):J`\6nO(DY+<9_KO-onoL]9R&<g-Xk?4(Z1<*tKF1?O,?b.n9+7jgp!ieF2#ZrR-hHYQ)^?lhFME
%_tWQnVN0aSF6%2;V#9hAPN]SnW^*9PYc@Lc[43YpCMJF+@Nb`,.$CWmF'*!W"CMQ_rW`YQZGTWh.b#p62fsIDFIl@0.HO&G-:LP5
%45LF0e@^?iU`Hjt;X6&@%4h+QH:5/);RIrS4E]@i+AG>")C)7AqfEnM)rZDW!A4/CdY0WYLfK-tf2t\Dm-81TIS`c&lY<Te"`*`:
%<me;mD=PmF\\J),EIXVV\aT.KWUFnH?#LV3<IGqr6oBHoP%EuXfZY=J><@saBU7#i$ibsIOSH#CXM4<S<SF(:O?NC,!K'ISiE_sS
%qJHd8P[r?QF5CF!p=KF_&d?G"$@j0kfER$s<L?S[2Qt)X]`\FRdJ`+r/$Pk4,QlQVeR0^m(9s(kX`AfkOY.StPhKsbe*W3s7YO$3
%\ZCT\H+6>*QN;Okc6$4Nr@N/ZYSF,>(\1S`+k0p)2;H%X3.4MBhdea<jek!e<3-Ra"muCArr/mDrfBQbPJHD*EkPSXbPT;875djh
%"P%[1]q-WHT:U[Oh/3ip)hc:M];jp95(.jS3V]2CD>^5^V"slm8RFB;oSis`b"KF(kPM:anKmP]2[PImjcJL]NT:clXm*BQHAg-`
%jFF8F-<\f%[!KIi\u:&uFOARI7=?f3&@d_NeLW$/3?#=$-ZYeEW!u'??70`ZNfBC3Ur7CVLJ7oAK)onT!/+Yt-Y]/58t=%l_X!Bg
%n:4o*_&"PtJi\94GG>F/?"')?*hn],mT$ijdeQ3J\h83Lp%iCJC2>PFq>'R3:CPPZGP0jchElV2c,Q=uX\'C<T![O7cYlqnir2&s
%Y/Yo]TmE5mZ1#:j-9J/i42')YC$\)bc@3J]A&sRuosigHF>XG]FMHbqG'aq4KDkQko$f%K.M=^p7E9Hd=bqqOirhj%a,>fTHmgnX
%=BG/@bYV?;%Eg6PiKNJ?@LjoDc9N$_G8'BOXRbNT\k)E"+i--F#8:efDUrg6Ms+nZ&*\PVj)2mSSf$e".kE&@CTo4e9\MkVd[A"_
%*',@Sq(-j!``u,;9sZ-XGCtRU&?%`F0c0Wu91Acha+Zq8A\9+/]1C4GEKT\@]A2cj`"SpEr#30J`R#OHU!Z1s$h2C*2?V2s%V&aU
%@Zd;3!t_`9]4BR<ViEU',Msc`q>qsFFOm1pB;fp0C?C81rd*_l'/SgQZ)=#U:AqbBVb,UTin8TeD&#VmD<\`,PC8?!_G7AD'jJCX
%>kND_C$?Q;e(%4YI@P1fH`"4:\%/&uqj2r8er]P>lLJ&3r;k\$rihD$Tg#=O?']D"BeL*m4mBT*j'rdM*LA8pI.Kcf+GLA!]s^P7
%7&$u7n>4iZ)cfjV&[<9CR[gQ6m".pE]%of^T<$jUUrk1XgZ*J#"^'MqStEV`r:]]5QO>I!gUFd8n&I(;M8/;6_]N3rZagH&psYF)
%'=G11J&Br5ekTm\a+Xi_g,&hiZ"#443kK7[-EaDCari;'ZIG3#Nl[BSd<OW6DPs?lKjUq>4"$Ouj-N@'W;pq%0-/bsl_>e1[55Fs
%#p^BVTP,J4H0qYKN:+'(K$BSHfVlk39W@+qAe=d4*O]`:2-6npOL!mc$[=[^LtYhr'N*eA=plMm/*%KA6;1n-o7\4!q<H:3[R\e5
%Cgt0G*e[oo!dt`jZidFQDl^2na,IC""=,;&,H,Teq[CYj(G'p?.?'p*B-B5!,/q$-B'?'QbdHO<X`"]s:),]+Lj!9&9O@0sHX_Em
%e1DMh1aHQ<"i#*6>4Xj-dsSQVY#^hL>\--iV[XF,A6Y[rZ!bRWLh*XX/O;BAMLku[4?DbO#//>qGJ-+HlKSQ)G93dO=;-h16!GO!
%BkVo$7*bUd._3r#)e')j<b>^mq+e!;'Kg6Fh%6KGqI61]5O-,]Vb:]98G-^R\`i)HY.M:79(X46L6LP<:)>8Lqr[C&*JogiZYU3S
%9ic`LJISAH@Tfu6Vr;i8BIPVeTL#PgK*_h6QiC7+6H7Jbjh;3belDcYeoju)7mNPMVOo\$+%piqQb?Km(i$<&Dm7j1*`bUX1e],l
%Y6<snenaRHC)K-?/K_];XI^$3QEafH\%[l)HI&:()0m-A6VRV3"HBWf`9B1u[e/aT`eDC4;'PPPN1ao6g^oGM$qJG_MK\5^.54c(
%KbT3V"Vh*3WuoRn/7CT'plr<Zfgg*IL'Y9kN`.d/7Gq<iGEN$=bAF[7B&6gJc=P^L.6ehMV1IF0W"9C4.-T<XIC#_Z=sc<=SuLCX
%=>ghI_HL/$qlb]rJaMB7M+c[uR@X,'6B^WV-N^N43>"l-(T!isAS2mB5?M@4@:cbN4>iSP&h)fh.VDO8;]YT)Osmc+DG)?uf!)i^
%EO[ie%oS^ie-q/G"'Z?1]PE.5)&k%JT-s?Wb`I>]_,iDJaQhj9])C2%T3;5%MMIMF96b5[^t60l.$tV4G3#]hVe!qtU/?EMF<+-W
%M^;SUC#/S1_%EVHBQB6X.HdM?geD*:3&-c?*[6&+FcqcIbCrrp(AW?i6Zi"VMfc_kEOX+6DF]'E`D/'$RNWn3(G)c:lUdOT!S^Gk
%h,6W-/3(Dm7>c4X.,o8'3Utp$7=V3edT"!^;9mc.F`karh(GGn@kU`0]7$m+!,b='h0f1mS1eLXQ)[u`nR^jH1bU.WoCf$dR*6r*
%e[ur$d5MMpfR5iopeHS44@U-$EZcr)<u43q4nJJeLZE3$D;k#.a1X*8\/jol$Ofu:KAg?8'Ht11;HD)1I='GLQF#f&&p(&#4!WTf
%DMOse.#%7*F-/,\Fg0BeKk:2Ha6^Op+h:cb>Bmg:ENdP&D?p&[I!o0f6h2C2N6+jJ'f:NTF"A:XY(lMQGtYh6R^_Zin%1;E`dG'6
%qdD.Pcq`#9Qfc0qW[oFH<n8Giq6e2a:MRAMhFKHAoBd*+7<,uamEBt/f7,=*.BAq@Y#&'%Xa0`I>?-:-X-,#4's_"bUB6ZiX#m:h
%!kW+crWiDF1.*ROAgfg`_.)3)hY!^d?2&"oPZ:ZQD;C0W9\*)bRYO,;I*^sC&[e"YaN9l&%-c=OW$MmeX8T7t<uFi"7Vl3G+A)+2
%Q\g_s4RM;XB@Ap$XYR(rk!R6)UK,1;`HthLcr:>6Q:[cBZW3&:V9N#:.d,f"jCN"DfI`5kQ-;KBR-U`>]3n*/%IWWu_3IMnrM@RE
%LS2J$L;1h[COO74K(B3;II\fSl)n$j^0!bupiS&AoWOf\?i/lICZ%kZe(WeA]XE:Q)UJ)a``!KZfNBSO\roC1Kj#Tm,2d5s?+jLB
%a$ZYV>_((g<u9:B?d<jW,\NZq&Lqj]]6i<@B^U2Kd'i/5"`aJ-NXJW-gUFd8lt9g.Dj>eZ?M:PBerc+!a:IO(Q-+DXrY$Rj5+uJ2
%FL7r(:Ehf''mJg*3cGMhHQ77AM"Y?Odu1ROr8-OQ"sA/>W(Z4-*&"cS4,n%5l?9+5R,Q4lAqH@uN6F,D9C"33'bVgMEe6YW."FAe
%1K56NU7sO)PPLCeCk"4h!ISf\@2+C,WlS-d_U!#(86Vo.=l0#o!+:M``d>._3]uH(d[MX1T=f)]rVW!%5C!N:CK[9&$]?<=l*"O9
%:B_qI;,NU2ZqVqKofu%h@a=kL?l?.pC"-lhfW8V!'l&E#g(k4%\n7dhKQ[ftS8jU[>^CJK(Q@K\4r[9)_[i;q+!?HYV1=9<V%[fM
%`D`p0/@NtQOQ.BI<<5/`&-q%i;n)]+?c+cph_DKHCCk3;18hRF=?t2ELe_`07'o^/s(rU%-:='Li[-g0-;]CMD#H\8Q_Ho+$n_qM
%4%3&4&TM^*]IEFXC1KD/Bq1^H&oW)fOlk%CUs*]ecH$ck6*LV'-2=2?]d-hVAV]`5+Tuoi']e&eUQ?'bZ8TrRlD&[$.!r.[VP[PN
%G/ncdah!nj(GrUKP6qU_EKjeNQGZcN/V6PMp='<H#*nG:1g,Y*hDBLrh%M*f.lX*1mn6^AlOOroddCT-i).1LO/Tfa9)K.QNiFVM
%Q;",(q@U@G@UfAm5BY`,%d"k:<"H2kR]V(m;OmY6V1+Tu8M]Xpl$P(WPiH),6o,F/Zrc7U5`5gsRG$C)_'@,)]%o4SJ^f_Jeu%cU
%k!"#"Rpg>n\.MfRmA#1K*c-qK@^IIpOY+IF:8H@`s+9N%;QBt,Mru.Ia?%cqJj]6aD<.k+]1`UtmmT7,Z*4r,"o;Po?WV!JqMmak
%?e'`CE>-BO_+5Fk`Mm"69e.6<RlKJ@dE^1GdhQLZQehmY8"ZQ>SMAi/Ub1hP/Em/J+-Bc5<EMdl,#<D6;%M6;LJkTL*4V=HA%8Dn
%RV(8^bjsChZ2Md_=3NZXP=`(pGC>_Gq.-DB<-Dm^n+R5<H[VaP>\O&63'e_b_:0pAoDmnWf!^@;;j*CWdCGQGN\CeS%q^`2rJ;?e
%Wn@>e%>[WL](tuRiph[J9k&-QR$jt1HTRLX?B[4R)Y`/qF]@(n\tpN:e1ek<3F!gP/MW&JE[@&nG]]C;o<r:Q3gCCWXU(8NjA\'?
%>N@!1eQFua!QdLf%0#'N9<8r%12@b<W(6L>dEk+YaPP_0U?QO`i8EIXr-Wi=<mNU^?ssL(8#,WX8T[lp("?]?YVk4+p_8b>Q>A'2
%5q]bX#@&8"7Wch%ZY((mU^nd].TaXt+QLHtU=o1k"Tr&^PlEUtB<J&]RSt>!AJaU1[#,L^fd4^/O.fJXVeYG?7(K^?7IrU?JKf9E
%Nn!D3ZGRh0m`E_GkWf[p@o@gW3fmf6IT\TO4p:sJ5lKIuC#t^)HLrXMI&S$3ODt.N-m#9$p=d1h8+3CGB/a"X:nC1GE_FZofq3Bu
%"@eVfERO,UCYJ$`Ogh;<%W(]W,m:-BDlQ'QX%oaW&J)R%Wg<RQ-#fj@A%G7mM=12#8-:mp!p"^1VBd^6Ik%LZ"gGYER$=PgXcik,
%\Qr-5XhgP)U$HW_j+ZbLq28dKbE2[$eIa6YQ$O);e2)0O##bC4$=X2)ZBI_@7\3=t4R)+_9[q=Sb*kYDhaX*GS<"XQgY"86[-#HW
%.u;jbrotoN+rTPN*uXuMal']MQkaI^-A=RYC+TS0b`qb^M1.3/_?#ILFt%/I+<Rp$)&^>jltNdN>$(C]fm91'@5GJ)1POF7kER7<
%@o5?DR,fK)eV0F^i.tF#J'?3?7WMT/pu:b6n-Wp`NQi;X"gH(6$/s+iOjCn5c#I+R-;5TR(JQ9!n$'ii8S2\S/<F!9QnX+je:h;)
%b?jGQoM#LEIj!1e[QnhaW)c8r<-="/8lkRFHJGOF&V53H!rtU?]3[-m$,U7<h/'amjKYpoJpE?D<FVeS)#!6NhEif"qrSc"Yu,G*
%Y#d?+O/72+6a?O:m<ds_>)[d/>dkAe?d$g%n'nNLrH+W4DDU^V9QIl"p4+*7q">=PcaK6Tb5N7*0eBh?Vn-'H79)0kXP)M/[&0sV
%J/pt@Je-&rqeWZ$[9RYaLlZ(M'J2AN-Dc9*C-$&kTp"u?P)?<9T"_:hi\#sPMRSPc"'PLoh^jR"XLpdLcC7BSVknGd5IE>>=4d*l
%/'$<nK6EC$SRUpk[LRl_$XO[UbTaB*.%.>o\>2c;RpGt`WX>n;b/q=<Q5u\NA$`uum.hg#8rLT\;DlM4kiX7LfM9kIG':9,Ne`(`
%W*D2o.pBuTGZcaW`>LcRU12"IiO<lo]uGr_PWXV"]I]@7_juD;`>;,WZ?piXk(RInfOg4efjN>G=`b`=WXt0Og$Aa^T8[9*NoFV+
%M+*?$'e:ei3J%AE+sGJ-JD/$5gYON&RB0!mdI=,m`[33ul*qK=G"JK!77-cd)-HToD,g[B_BL!ahb2JCdnpuXg9F.lDXU:ZWf4Xa
%lPVNg.b)\+RT>c1W12DTbNq8FGWKL,Ns']r/mKp8g"=N.,/I504d=pum/+9[R',+W=r\c)O+GA"i;u`&ORKqPTcKc-m)oHd404`c
%Sf3NO(0EskDQtjdN719pdf`&^l,(qgX#)0("[tf0c>l`4jm4?..]rriY-r5on;*W'8J:cMq5LDM;RL4gDoKoP#A^L@QZGcQ,"d2`
%Q$F2V*oUR=A_Mj!2Y;KH_)Zh!0AuMLKh>'6Y_lTL52Wqp"gYAmfTR>?m=XM$]mqs2.6QrpK7tjpn+t^R*UJc\NUhBNKf?='4,'bU
%%r*)lV)fnsWs15,"3NG(O%^g$GuP2g7A=nGC+UX8n--Tofuo!i$Qi&U^0"=][sgB^f4uR=[//=GKJE"cRcZfmVo@8p5DpWh(lA$j
%V7DDL+Xt,f]@FC",INE&'n*LI8H!]h24%d9+j!cg#R48=]:HQp^O"A0Ymp_%n6E\:1p=o?5pPR]L<KE.,Dfe-PFmKjZ:nDCrca$:
%_4Pug0]qQWZ@_!gB:a#DEpsk@4`C5-p:g2]fElbfM5CR5om:cWNT)fP>U/\Y>U7T;7+l]CN>SGZrf9QI^S<XoE-)Xfd1%\5ZB[SI
%?ABU\II?kt'fD*o"iOlZMRQVINW[7d:s(r2W,1Xr`8RFKqk<)SKRU\aRNF0rQQ8qlEqa\J9bUf.iObP.=7blqI]IaZ!PYW1T<.1A
%rp%`cqLDd8HCfGJUZZs7eq8Cd,2'>\:lgHHWAk[tZAL[fgd;5lb<RtXO?W%&Uj:'k<H0?k87D@K=ahlNkc4:7%I3XElY^P"6l8(*
%boBp?bsBqF[,Hg_ROE];W+?dAI[K`Y_QE()#`p[L>[>fko4VjC+sVLtMsm\F?.H]jHM\<MiFalqhGsLb<;!$RG/+/6mjAKGV791'
%>02Q"T2p)ePd1uk4TqrrYAos'DjK%NA$:4UjK6r#fW;GMj[dqoH5Eb2U97l`Vb!EYNf=r>=7tl"r0Sng#]QS]C[qPZP+&F`dGX:P
%RF>V*al']iG]l4I<pIgk=g!Ef:\cq3LU=+\`.%^(4ME?CG@gfWm-R<M!'\TAn?2,-TX+%8+H,G9\g[GaQ%MC+W32R<s&N;4*"?j\
%ZFD$T2]YUC1.`^:$Y0e!KCOWEn!A(OQq)l$;)G,cKTRie4$F"cD$[!%]KB*bQE9P6oV1WkYSpnQi`t$;A'7<G];gqKoNOlF\Y?j%
%D)IqjfL)t>rd'mf9MLIA9]3OKJ(O8[>(18_&Bf,Np9*LAYN=)Ig&HL'3r*r5CGMs<&RHsc\m>l1HZ7>g:)>>q2RAiPMkX)M.c[Eo
%3mHY!-l`a%*0k[gGFj?"b)i5\A^,)p:V5UWSG-T=ED4O\G[tAK/1*#fCpc;le2T/"ed5m[QsK)N"tnJRnh/TPVWUp^8,G;p:&Sl8
%--br&*7oHQ#[2e^aM/I(#'i1UX%@RI-Xj<\!D81s=/D:d7K6DfH1S$GGQXb9cGlb`-nU217@?23=cNuiTgCGoeQ#,^BXA+?`s.um
%#??Nl*Xp:o%BTs.W"5A;3-\NHHS%7H)kC"21qFRmO8N*uYdJ0@[H\8FdiEtV:mN)\Xs]),]8Dsq0ND6AfkdBrU6`I?#J9$ke<9qd
%6rr']a"Je/fV[HUNM*/+T^#=L+\n;g<r93kYu[ok/8!/*a+#'>'nqjclElnYH/ke?3p>s5^]1ch<\(n1T-\68UT:sAO&DS.4/Kr/
%ObmO"^5Bq/$_m^@;%L"`JpE8N2N9RZSl=lF!SuQ.P)%E,=u!H7CK75<jJ2B?(r-=/Pb-J3'7+FY2.Egm^I,=glQlm[M.`+?A]HLg
%29ro0@]mGt3mdI/?4gC#AoC8_lHcf1?;dk6@1lS(42=:D?AT&A;`6s9'L8mHAA;c``kf_:#$N@F%<XWheUTiTkqBG#r)u1PZD>nG
%41*orKg]hQdr+;W<D.>L-K^a+8(1G,WW=,nJkDld*>5,G(5sXYH6JQ,anoPePk&?V9ZIcZ[%phDEAX0m?"eA(/D9%K1R<GhY.hfq
%D>32@f^,kQlJ$sV#kl+%:k(949JpYYjV[j8>8_(9>,]-+L&j^.k]Dqhr1os+FOOm3@BsB0G#XY_c,4=e%r@^a#B;1gK=7V2r1[%Y
%.)'*sFEFZr>strsE%?iP"M`_Ocn)6XI&MbSlDWlf8Jb:Hm9"kEDZsmaj+kVkg9)nS`EKhtTiJ/?VPp8%^U=/QF2(M_l5%R=rV$5i
%gYVtq^A;2jCA5cQ8AM:Y?K@dZbul<tJ\Z_)(5Y9+7/G)h8B?0]LZ<ULbMUUJ=E[Y]m^WOPgV)Gf4".[!OK-s-m%CGfmo*F%%V3g&
%%g;"\i)O5O[hIRZ'4mM]-J)o_9,g"J4_qI>9RiJ)Agu\B%IY+*8\j6c'(FPU6FQcr.;p2M>)i3(@u!`n.h:?^4l"r]]Lj/7G?3ZC
%2M1L)-<,-+KSjR-;=?E+pFim%YBg+]W+C'-n6BaGCYle1/<Fr[UJ$tgmV56+h&B4sq-Am#O5Ts_+V42/X!*"l]qWj?r*+Y"XXRtQ
%e\2I<md2K=6Hk$YO8dl`>7_<.-,6IH0X_q)49^4PV=Va`J7LVHWfnNZM]KB92d:8\i+`=Cr@#8.b[2]Sro2><72-cGn@M-:?TaMH
%ofr74;08K,f-^KW;04pgnhSLg+!!dW[eh$6q7Sg;UhXs(khsPR34VCbiSr2Eja\$G2D6_UZu7,Q.D'93FD&:`_,7Z&BC<caUPofU
%VVP!D/GmR=KaID!n>c"dmBdS&=Pk/)G!EQfkJ?PL_.hbMFH"L:P\+#FWqYpY;cBd&Y.C?.QaFeN+^PHO6E4@>aJJ'JXd)\*>(g0\
%TPqK6_fn9D=4QoLL"GKCF74GS?-aVM?RmGH2bTH#`hn#EDDHXZQBnUF[4^9XKR";V'1T77lOp#Y6?m0+0B?uGMm$E7iJAD96A<rN
%Pt38*bKtrN=2?[ok(YGWrcYT8I`!Utj(d!r.&[BX,T"M0WktU",)=Qaf27hrD[1*8]j_$+_ND&goSVq<!f&RX/O-0m2)u.Z"61L7
%:_oN&L/]l2%J^UdIN-b=]FUb'[>,DgIb:LpEZFB`G#]<SdIXQHJ@sWBF?SNRpBT:n]>fum)fRpP#2fW'"[u]#%l]Pk?aI3//X>3N
%\mO)@@EUS;%f=crZQ3a7!#MH49*MCKDdJ^E[\QU*`4U?DX+B^3K8$3Q%;uhTSFF#hcn%a`[TpA"$4MPU],aR_kmOFrKU!*,N\6E!
%==a+mosXfcf1.^jKoIfCS0j&f6I,J;GoV>].IRYN3i^:n==8Ug$=8Qm\0,20NSG*"E,7`r?f.>P:#(oWJ\f0V=jAlaEOd!J`3bd>
%W`jN:;L+p\It3Xk7[t&`h&e;;45AS^mGiOWqXA,7^RbiLciE@rOa!0^_8W.0%O];](s#Z6K(_@LbokutYQm#,j4iF?$&``^*P<PP
%$2#3H,@e+E"UPj/Ifh]SphCmEg7hb"L#ki`$687H>pPXa/i)NDXEMK=f!WkC=5uc9b:noKh\j#H'!6"b:eo9^HF.L4Y&():Wmi;m
%I`#/!\k_4Gb,*Rm@+C?`Wj&P06p923k*=DX5^OdL4-$&4cmjbm$a:qpW=p900[ZXUr)lL/Gd1-$JWTfQ(r\-Lc)Zi`?ocj-Ae`")
%,k:2MnoKb!5kCR!n9ZCT=SrWCQr0rMdbAQ">[Cja,S&ipGBhbU_q,3]$tOi\n#rNe0`aA1/pGrGZm&IY[@a;B=j3BUg*pHLSjaJ1
%-#VRt8(*15d`uiTHH:Q[-cYbYlWGp;qHkWFn3_63cTUA[VglJ@g\mof0Pm$#"p<^MZR.Z3?BtcoTpdk&5HiY>Y9O&["6r?qn"?#)
%_?Rk`K>msO5+7t+i),cOUW>]A%/E:CZa6J7I..'6gYVr1D@alT7rXLEM&6!0Ua%fOe=LAAhj0ht*VA+d&$'IU,Ik,*BGJ`Om2i&Y
%P''a4=T'Dd4uWISMHjY2p95Eh7@@*2D+Q%;A#0;_c:`;i\WN+"\u6uD71=ngf%h.>E,tA*9)sft0L)ZX\i?i7KMCTk)YI22;ap-V
%o\7lp"o&2o>cVpbib+^<]"F_0dB3@HLlk`+47hG'2?OS%E[Fe>PR1Nq2U'aS7i1D<<X3B]qmYD@/sLR+d&%\c(20Asa&%a'5ir%+
%po2;H^p!+P?"h,*A-Q%gXMXu)[AFOp7#r6[K=`9X5Z1cnKkXel,9<6"Lhh9135POQ,U<,[PSTp1I7:24*Y+=1/;bU6%][MFYpcV.
%]6@]p7drOBLja+Kod\%$2ZV)/Vda@%&eKigoFa%Q?sS\>h9=P],f,kA$,uT%lNp@8\ho1[("I(K3aYd9#?:r]cJllJN(tT_MI'Y'
%MXmh76FJbR_k[W)CoK-B86V%J[phlp8E4;+&/AAlBpoiPSGV"QXj\m`\YB3k`VQZ/W*;)qJgc!&f8Ykdm/ZYgS]GN@?(;/=>P9c\
%+RJO@q_hniKPJV-!mE<eP^eKR_.'*oBY2]Vfkn^cH;<EfdFMq=kLA%cS&'(%9O:[lpUG5"F5N0[V.(nggs]u+Zd8lpr_T,ZWlO8:
%'s6BU#4'4n#T['e$8IJjG#[E.DpBj_5PT*[laN?R3[B9f;hJk\TV[A-q4`"]0Lkq3b`H/mbr2]4J=P6YliggATP8Fl8:>ZrWj'G;
%/KEG0b8mSG>8+Eqj7oa46\7Q`S^)Q8E$LXPdi#8DPf-B$$67qoY2LIQ%3+O?:9N2@E,-G@@Uk8^.-tZ/C"3NjC<p0hTD.U+foR[o
%gNmX.S0ARu$P$Ru&d[AP1W5Ggg/"TuRE6qJ(o)/lfW8s#PaS&$7+4Bur?e2sp5t<)D:"dbrG-;.`Y9FJ<]gf@Pt5Ya49=Djdl1i5
%CosGe2SEUE?!(Oo$3&]iLoV;&1H':HnjQcraZ-'sZhET5X1W3H#JbO5eKV<,)+Gs1:W;/W&CkeX+*?PA5['<o@:i_4LiP1mpL(A[
%Lu@.di8Ju0*f'!s%1a!f/A?lreVhqMdS+C\iM5`U)R3GEf/1Q-6r%,tJ.B\n^(-`%TnP6"g>4Jt/irkadR.UQ"(\MNlGW%158skN
%h9Y`'T&N4iPj,()_9+bfL^cs]CclDmW;ccQV+">E.Cs'C)0qhUbCoK?'g[tf4gR*qWNd5;iF:9%e`I7oN!E]8=V5T_Y0D?l8?kGg
%<Bg[TnT1./I-clV6naR`o%&jZ]Zsf]eBLeH>'sK=>b-%]2Z`0BUj^_H:':&'!k$Ka`p+p'-I_UmofT:K9c#IKmtOu)W/eUHQHJ!t
%CdsDXcGK!7eR<dQP>o#JX9p!kO*9.jlg)'&'F20d_n#++D%JN?'TuAkTs_LD[J%;%Gg2oYe-=HY^MbhuT]Y$ZRLD!D<]X9BAn`#6
%[4JEuh8;:BrMiQ>mt94cGSfD'L1Hk>ZfGDRftG/5f&eQ'KAH\0Y1_a(H#@Yqfp%8]Q6CRH])f&B-J7]b\fK7=nDH:Vh*=7un.r^U
%P5UFhmJ"qQ%<"i97J9gFl;HOH+5rDTMt+VT$7A!2W$;oe9e'VTDd$jZUhkUd[F.Vr+p?p].RNGB=!HoK08'WaXI,OJmW:B)Id5/?
%a)99pIq<uAo7]@8M2K!P%p,KACj!4Nn.MYd74d@m9Tg_^(d6Z"P#-):VZ<N]'$.q6E)C>p?@7lUDUNTJDc6U\JRWB=kij6THL>+G
%JH"/;28L5n@@nm+1k2o.Z"KtTeD\l]CtYnh/652D"J(]$RWHp]FnDb28"?'HW`ED]0=%KR5TA<RRAugpB;rZ+rKD1!r8N*')uiTF
%omcu8qg\XTJ%b`_GQ76[s-)2%s3'6uGP<cjmGDCJkIPp:_fbb9;2==!rmUJ=^'WA1771ma(Q1QlpFY),CZ^r[9B[Ses+[A34^sOn
%G1P)8_C!J6DPsm/g0'04OLd,Wr@a])h6?MHHX7e&@$pDTjsY*K/9QHX+^q&\9)ln&8Dma7JB+2jan]'UiI79V<l`D?%`oK-0J^3;
%3[#O!KW//RpE>HT<:rbM1_[(cG*/:bIM(R4XVJ22PW3HZ\Dm5*Cl.jG#0]%5@3;QjTZ<TuP03q\_Ymf]Xc@V?*T>$l-,^n/V&ACK
%d-&"VQ"""A5Kp2]NWfUZ\BWS#Tt[)q&bB/(D6>7[Gt:WQZ6#='-tgY964`#X!-91!a0!qm=<5e'HnJi:,2onV'#Fu6[#"IY/s>gb
%?A/;ea/tAg^E)?U$S#T*fn*DFa<tDJUVoB%_<3f]VjFs8L^:,8kI=;C]S?%;h@a$gb@%J#@?G!J:U`AVY1AdEpM1eY3o9dXJ7$!]
%^/6i.7,T%(mAugeN501uGPnbJ0X/T#8R4aIolWe9206=aTo1PL4mT2:@1^7'\m-Z?.88mIm1.OoF"bu%"cqE/[-Z%^:CHR^<[ZG*
%?JU"!PO]&gbN?-s3/OeMj!&WJF1L,#RSIdD;ILc8&eEXV_VCXen8c.)kk*YgoQ\44G*cXmNq[lMZL]b'ROgq=39Rui55b9,prO=X
%FqU@DpQ08-FLg5$Vp<2mkVJU'Wf3CiKc-oQEE8)IdFIkqV#(=VgKfPR45OTdgK&*kN[ek!6cp<^@\Q%ca@Z#;Z#-J@Us&-8]lee)
%Mgc=N)>/BT$Sre'3b+3)SODYo32FS&*k/`ij*&(B>\mKK3T$jr@,c'*C?j95PRo;P-H8@.^_]o[=)."3aVr'IhIicm#aLf?qoe@Z
%U8ti98C:1hATHRD#k7KO)f62%]tE9CiG!9.G.6N1p]:upC\D`NVl?Q61O;T)K#;]t-`jd8,c]4Mjf98AO_,:gKQMX9a=ON4G7e-6
%`YU't$ek*jm3'NPf?`7sc04\La+^G-mG$HWpE_WlNU%>V<n,X^ah7s/WMTqYJVP3<#pfMd_f"-?eb'PDSgP]D/@g>TXY,dCh/X)C
%JC9;;m9AiA!EnQ0ig*t\*A=jTV\/a,DTDOl9,&)1Br5!a)UF:0TuAm9^VO`&?)[SF.XkcY;-]&h2JjcA=(Cjenoms%1!384=0%PG
%\^_WFOhN^ep9E`e<^hV^>/VH"J2KJifKPHlUKSj97G"\j'8MLU*Q.j=q7&bg%H\+8%63C&Kbo%;?&u_]N3s'%gusX+V3EE^%Vieb
%^kM_QMj_7mitoe$<?BL;Xtt`1:U3Y7-+;q]&6k`HZ:%T(e';)_)+g?I9dA!R@D+b8n[[=(%71C[F\,<PM6'7Po]5DOr.t0-D`XLF
%%-s<V8fDe1:q\l,NJrrq'rYfA/hQM!Vl-0j>KOVSKQ7jurfk<5<n<H-'CJ>i45qcY[2#$fcqVuT\TLDmiK1+A$\@bN$o"/<WS:mZ
%msc/`[;7]tp*K3\W$&oXki2"uPY`V['%eMcQ^"L-re;er%lQX0ado3rRTbI`kQ<9gR/t%aFr!="o)Zp4c8E@2F6I:oS2Nuh,lM.(
%*>/,@TbWI8K,-pV[nt4eH&MOo[1GZ8+LPZjBetkp(HcPd&\VE*H]W-rPsjbhohE`lkB,0L;\DHP'<g&28T(+L+V6oFiO30h3Q(bC
%*?rI'6\:1po@fle2M3s63DJ"6"X,?B,46?/^12&,%bUn+#p*=YVkg*tl[)4AEK(2;BN&A?]Bb]>qagoA`QjD3T_o\&V+&pp]h($H
%KL'+;p2jZclA8(82&[JoQiQ%Fg9"Q*HO5TQq#-OHRI2!CR!-sp%eF^R`MCNTh=P;)=@_t=<`t3DFHajW4PEl;0aNr.Z4BDrLbXYb
%+XB/tG(OINeurelZ07]XQ<N$4guiXYQLa)jRerECem*YV(=7tY?!6b_Z0=be:Yi1\s8Dcbq5!&bk*2_qW4L0T\+sR,ZV>LD:uaHL
%KGAl+"*S+HpBgXfF;9mg0"\le2DWtIR2J'JEa6rPPI#`0H&h?\:Z(^AW=aP:]5m;r'Y:T%3WqNmden*!FD/Ndc%9XM#'mq:6;Tgt
%@K_S40B7;7e=$PF")6pI^Um/k33!KUYoSV?dTni.8_Dg=+4Xn$Ru(t%=Z`>AOsOB<::,5j_,d5)(1+=.Kd='3`FkVh*1khm!0q%m
%U>5*K@A@H!YY+c250gd_qF6`-_d66lc89D0WKbCI;8$25.+6\A+/=1\EMhsX\DC6FZl%Eln$:L/3&XF?>hQL1f4`b+oEb#K<FtLC
%?Uf=FP]QSpVh=Mib.a*%VH^H=1HTWun3$E42);E3<2sTJAY(%oH?VrD8Zk#9LM+%Na@sVWKl2j`-R%<)3B]I=:O\/Tf7$:hG^8,l
%:Jp2CEPM`BQpNP;^D<58P(uKLr3/TLZ0nC[XTAf3V!t?SoCo%9;7JgtW([<J;`M1!ED``tXW.U\ZkMJ7+Wb")>uhChPZd*r1mR;o
%P<u,*fp$3/I_m(ANZ)hImajL>@^B?>N=h`+.UBl@BL\Q.o_3?gI*fD#hN%I_5>`]*jmI;,5.nf]?4O*+a`CLr($BM>d)&\K_j9Wi
%,XoFr=A:b=6/,guk\'@JPA[!?4o.9"Dem5E6/@LsdHmNJDW^G3RW#p[LSr/]P%FO`]D@B5j>u3&#Z\2,pIQB)o:7jncdj#m+ZuW@
%*M#Vos#SE9gGpW)2,N\9;q&-HI89`);Ut<ZIFCsg-Je*Z@DSB'dtg.6F16D2ZeOX,'CjJlq*43sIWW`h]CbeV^,`Q=^;in?au;Cg
%)WsecYhT[%810eY2?If^?r_k0"%RUIEIMLtTDei":OC3hrl/n%=F/A0!*!!)gkK''Rc5\$@<6oD#.a5rYL*Fr;k4nsRHc)t_M\k<
%WTc^nZ,&NG?m)jtKc7cD!j4$O`R9Rd%IF4l8.Q7T0rVS9p\SdV#/%[U<+("k?iALUS&lgha^eGqPX."&<A0e4c>>YFa"E'XMalGp
%K2>26<)(5\,fhj@kAt<\-iZ#N@kVsL])_o1D"6dcm<Egs7]!^<G-enS;PaHG-eOt5SN!6B7O(US!d$aHY3t^/PI@tU;2=8G\ouUE
%24lr:RgAfI#75$HC"X&?*24<sn;fVgiIV%ADN6I.EmIq_X?X>U=qbCoI:>g?Io7@#h%*PV6Hq"JbdtRSMPJ5]o/%Zsdl&]!!Yg18
%hK!LE>F''*AToZP[[(M+%:J!3PQ?39Tpkb.+GZL^W6'pc-4kg_G>4!-SC#7fZ7"$h2YUb1;W<i2d:W!f1\L*;+Or<<'i\YLeMEl+
%\:86brQ$#L(%+6(ak]/Zi7'^[P`/8EQZ$XO6At"5Ep@Jl@_,Q'+)]WEG0:sV$sPGr:A8-?`RrTufrJ$IEhiGXC/9tL>$ck+ag\JN
%,NnacXccociKH]Y7u>1pR_e!'a*/T%8n@H*iZ3f">[Y0)M5h^"GpmnF4)cHVTCPiu0mI%=TN7nXbB@r+$a+/PP]eP16*b2b$]QKQ
%SJ]p\XeHC.Fs&95P[sn+gEVE`j(\d*[miOpdSGGT#\mriLaH.%(;clb6_BZPnMD&W;JdA.*OK6:?$0sjo/*N8.BDfEWdXD*IXSSQ
%c$d'hWi#i"3dgQOIFqSQ7:9AXc.7pF$2aZPU4oZ/SQL=dICPHK@!p"mLCd8.6S<;`77RDFVqIBmS$WLnQTI*m.'D1W"A&K7)1HgZ
%),cn_IF(,GrOA=Ma>?_bqSXr!`*.Qed=8KS5M;i=iXs:l]9kA%qIk;_CI`P^9\h1Pe59fYNflP12(WEB5doqSP?,)+&Wge2c.H['
%MdSc((d*hr(XusIV1$V7o!W9`/nmr\5Ih_?(tTb&#C32i!l-L%.h5b1#gYEAP$i>l<90Q%@)ihlFN(ir%0XlsXXmU&U7s.'"48Y=
%L1bY\nCnuGWKhl@\?^`6`$h1^#oa@"n[W@&!X)CT5V'QGp7!E;G1,d3/]l90Y4'XH6Z@)h!q\u-KNTUXSeHHYVP>Q/YZ$H+ZDq6t
%GDS`YirOTm%J@.7c8oiV^0ngQF]%(mBj$4cG3lYIc[E9&[#7]_=B=$;'+1'0\n%Nm+!AfHZmo:No76RF:">oM:l9g,VnmKbHI.Z2
%hkn\19[HU"c"a7N8BKZYW=.5`eR[bV0.\,oM@\Zh\R@).CJsq50eb.W4@O])=\WtD[Euaa![io\%r3u5);gMQ2W*`AW=@Y>=<55M
%b^OH_=.r`dQp;4\[,rjo;qO@W$u[&N%5Vid8\(CBb`5qopMaJj*nIa\BM>LJ7TeX]G(,YtdouG@O(HX;IV>k+fR1)-I?gXOVFb7%
%edV4SS(kQh5/o4P>ZZMd?+/%NH1uQ:^VNEC]!Q$A=u;uo<K`8>\g_It1<$O*@AtSr<D'i_:8L6SZO;VdFd&c-%"1?si-S)YOn?Jd
%76WeG"7:8XL/8pO(ojYoLnoo$RMWO)g;3A@%2P<944,T(PA(:C*"/b@1W<:0)7a?t)lTP3\C5P4U"q4V=nt]MK)Kjp8IZ>%L$\3V
%II;I^+tu&#,Q'u<FM;3@DZEk9i6HOu/,P3d`393_c[dU9FA_5i%'#M@7CY*R8pi4]hb+m-qU[Zb=T\+F=u/F7<4nJchZU:p#KIt`
%UD=0D=/3NeUlbKL6\)_?>9G\e2;igq9igEfW9bd"l*FS4q+`mr]%M+o'nNjsaC6XWL8Y]!<7_PX6jtTAK-nMNPl6D]\$>p_A/;fW
%ZH;L-Bq7LDkY3`e7UDEMlu!o3l6W&>lB`"SY^E8;@^LS7\/.UhXr%%qPp1$=kTE\^9j6bu(ZGhHH#"P0;.N7e+I'2^43c2>g3#pf
%BcLebkAJjbSd1ONe70.B"Ii"-4[=F4@lXYVq&.jlL5?d-[^oaq\H5X[.@Cnr2\+N:()qUiAl&er6M+0eNC"-9'>o7Q8c?]9S*92,
%omOHBPU05<L%'XVN^@hr#Ra*e_IQAP`rpg9>Y!N<&M9J@P7:N(e*"UM;K>Qs$TnE5;uFbG87)0Z1_$r48ER.(#0@NUAhIf(7#C9d
%*;7Dt^+;320NA1Wc,5#=G(hM-UA6pI.j?!N&31GOm\A0YLY\0t00AjTOUkr=M*aY$_k\%?TsC2I_k@;/:@1*@[t73f6MRo*,t+RV
%0ld>>KJ0+f)SC*>FYG]u.bU2COuPq]SMec&lQ_QuR//+DDY]R>aCM23YF"N#ggqqB+aq<[U;@THT$:TV'BsgPSA3l<HAa["'i@A+
%OG0'`Ir6F19+sbRc30NhYR?4@YH$$&5=ecQJ+h`1a0$E(dXHfJ*ILs[+9K2_HIbne$Ll&"W^c/"#F`5YQ0<Pkk-rREcTZf<9.n>_
%:dfW($6bi2i?l*,UX:]0JV1o5$h5Z8Qf;K5>B8t*CUn&@jCjI,HUr&ORqKR$jXJ\4('i_X-X/bT,Ud4B/#"4b1m2)>2rn.-g.6S=
%ckJ:6\^bSI\/jtkIe:tD1s6e8ju\eIZQ*NfUj(#?8=Vk+;t/&kT!T&[$g_(4^s+a0FlS>pH+>/J6E1<ZL'gS@^6^$;^-)jA'L_HN
%fKgd,JEE#Z_!74U`c:T\;PdON)4:%FLk;TE?(QZ%V(Y=smAl1#1Dar*:So)B8rj^:leRdt10oFJ[j6g!8:XP?_t>kDZ07Pi!-laY
%&+Kg;b_(j*QA)Wh2*$?nL-,#"X'\)T<UTfSY+K&UR^YQ*7P"J2lfV?.,_#\frg<"!WBC!Q%_`BU2Us;;(BeklWJ%a3b9j;Gl;529
%&8RrPAF<2pQ#Z#\%R@YgZ`:cj]qdX>r@7]@CE7q[[K.gC9Q'>f18Q'eWb`<QD;dm4Zj'.NUYo@N;]kHdHUL!"iG.Wt]iYPQofLp#
%%NM?K*6ND/U,lZ9jV1)P1H\e9%kXRgrF?G`iit01q:F0Kn"e-6V5,']iCb5qT8gG\/!DS5;9-G/b2=4AQROhBOoP7gA6jXg6_%,:
%Ah#c`6e<C.PH#-6f<uuCYglWk'KF:8`8*nmN4>;jD7'172^Ut&1dD'g]5)LTF7hh8b'&EXnc\k`U+&O0_@2Lr"5]q`N^.US>WeEr
%W[8K8ccPPXhqo!.-.nk`e)TNkkt(R0b/HBpon_,O.9jEAF3Fu\8`rp'<]HfgVZi?X+t$Q\G2-ZV6pV)'+Gr[I9\l+pqaZKK;SV<Y
%\a?^CHT0t0fn%X8i(t[N^qKjt3KtKe,&.GTT9<?S)pk%i)Ec"dcpeWM5t"EnPQuuRk1'oRi9D6*)8[nu&bhX'OZo1+[OO./;F7Qa
%R$Pi_ihJgsc!<Z13P<B&5";KPRe;DOkU.=@Gr,7!CVoUIii:G3aB6N%_!g"lW0[d7m>l^r(,Df[gL)nM.EN4Ud^7R:U*2uThAdY&
%P"=30-44C,c.iT<]g6P3``E8/9/=/DbsJ7!T%+"HF5*GR/q[BmP:a#cVFsGQQ,nIJN^b1D,Tr=e%V)_RM`WH_aed=Mp72Y3Zg'a2
%>M&:jq0$%AqX79Xl0P%1/Zqn.>rK$+$6kfE0H'K2]GQX.OFM<$`V8,AHSfloD(opQP=-&BPIOM[q\=1\`"s^IP;Hn"JhKpYHFX'@
%cbX(P:K$!NJYZMXS:2Eh)3p0aA`a^0;na7Ij!('j^,OpU1A6S%8=X>(YR=:b^Jb=3>ShRRJ.<':B4g"(Z_4R'js#D.l.CE#qP(AC
%*cef15rJ&dD7&o*JUFs`&@5V[V,&EI6b9+t?;:I<=ddA'V[uJ@1XgquVH?:Ba1EA,4#Pp13:k/0.YV>;\)iJ0BTFCGi_.]S"W&Xs
%L;FAb?MRX;B?.R6Uol+4"NVJ2BL*#iP2(RE3?Pr1VRJ@[^8R$cRP#l$NedNt=1Y+KLiW1][%tZg79OTm[dT-e^YP]B/C\eLs'G(@
%blCnMSKUkYi3GJ4d`.G"'+ns(IVoM9P\f+`jrFp$P1nDp+Uq"q^6upORcHQ]YpM/MQRNI;)qS7r`PtqGZg"e%+nJ2(l?<"fgmu/L
%S%^%&I%.imoJ6Cm2H!j)g&k'6+tT.P6;%X!mGDPXlaOI0).r0JhSueE]KT"Ag:8M4%>0rJ)>qAo%6-^l;+nd.4k\nPkKaq0E-pbK
%qIELcW\Nj6D#uA^9s;WRZR.82NNJSH=X$TB?)u_SL?5_oTpI42C>RmS`Re#6qGt<aWVJt<7Ij!AB='4u4&TuNON24-ESsc&DbfHN
%-X@G)h:jCVoj+<_5lYD#U9>W_)n8:G$*UpWJ"'+'eK]oXs-#Ys,H&Nt.2Um[,tcI,Iq]8h5`[<D-%:?8jV:bC[ojt][)+YpOLc;_
%MZHHoDr[4ZGW?1VEj/*;K=_`%$C[ka2_PrH3JZl;+K8Jf(-9*4$A#!MB>R@!A57a.KkA;uBqf2VG2a7`Wr0]+-oD_j:$.NGptd:]
%Xa$Kp)C^[T.18mKfehOOnI-P*l1n1_FbcZpYfF&!RRt;[FT&g5=db'++jkGcMd'A_>R&jW'`5DI%<K2uZ:_E/eL;M<Gcm0=/CC\(
%*/H#Fm^J6l3A8T\\"6@t=!i],(CEQro?tU0OmKQ=L('CQP.`1,m`o-OX%UBZ@D#k@ph:*3TSiOAa%*.)_nXaeEMH'VZSIs\UH1lU
%lrDkc#N-ZsVBkR5GY:ra7j-F7DWrpOo'u9eG@g7kZljI-8Tm0q#(f7/g<c)1;>5"(5gkXCAL&4gjTpu_0mrhq?hq5ZKO^,m$[CK&
%`S"]n@a/jNd@)H_9JS_eVd=h_DK0u]EDQIC$h>*qLs*.K.RU'WhA(8FpA,[_P/Jqi+'<mR2c8,p),usQm@e(_=SaJ:)mV]d$h(ni
%7(7OD(q#4MK3SRjiGXh?#TL[2>+4#\<OB^=;V'iX!Lh(eU1@,<OjP,u#1AmGSj=EkmM8[(Xbg2LA/J7ZXdd->m9^Xsh0Q0/!K%q6
%[SU']1@hrP.D!e0)09WkGtr3DeYjcq0iWKU>)gt/U/e-jbhsu#9,+?B'fMK!8p&"kVJfKX7r*Qj,1Tni%?kqf[^ofl-+NI&\tL?X
%1!F=Ue`!JsbbPNip"j;63(UBc:6AS#.ACQ-P'L8D\3uV`_Ec2knXFI\8cd;+=+c<,hih!t9gMb&cXIiBm,'FB[[OS]7RK#4G%q&X
%(G?!Y`q5AK$uL"B.#E!7XFV-5$ActUqBAPNIQDo%j&Ilb,a,g7MC5]Sce56s#nb^RF!ai%PNJpJq(tUp^E(_q*u-?_1W^'2*/@D2
%A1&nBC(12a'TAXnBt!>-'bH*GVNmkP"0CB_$"lT7Z#.6>@,=-8W`2AN"ATUu@heYNXp^H$2Ht/+hOJqiaNiC(BN-anY,FEt`DtI,
%n5n:H16GsobPnX/e"ut3[@b#[=;l3n(ZB@nVPsdL954F5U<fZm>IRKre\O[c#Be:0da+DVK2[s[:F%.7Fc(Z^*S\3F<jY060X^70
%]HhN`Op-ci8ad\rk1%c@EU(e4UN5iqW2Y+6MKf1['"^2'klc?ks0dUAY-?"B1^h`>K)@&U$)pQ@WX?b5G;T&+FHHGZr!5bAn9F%E
%[HLOVJOetZ5f'Eb3he'D'&6l;d^g7<(,:K=W-h0X7=J(3TogrR-\1_T!3m/pX5,5&`LQ(!3>A<X3m\,WCmIfG;P6oTB/eDfI]1fN
%[^p6'q`@shLUt[>D(/;R/lhSI$/:cJ)fscNi!4K.%;`e;l:AD5@e.67G6qa,\U=Uu88WF;Iq^:12:s&obtngX6"Gk=:,)GQ4I=;2
%kk)i'$%OdulJks-VaQZ-AtO5AUdXP`pU?Q!`rc;HnSjLr\.hP3_W/"LmtX!%m-C])^Y,B;\k$jP;7X;ESq'7P$R/!>l'@);.#@0>
%84)d,Kb_h/VJ'('bUB`(3YSl-X7fEqf?d[BaT-41B6kFX*87t_WSELDWi"?oMmeD\."5i*QJ"doH141I;LW9gJl>[^4\ukqn[4_n
%O\h@sNkh=6$`96e?#G<k-7kk&`AD_UEtSdK:_T/!X)@+iXW;_nf/,*:4r(o+m`t(W2pZ3okK3Ce]"<8XQ\e.i=\_<Gj%,_hfUS7<
%;)Q3h_:@jG^L,&4q/.)r/QiemgOMoN$b>Zr0``osG^"9pI`LaQnC]I'2\EcWDEGL!P_o5L"D7+Er52<(5(+0rQc<Yf)5DtCdHB-=
%2i_'1O&K[3VGd.=qX*$%lS&7o*%TE^=`B/FTir`Pi(S<dJ4UYI(:k8La>qI^8R1j.n$_^tku9/2Lcb&_i?%RH(#.[ma@=&WN'L(j
%SHT)WOH23d=UUipS9jK)2qRPRkks!h@g_:-=Un;l2&Y-+@),L1"'>_Q&F4LU4p,38BNNX^@4:/Vq1Q&MHkUpbZjl(K9>eL_3==:]
%H7Fbt]\Din-Gbg/=l')hnNX7/#]P-5(FebV"Fir<jO.KY&ae;G5^JpQh&"$se4.+"AG'-).[$fMZG`W;Z)BdKm*^gn8Iqq`!Z(%:
%V>n!Q+7B^$mPOI(O\s:41KrR$2GR5j05'&b^)$QqQSmLp8cX0n#+Rf)g];5!aAon/g6EA#plIl/eYKU"l?e2E@/:A9Gg"T,Wt\tE
%KjjTBXP4ic%d)k=#@5g0c6!mV53Qh7n:!Y\]-H.L%SC=5_Mc82L0]^+G@<8b@LjuZ+LNKcA9C*%S?e8#0:eDOU2aBm:fln*Zp?$U
%(1=Wdn%.o^a1LAW@8D8@g#K:obY^NN^=#3<<>ZhKT!-Kt?WI$lF3dnrh7Z)i<F1m<F)9Ud_9i7-hqUtuSr>6'SInl9KQP[(7)RAo
%mn^k`?jtfPQ4[.i;8(dh9uVFBVBb?_%-K"<<bAch`J+L>@6B5K1fA63G7N)5W&U4Q.S0Xls5_UEFY^O&A=5KT28:(hk*UISSR)@Q
%MeA'3FOJBU9W=bD.7f';#q1&)i$'\Dlsa&iH4;)FAd`]ChLZ*?^agoFBG/"$:=!&aad6T[%R=Su;tj`T1A+?A"G'#?c=h]:C!Z+Z
%Lf1Z4Z%_JL*51uGpi=gF+CZ_!9C6mi`%t[t<GpD:E[)dn?>`@jgsi2d3gF@_Nfpqh5gukgEq_LFCsOm>F@uuBU'3Gm<:uqJ8)6tG
%f8AD=7",*D=N-n(8`pYGFKh"KCA8oqLAPV`[aN1IZ,B'YR>-LP\A[CpCrKYDmh[Prc(qjm@ctTR2ZulH9eR^<g>c`1e_-R4V,&_g
%DBEB>54FTdjFb9q-d7WH(Nd5iOjE,*<R^>C5,YT5K`M/!ae@$F5)2=bQIgR\D#a0ro\YD3n`l6a@lF9]%I;44G\K-UO\DAQ0"mLO
%s!LU>IjNO_pc>41(Vr#\&S(=Tle4E'f!k)H7@-TMTVTHVV-M`FRc>r1^?gf_94u?Rhe^/TH9rh`Z>Z7CBY4Yi[b;`&(*")UkGRNs
%FX-9I_f`DJc0&2KN[Uh]PZAN1*B07P::ih]N31cWJU.j<Pt$Ac<6\<)Rrl5s%#AkbBO+=Cnh:0l&DWTQ"]I484-.*G_d;duqreQ7
%7f1/g2s-OC(+MQlmcnmKYUao5/\AlrniA14QA*nEUI%*hZ=.^DdpmLSeZ3.6U%o/A7(dH,)8O)(79=&AR4]AnZeRP^]3te31>'Z.
%DX6LC@Q8t"_@XL#5C?@-g0(g/8jr,T.8'2k,bub+77jM0^DZIo:?iW,"2:e;<s!<UC`;AT?0:(0$a%\sidoYpI6B\Jb#?,Fc6),5
%4n_l0=Eqebg:h*NS6XcZg<1qs%:tRU/<S2T2HD]f2uLkJ!)rs+"I^BrY\&p8J5_beFZ,O3U-M4iHq+H<U.]Rd4uaC06Hhbt_6Zd:
%YSbD&\<t`((<eamDccF1c3Ju90,nF5!eWSPrD=N7aM5'g6,bS>\0gI%Q6F$Q@`>d\\EtUN$TBHm9EabRhH8Sl&^G;X7iZA*\7H8O
%+WK_Ye^h_DLgrCXT5&2$Jj9=\+PM(WJ$XT7"lJsiC>KrtWXp2+@iRjLFml?rZ2X!3eQX"oW>R0D0&1&r[?9tjI+B5F0a;bFf[qVS
%FSi59"Q*2m#T:ZikXm1RH"4_;+<ZuI*=8Bo2CUSo.,p#]$lQgl%sNk%$Eu&<Z%h?3UWP?SW,/W[LoX9d!,$6C%RqosN)Ur\:Lkj=
%jN`#M>\i7^?[rQ3PLU5d"uKLN%eDBK>sp'f]Pc.gXVWq7fh1.H[7-7@VCR9'hW.2AXkMlWfe/\k\:DQ,l&n.&<u>12Eed3X>TXF3
%b+guL2upYo%q`WD+r_?T9B_[Pk6*F*`rRrs#7'?DR2[khH_W?J$GGNoE+cOB5f</Yec)eZ4Q_$9@RBN9%H*ZgX,kAe(uZt[&JFCD
%dOJ5"%YcFsXDYW!$@!@@.8HUo?]ATH60Z2;U>[DJA9&NJ$oSTa'kFaZU1<?rAV1%.<=K^.>BRSj'q_!Np;$3#!=^93V76O1ERUK;
%rjar>O"akHdL:M*'lh>,>[]RGpHVVqhFRTYeTjqYh1KCjm+]Yh9b<3J2tQ9)Au)D>'cq/T$`9K`OHbV;89f3g3?hXmEs_RO22hl$
%R`.YXKsW1-UiBbGVkP=U,E9^c1DK(fJrFJ7#XXgkq6P97qLeK@[PTFhi.He`Ks!"/m?5IoXR9(K>=keR;!BQ'1r^[cFP(F1BaW=k
%Q<&`#7Z5Y/EW%?_/WT\kC8F?HVO_;)9d1V9k(,ZYr7m]LZ^9(hp5UVGhB?`.>[trI4h'8tLRK(J]?TQGZ2WuHe6AGA2/Tkl4Q?HY
%3E0iF.7ec)1HLH(,E`"bW#L0>'W$Ke=bO"s2?aB/fq9pdh'9uN_n=C+aOBP#?8`?>0T"$rlllkR<iJ,`^fTS(JB1D6JWol?6eHu(
%M\Io_UWhHQUF95'GD?"X=p"G^.c0f<Lsr-`>_Ale)'TJ&2hEmQQ9JG2U']QGO=Ks#P>bl3\ikt7E<1K0nC27<e$Tnb2_C<T,ns=?
%!-RSO(:gPFB.G>Y+ilpO=[)jJ7?O[qdn@u\9-<UnT<>"S`&j1Vhd>:tfDj]`Y3*>l<N*BlatFb2mag[*e:SaGfsR'g3\6O;4Ol`q
%mEfQ?-tM5Z;]g)8>;-b2VF@4%p<AR$;]\(71l@]:b"kN*n15^(8OO)2!!G?$n4MsTE^Uf8pa!4:e-4H2o+lrk3`Y>$5:nrT-VC2m
%ZjA$<FF+[FNh9^3b<)GG6/[O,kg"SSl33TOA%bhdpSY(4I/RHe4(KRZZ^4;a^,olsqLQSgrl#rm[?2-t<=h^YN)(hhak+LKIUY1s
%DkO`o)sI/"l;$U)JJ9J7F=AL^hp.h*dW%X1_e=JHUkg,jBr=B,(VX%k**aG'?Q+Zp;8FX6Q`)HJC9p<_m1LI\)NL5U6a3Es4pj<7
%30Q<0KN=a^;>Y2cUC68T<$=JdgN=(8?/7>I)d=eZ@Ks&*8JV(KC+^\Jk4n?+2bAm(i'?*t5A=b\f<i'gFbrq]75F(NIosH-c!;.*
%gb/l?%YtlN%[Hc*T?ZcqIGTd=+@qc`jtCc11Se0C4%#0<U?0a[m[Fi`0*smhLb,Dt]==h28iWn]RkJpN!ip4AC(g#7Z]Z,%Q2G6Z
%A]*fTRWEt@HJuY-<P50]Uq3o`a=q_(X#P<&pVU_f:951Rm2eNtD0o>VpB4i"O+V^ZW9GR,#9[!iS&DgIMb'u=5O>@E1$D,sRdTks
%(`S,jaN-)b8M1]7g7!7EJY+Lug%uP<&O$kr5e<GEOia"9'kqPlk[F@QeG?[+)ZO7adQ:1Zi+b//BZLaFPq$XNB@RWRl,F6g6b)du
%d*dg!omua"X?^Id49'&L3\ls`An-E9S($Da!hg/e4a9[\/=p*])hSI+3Wnl-NGfVj)o-]a8@5o?*KW\$!7Q1GS)\mPRlHjZQpbF,
%Ulqum;MDbeYVG9@,/'@*"rrWhI%M";c4Jo'bhHf8p\l@6EHf:*9&8l"7FKE!fl,KRn-moDR:/!fU`.=N;73JP9a8>?/s>Y8O,6-_
%&p:$4)t.?[`%7U(keUp`&HHc-G<g=EW9(",O];FKh/*cZS)BV(1.=@n)"ZA#W,Zp&lV3H6XT4N`#+&n+:7t;n1A,Fokat;'4@V=^
%nX-d>bEkh!lR#XJgk\?aO]Pf<c,&[aNlC6;5Y.Ff"9qm1AJMl3*Yb]GaNA^@.Rn@_'[7Jp=pYo/;eK7oo(Li"S?mK<Dqc'`JpLbP
%2GCA`Se((bj@'N8BW:hGKeJBCef4plW=WM^Rb1*jHQ";61k*oM!2kVXDYN&Cq@103355:*(T*C6BFQFRO8@c%lc7?=lh("$^$F51
%`b(5uk]'ZR2[`(]mjqZSZtJb;d*.7TIHpZNcR8;q42?bu7ZrrA<'J9QD[5n.=(pK6P)2FW#)1Ku5g2T#HQcp_lSq'W$6TFmO9EfM
%jR<&+$Kf[So]>qta'7o#3sgHeHnZmL1+f(k[._VGJRgMP2!#'mlVBno1r%)oW(uG@9\X7P[e.tCXVdr`>]Z8$TG*)]i6:VJjAi,0
%G;$g;4o=JZorOQ&>H,?0B1''gqF,^#Ac;@q=(P7r0$$O[A:P_dJEk;!j8GNHQTMPP`QGSI<*A,IPChP^D`77I<..\tOq^6@L7b)u
%qf1<2pY_`+Wi$Dbs5J[%^7fJK?1RQ'M@jB*:d[Ji"L2*g2fetr0_^E/:FEI%PH-2TGGCoq-j\-aX>,r2d,Nc&cC?lh,ldN)J=n0?
%V:9CJ&TK-."f%U[?sGpbmUoEU)U??mG$7WG']F5@?F-EAs!$u\NP2Qi++6NNA+pbS)VEDHk7U3]bn5pHIC$kZ%]Ic_6"h+-<+IXA
%dq55^cfDm<3BN:Hg,F\`b4>iuImp7a#;12)RJr&m1;cd[V7>8@@3_etAW!!tP%3P&9*pl_SMl1p@&@_:dRb5tUfI;Q9!%&"!?CUr
%FPX8e^Kd#o.rA4nJ[hq5Zh,lPJ/DGPIUi\UoDgRqoH9JTZ3AUi`eW9hN@MqX(@89'p;HdP^p2"1Jp"9b;@$ZtV%I/)ZAa&eI+o)9
%01<&rs*6MM?j.F"fsI,m:9KU6aqi$@8_%4:X">%X054Cu_/KTP,pt4&%>b`_RC!gb]o&Gf733keYsMB+O(*PMU=Oef8Q=)<\*khK
%*^m>YpSgj7^OQs+YQmqil;q#^_sA]]PF=f*Xpkre\dALnHN'I!X!!u9(aKYWM(Z6:l?2Vc\(XiYgUOcaLNP#Eb03RTYVid0.@$A,
%]7!3GAC?dOSX'3-$mDPff;^r.i;O)V69M3hRGCHJ^j@Kd82.esJCA<Q<78XS7d*!e5aH(/2e%K5JnVa(\In[Lf6Opg*>*O0!_P@R
%Vh6*g^gZSqe]X\0<\2Pmk]^,DB0KJ-;cQ-kIPaCWLo0:j!MGUf@4XR2Y$X>f&;c5A<C.%r+3YZH4:\M45HG4Q[0)7mrJNn=&-T6/
%*uRoU0d+.$L-H7+O_+)aY2jNLlY+/[oNmNeo2bXn'kpAhN5`I7<q(qt>_ZYIKUXkn'U+l*(S&La8`3YTdKYCH9#X\KG7_uf\Plde
%$^f,aLrBH62>OBD<r-@TZ@>"VKs^ma-f_>L@_q#bVkX>=R\&c^Rq4(;,8+%rmDK\lJO0tmR.nO[D7D0sID28UGI@FQf&,$S]3>6P
%e@P.sGA&6ipCQ4S?"qSn1"O"=o]\D\"><-1?p%&hAh,hAdA)Y[c!TUPA_<nJSh+TS4+'u4[!3tCgi$!.9p/(F+!0j@"?4iiNDqJr
%hOlCGH@%Q2=L5@D$OA0l5(bSPgj<"p6RLl&>T=Z)CuaFa=AtS\=uh<S@S5H4IY=>4B?&e.qn$Tm=7-%IW]bi5Y31jhiW0cD?Q+KU
%D:1Y4\Xt2P'`_kh1CTjS3#HF])up1m*%b]n@(mKBn:?t\-YDDO)5*!nTF>-^dR>m_jm;dPLQt5<1Q:N.'ka)O&O,(9o&i-7^OkVH
%b>:q\/&;-UC:Ck"4RiVT(p>"&T)pY*F2N82\.%`4qWi,sC6=Grh_OTi%Fcp_[5)Id7:uj_"Tu4`M/c1JBiguUHmi,#$_X$kRqBbZ
%EGS[-V.$4kl9WuHBpB=U":.<)7[+ThK2'L=G(IUkF\+>fQl@7pjm:EW;KZj^)86uGbMp/GK#gF2o'T4mY'OOn.fJmb&khO5>:I29
%h%DnMs*Y._6cf,8.jU!3gh"D!5\>kK3=VbU(m^;Q<1Z#Xq)[e;=sCh:+)FiM0V(33>2Q<!_^iNaC&iuR>^[m7m73sK?AAG&N6QZ\
%q5qk5FnC-nmk`H4@eoNH<T`QO9>kUEficI"f`W'(B2LR$M[k#;/>gJsNp\=:QAJVIU"es@$ot%-S_:WK#f1fZ4BlD^3'4CFA<k7@
%s$-2Zh,j@ZOq,a)T\=7^Y6@lF^"nk#+K(m8jJ-9GUu$LkNS-&s"APaQ[Rd!"-<1[1;&T]$QS*<n-1Q-fA+p=2e3V5HaQ>Bs71M;i
%F/>[L<NLX-HZ+Q=5[6)H\l?VfQ:q9j6rP^of!0^?eb.oC;$`(p@BENsEH\o!61\lS&_I&-GQ+2J&-F9(0XpN#DXhSO)_QYW)@?W@
%Be[Kp?3l0b/1&]k5$8I5kD,m%kTD.L<[eO_]p`fC.`)\Mj4j$K,CM=]Z#DdOW&3+OdD)oI2csOdA[EV/_8oEWQ0f^keSk?QJ>PIb
%#?Xd@;Q42?#4ip9Z(f>+`I`5n`&$YA8R!fmO'.M)@>R1:Z:LDDSQYm@r<FT_N7XIkIf]kl=,c8N9\BChit!qW?TjSIofr8)$Afn.
%M(`$3Da`oW8>Z1E]Eg'RPhuiD[*>+mA[kccC3@V06Psnf464kEMP:tR]1'jT#oB5:V*J%5.Kn#,R>(jfPQKOZ\a8E'qWQV9io2p\
%Qm(^a=3Y#=ra%87g!WW5<dQebf*ksFr*C1fZp*pg*Y2S3EAVkqhN'lGV=%*-O\0UJl&)B2Bpat5;GU8AFB8'H8P?:e[D"GlT!eIj
%icndd'0*`:-h)'#03$m#Fk5<Qk``gEbF3(?A2bfjnHm8b<n;F7!j7PHJU"t8EV3/e70Y$QW;pgiNtU%79U;P_OsD;*OJm>l,*q2B
%P"[WjFW9YbnWB=q8ne48q]qk<(rC;?\X6-F=\b.Q4!j`GQ]Z(m8tPQ[&@gZL!7@@Sd80nC0C*h^XqnJDOO]L8H8:R>8Hq//!`:K!
%,n5snQ&S*_`;G]=\mW.g/^TfKZ2R.GP6%>l9\?G:9Ah8>W2#J?!M?*R86-5_ZA\os.uLN5i6+`7?X.K3A3d%o2_*T-2QOePnR-8n
%^:sP+DEjTG=9Nc_5Pd3V6Sn.l9JX5kZ\@^gBr-.bQWeb>c%jl]?Z1]s]\+\uEmMQpK'6NGgPO5*C*U\M[rgM+%kC%@fpC5)qND3,
%r7^1rOBb9Po#^s)R])U,Ps:sknF$NYH$:1$e\B+*%5DZ39'E853&`l\ZBLIuPP8lM84Fjb%.h67U-lhR*c[,DOe@WC!4",\B>L1.
%RmB6U[,p*teg?*]egi/N0?/bN_U>Z2)PRmKa@Tb]g4,I@^$HmmaYNZ.JsZ?-6eYTG1ugB:-a#&8'uN4Tm4aPWW%#(3=i>(EBc$$&
%=5oL*D&t)s3Jkb[qGIqp02dld8Tha(=+k`&-J%_D6c<oR6SO.j#It:;dn[NcMs1)qMtH5kdG/:M\)XlKbOBsU]i#<:9a94u3A/1V
%S@g28j^(5=\k(+P3_=J2Q%r"BU5K#[s4!ksdT!<3X;Q#pIZV?cN:ku]8T]:I7CrA?[!%DeAuHfd[+apJm(A4,k<)"EII6=C9ItlQ
%:==8hrOk85re,ai&6qr0b9kk'2P\hu!G@_:jn%,0UflY=.eW]^GuW8&c+LHBjD&NPd\CSJCR=JHNq7t4,nPKs"g6Hfq&e$%<A*WF
%0B/'TM6:IM,)q?.EG5osN&%OO]M!WljdAn2QAcf-Vm]?pla>j&UN]4DQSI8*p@HJnL2QAXIhQEG:!kfZ&,j@!!2l29'1*XP_X8@C
%#pBlX025]W_s3W!iCV:\[T%.o:@J,=95%R%+&*Z;Z(:sfe=m^Zc!OdYXS^P5r+uD7;nJW*A%*:\n$t6`e+0fTHY;)_j'f8@Y8ak`
%Vu^-J<=V=>8j!F!32t(kB_E6;o*n=UCT7H&I/LE@$5V6/N`R3`oc(cPi7_LjGZo/+VkssGq.1B$m`s50dG*DASMpGC4$hNC?58=M
%3)7>H@G>%dObn1CSB$'j#"XO=qg)2B!OEi.mVE1CY\nbVfsugHqSt"^VG<;t)_](aZ(n:no=&6-@4002E)^p^eQXL7S#;H(G&Vte
%D1`$Kb=-HCc9jQW/poVs.Y1d/>g>]X$$/Fr0&_UR=K"N$7m"aucP*j#]15@A8$?h9GCLb^Ge\+]2!Vs'_PdUm@G`TP[WIX:0;L1a
%?c0$eC'n`d^fGmKN_=13A`EsN63Yh+iN\k58P\;1KY(_a;b-"ha8!]F)7Wn^pHN(#0\)s):*4)?K)\+#[UUf8c&<s@YrHM]#ml,!
%U[`5ZaiUZWhY=ofN:G;3iM2&hFLOUEk7?(JV3EX8UU@PN%/G45oQ8Utqk;U,?JJ;qB+Km;JMt]%pD;u6!^MaDKD;K9au%G4MIiQ5
%)eRB92J9>7UN?25@\#6Qr_91Mn-QFn='qN5\5C^U\fGSa3B1eq+ql!E<87TgW_DU<E;I*(6us@JBc)W3(pVX@^(-K76oU&l!FY@E
%eh^f0"N\R(C!uX@0^Nj\'LQ,gF)q7=iU8PUe]>2iMo4U.l_0duKIWt@=&<2<F9A1UF8`]i$H7HhgoNu5)9Krt_/[rt^R`e+!AQ.U
%^Xg@Cj)-Kgd&V+Ef2`jmeQcHU%b7u1Zmj$Uf=%!_PBpEG<&R-cUuK&Nm3EClTXfu:W[n&@OGm+%m2!uVQhj?R+JnWH/oTMX]MW`u
%HsP(-OJ%oEI.*pbP-^mp#ea`7VKV-@a*?&)<7$rhc8#:>-=@[m)r<;_WtT0KIXY(/THtFh?Og^'l@I.`grc&3Z?Fi=1LE3W8M'j)
%jX5H&mojZXLFBq[h5=fH)@,AM0WT([p..'H3HEhQ&Lp@nGP&g<\K=b0p@(CL2$G3f')*854P(\C9n]L;"=/i*i?;NXlpkJAZ4Tuo
%;<:bVLZ&[)'j_AJ,4*`6UdhZ)V&<,":st)0+cnQ(6K$7NN_5kqAi+D0"C:mg=.u558:eQ;b_uO2!q5Jn_e)nKMNtf#911H;=oaM:
%PHTn5mnpr*[YM.d(PK?NU5s?g!rU%/afqV;#'E"uWrI4iAQFEn@Gt"6.^FLUcfgPQ.HhB%W:Z@QH/fTj#:.'RYg>#k[4`&fHI-Y6
%CgVa!$eE[rh!!#C`coaL'YXHEmQb7//AlkaM$#i(PW3!NpEdbkN']86&o8sr/kfd0;h9>C=&M&^*goutJ%.EP[Z7X#OBa_$mJsuK
%N5hGUGL)0b^547E%no$.VS'U5A5ab8'TB/C[2#6DTQ@M[:ME3GnAA^0OZ^P6+n^r6#,2JIj5,2n2M4GO>a7hJDY;DoqY$$4[rI0c
%V>*\kM!23'%14DF0e1EK>oNLAr60Df-b26QESo&pGoecR3r*:h0]G:,Jo6#`(u/*8eXM8)LC'L?30@\hb_Ji3'!>d#[bYe!&cPo,
%k03^S_.q'>6@K_K7<3S*GpB>eN8fJ6_epg^49\Y\3+-m2AHqYcb=e%Hpe)!<*3UNtTWd[G`u[j04s^4orfYdXlMdGD%bkW[nU-LS
%aMb7E#Zko7q0J'Omr#0:QT6g?Nd7'<iN(Pq.AAG)SYh_kK'$TuI[Zrr1.TO>1B^gP!H;9j#d=cRg+F%lbCDqT@tH+%oU:ia"E@_c
%]6fqgWqK?T%lY/AbYL$a8Qb,0VO446I,kmTT+%Gpn^pT*AJ-H5`<TD3J+`o!ESQ>$OeUlS&^VK6oh>[(DMup>!rZ`N+#;!1ZSDB>
%?[BXX8!>V3jXJ[BV)&Mlj[!`RpX?Td5Ye@q`^+%r@u*4P@<S-#TJ^9"'XOF!9Bg50T1t'>CCNq3QeIk9e#92O^@"(aP>pE"Yci9I
%=<0^Hh_!5lI4B\^3fkr2P,U;/=Z-h?9PSuRnFo@RLO<(X3bl\L-,NhkalKi.3<Q%\odMpb_n)8EdP[iY4SE;.>jnKW?-&3d<6/d:
%m9BL:6Eg<+D^J.^F'Z/jOIpShY8L5tC%#7RY#S[oCV<)*@(qhL<h_el;&&_i?B90LPm8JHkpKR<DMl.FAHA\KBl:#,*D.7!@'EWU
%ldu(>;?:^[h'Jd\;m1"eEqfei,4aWM?'KCZ=XTHl?[OUZ2.$O`N#`st\0u9n_A6"2h<.g3#8HKfO4:NAp.[2(eC93l4TZOs_CSh<
%LS/NSOR/jTN/nI\["$V?Iadt00W[&bFu+cT8@ShERQ#^CEq/k.`bd0MBa,l?B=;.cS-4PXCsLN,g:<T7LfTuU.0WX>X0L?aa6j4J
%'T1nO'3u_b&%>L-`E:h5h-Y-Pel(<q=-IL_R"tsePL'@s_,Z%?=jNhKQiE/Q"/Fip]/:9i*#?fh[r0U6I@&e0h];oE-dSjE/tsj\
%s$aNrGA6I^`U.>'Rg3tlaT&qV%X:u?FbdWNJ(JcU!">^kUNZ=V-p..ZXq+HM8Eh=#h4FE*Crr/_)+D_8[3H,)0>`j]VFL(U9.L3n
%Zo[om'*W%?XC:ag/g\[FZofo&B$A(D=[+_USU(p+RS7_\-;sX<E'(oiUtWIi%`oFIJGN@6lEOrFh2%7l\i2qj`c-AYjBY]7R);G2
%70aTkDIXn@+dFh%EisX<]j0_-mkhoD@%$qs@RNoj=\$#KQl.JkN9]=3J6@pd5Nj$=Jpgrn_s"dJ/_U(N!`N`:o.AV!&@'^72._gk
%ah<%>a2[?+Vo'PYi251[Aa2b6-q=OilG_OW!(!(6(oaEs-lWO"V'*ruqBXU!U21bZ9Z5kB3`'jcb$Mafgb9:^EsXQ'Ut?f1mmABG
%hkI\TnH/#)RcR<2Ao6Yfr0q/p01G=U.n>qHP0V1Pa/&u?A?X:k*,!dsJMaA_i\;]P'=_<b]/,OYp53`H_FhmgJ$sb(R%g[5qQK6s
%+YP@?'VeH^n1FRIb,3ND>7/`dUBQ]6=DqJD^Xhp3;0+r-lbN:j8WDIT,CA38j`'&-:[m2mo>pg,[Ftu,AHH.(cp$/H[]`/AV=*e^
%pBm]F(md6':lg7([7R_0_"sX6plnI1T8<3;pj-0l3tKl@jj!q(0HA3^Y?#M#+T"!R8..*'G.QPIT7mA1B>)(*O"1WZSNOf7/s_C1
%fjT^s>PPT%#5`0q5KOA_gfem-CT*'Qp)EOQj5\[-:2"N=@=#pnYBC;rL/,:49mgC?XK?E;PTVqbD7U+ah"L6PFZsmZ<b)8:\L<^h
%$;$,7'.K6_ko-eAAYN._-Z-GQLo]?HjIb$7#*R*>Ddur/7Jp]d@>u\VSDOCrM&Nt#S:n"cdQE=3]iFC>g/:?VM$Q\1Hr=d$rPgoS
%0p:+;92bamjkHu@%!0&V_lFb@>$@SWM\.[BJ\rK>M\)@_o+!fs:L4U>b\Pu1g$YL_-!92bhNpVWjcU>*p.7[U]Gd&nW_66o]RTaq
%K26(_/PO`d^'u!4X$C7$9;M[">KqDoA?'@(`%&&^Ys'JqCCe"`Y*GS#j8jJF:U)[C%YSA4^Wj@<$^p?r:#;u,T6IN&X4X3%9d?+/
%IM(uX4_cLl@(Ab)Xb9/&$h1He";dcZ:9a:s,4do`r+0m)h+RUk\%R&UP_X:OVBk#0T(;2tGDuAW:?`Bj&-\ViWhlGXa=*2]@'ON,
%*OXSH-(KRZPgASKp\!>u+L$7dhYaHI5[?2PNf"oYa`T_JAUWH.bn:>Rgq'me-m?LW7K2kB\Oq,hqVd'Ukcmofqron`Yhn&cjYM7f
%fH-"G[U?`(JlO^+fg<SFL)n(tAQ8n^NH@b8bH55[W"2V0da9*ba_Y*Vq8Lg=Y[X([eP7E[f>%kd12W?fqPrSY%<Hd[!"fHKe(ch0
%TG.?F&).O&O(pik,M-1Ehkd92VX(QYg=@CHhAA?qD[f@Sj.%UR+K4(u/%R-HXdbXh"'hP1E5`=Br@Zg!DS[`1YUld&%'m+28cZC@
%=*'W5MM1i>&$FI:U".RRZs'Jb<m.AjCt2+X<RY]..lF)(as$rTY1.Rj(FqnY=WLVM6ujm2'H7R0)5TeH7dqoqVlC68##iA-5S5Ig
%%lS@.<hkq.Fs2'UG1aUY&_pl5f8;/<')\ia+T.%]OF5J/TZmsj2%,b:>h<Zg$uDE@JgiUnDdmq'@"?)K7GRp0bStK@D_]>r%W_&B
%PkJHk4A-XIiO]N;CklpBn(\;KmtBUZ5.H#FdQW*6mHL+a&q[*6P[alcCnHX>661?KCVHJ.hr]*>K?EO_5Is%HU8n#7HSh-4HpE%^
%/_-Q!:2[QUp(:HogJ#o^K7C+AgT.=&7jWdml5YK^RGmPss/F;sMFSa>j5mh_9Ku!PIa2L"S@X)[Z'`,HpXEbpFbs1?D9G,MGcNsl
%q/o;<]VSN)2bKe#;$m^GfOhblAZe_oJQWi+Y<:l#k\RS`!=AR6>#jiV9kffB[&c(9)Ho?YZJ25N.Sn<YC]f:>@jec7;Z>o3,j`QZ
%o9uNB*b+f-&4Xt*,l&jLF;,Y]jY:6@@@g[a,cB#e8Ot:g]\qWZDLAT]QPXOr"^nE9>BUpF20:poT:oMGppTNaXcs6]#0<qoO"&K!
%jP`,H/:2nCA3LcaSK8S99,KX?MGJgO!L7EfGK"7\%PP*%*q-f@F*KI?cl9#qhjJ3Lg^[]g'3gg1:ANaHQBn"].jR,pqg,S(_YRFe
%NS3Z!b,7fV(!beXfjLpH8a&_H7US%onDmAhb<r+bUY2g1_J?W=.R%UJ"Mlh=Y8XXqePB7#,WK'sg+<OS]I*JVU+cG+QW6:+;!u&l
%Q."EDgbfTc%%LB@<5k"oTamnP=*AkmgTt7<["+XG'mJ_oDMW(#RYm\#e&g>(fSS:rE?t#rJt0A=D;D9(EjCkO+shX-`-CL*K,^kr
%oj+>Xc1Jek,.'@`%8IFZH?OtKOdFV:K4VZ2K'p:ka$%`c.#((=>.=8CC\M+=8<F!E4WgXECR/E%0M6OiBs^bV3'l7.g.b\"7CQ`\
%NRB43$$/TP88VDjEQ(?'-]q4Z4pCQNnF;8KHO\Hm"JUdY&s4>T.@u3]a81TZoHerXMc=@<';`5sQRmS5V:+25T4cbjCVI$grEfLn
%*(d59MFLg%`6dK,S"/4eg^iQA'?34[6C^j%'+k$6)+hN/XE#o?;r(sE$2<]O/pUU9rJUi4#Y8Y->QXQ^8iheuOGT<S)9i(k$D*nh
%3rKgCMiWM$St@7_d:,;KFqJ#68hSQ'/h2^%m+0hDd)qm8\j^r2dCm_UQ_>G%h2M%bkKA)8`^nt4SGS+;e#Fe:NgeM+:7KN\&4ui#
%mYVJ&;J0HDCY>Grm,_b4jZDkDA!-^8/@*k:,^n]<0$k%f^PJ+n"l8ZJK1K?,Li5[(qoU)&D]6as'mK]O&tHgC+HXF0nM9Uq*sk6!
%0q#cmV!"l*PDEH8\6D%qHc4064i.gT5DdOOY9$JU-r]]TKDAO4`9ClH66\EC\FUoQA5W5c\mNu<f1Cg.nGDL0j7r!Mb%KWfMDZJa
%8[=.@<=IA,etRHlDNA:ZOXr2>bEF(Y+g=O`UuHFQ#";OK!Rr>=@#8ns7kp\L/#k`fB:4utWAEK$^_@\S2kQ9oDnmlE-Ub9S_19'%
%Oceghr$!eC+.i&?#@6Q"4/?lQm"s0_4di[9l%(X%_;YqSB"NkDQ0GpVC7iao<si[ph[^@jQM6HpchQ`^T/"+U)&p-7dA-rs=[]<!
%(KIUJ'P+DH/10Z*gpch\o&6Id@lbc)*S,e/RYR<M;1tm)+qG90Ki`-n2eCG4N]g4QZj0q%e+i@p"oT<%H@gI!k1.8m$[*nMY^qI'
%[tE7KqWs]#Zr6$C[b#5qOh<(>=hF.RdCXPnY@nqVX8Daef$T#tp9/<RID:sSG/E4'"gOJm3seng&TNsCF.SO-47OO(X4q^37jW^[
%M]V5?$7XU"eBCMDDrZ$X+U;CS$D4dq)@95(QhP@=8&`fV;d4G1\$pH@]V"2t"d3m!B9RWR;IT>C^YUTrl"Q1L+C/H_RQTDP5=U7V
%WM.eu:Qp):(5ift)T#ObI\09We[2sM_GeLgWS?tAN*4+nN-WHt(%D$@/OcXHN^gjm%^S6A")oj0EmJ%^d4PHkD1"Is/D]UHej\XQ
%F^&ZTYtoB->Zr@eKj4*>eh-`3(D?2mn_e*i]=H\4^1ND?)(PstnsIaoDJ/3qZ'nYSE8()"n(46?,,K69?9Lcdp8h>4SOJ=Wm3F")
%-hHiU)DT!H"e;hd+0EGmGK5?&0c\Ho%/-SI"fNkmO]#)B697)EF$@\ecSG&XC\4j7s7W&No%S@enh4NG^0?_,Zm*I)qC5=kDmU^f
%fib2oY@g6-rU1QoGGm.[_3.5Xh=KYeG[?G(j\r26>L\LPaamuFWp@7"/./So=DsV)it>MLUo1]':g[)ICK*$?]jOJeJ,2o83Z`p*
%f)-`12(96M8>K7Ds)8@@V6-8V,!BQ2qt*@EI.YAQ,!X28.]98QE[@I0=](C2%"J;P9i;=13t+K@6o:?8)!$C<0eo]_#Y3i>ba^k2
%cfLB3P+0\T$J%g-;9:mu7P*qErY-lm`'lsC;!;%gA5E[B;U.Y+-Lpnp>;-&:>Oo$_7oSl&1NR,Wk*tK%iMU7`9St!^0:Y?CmZSA'
%'J&Z%<7Ht;rl@F^]0G%C:%E6MEs3A;L4_KL;ieYc6D%sFct%hA5^SU5p1.&'%2#=tEmVpF*54>dMb<f.!p<Oi2(Rp_pg>ta_"=hf
%.O,eMJDa3]LuhV6.;p9\8'2AQ<_#iS>qj2mKY=u@d?:af,L#i_#jg,HaY$Uh?kIGD_sPs%cL^l_fG1Lbq@]1jT+6VS.n9-d0^R^;
%rA[9?Y8Bk/qOd[?0^S#fqPp4F[r]*&@(:\@'_^E4[0EW+Qa/RtBWrG/<Bs9N,V1)[_QKY`cEuOCMWH=/Lg.8/_R<E*"]fIJ8.MJj
%U@mNb'B8*Ni,sY-;&!b9<iQp%o]k+1JsGZp0%5MrWncs-!%dTOWtnTZY];h+`D%&+2i6,)h[pQ;1T4eT;r2dIMHD'CnEWbQ_4"Tn
%hI0q]17/dQm=pcQJ-nEMe01)Kq!7Y=e.*H=BS7XgH/nlhn)>qeS?d;!:>'C\VP.I_En.JGqXk_Mar2^K4q"2dYNa=PV(2M')r3NN
%BG4K`G7R$5HJdo"`LU<Z2Bb7^2qnXD!%Q4fOG<Hl3ST<QgOoR)HWl\,V^>!1gOGRs`aJ`;iimtGBS-gV16Z>l;+\Md)Auk0Qg"(]
%!DFVO3g+LJ#.f<mY$#-%WF\22h$^S;+:XK%a!(Ntc>XCEO)t6A!,N&TfFD#[>V4.lWeR;l&3'7q[u-q7/0W!BCO3#`E`7b'4rrnJ
%q2cksN#G"ig;4C_a_\jmf'*r,>9J-GDG(TJY!/f&3BIA1;P"QP$*$\Hhd^rqjAr_LB*S"U#lo<:#C4im&63;=+_)sE@!JDA631HP
%K;o;!5T4UTVPfZ1$-]YTAo@lk@1nma#6T,#^,D\81j@=ZD.1]3o.)iAUG_-7OqQs[X6jT<5cm_IX[X[p#SIG%*]sV$G8FeZ.S>&@
%b!G2<)np3'3D%;qXIWf[#=0BL(/Y7kDj66i].EMaeIUJ4O=7lLL',CuSEbhp!@H'1o\kJJ#K28F9="I\LAAI3g6dbe_H[n4Y[B)h
%,ObgK*T=$Ec*Id&fo/RX@N^upWIp$IL;Jg`mV^>N38i-THBgAL+?s"_bYl>?I?Hp9;X?PV*59YI2l[:H9cTUu,7p^^)k\7b-gJ0r
%_#f23Z8=E&n_"ur?l?<.LbLdocq%45'[d$X6Z!]@V:3s^)MT@=E.$AIi.]++%f]CJ$koYQ4'.+F?rTg0J5K^qMU_0H])QHE2t"%J
%;.NM'C4usl0l($0,D9GIr=*^u]j6eR.s7mGVMN;L6p'[?4(oNf`tZ"RD,7<&3eB=(8U2%s:\Pq<>EV@OG6^*EeMOX0+bmJWENl,4
%]."^2@?BDs%K=6GW6Y^fN=9Hl':4V13iQaFHON$?"OrOA,au`JJ73d&;@)FBS>,\!R&NZ[XM@fhros9dP9>50:W2>JZc;37S_Rt^
%XdV2/lf:T*ah#L[<[pRaBh^e;]ZqEGa7N%q"/<'-hcd.VEfpo0[h+G`7tkhSYA#&oVjfB)2#dQ8$SC,4A:LXFUj0#!D#InEP^'D3
%(5K:HVCcI(loc97hfd(`_nN@HX-C9;%JnY=@k"KnnW_M\>9lh5)(&^'D]*L\c,3>!+S(VQ;VW,QWU+!;iA,Qh8%2LnF0\W3.>dXJ
%#g:L&.7L&fg8LquM%1B8gl!$OB`eY+]!?g#"c1ekH".Wr_8A"!AFc.e3aTl1KL2Etk1,DKE>$:R2<VNk<C?K&cL_Q;&0[2)k:,m@
%$mM<oSEq8QKAJ0"NV\tMB3?ni:*r739Z'QH9/`ZCb2]a"irSp4ak>7&E^;Pg2h@',TWjO%S$i+&-.lCN^LnZRIa/2i?alVo#/Q%e
%G!eb%!9ZJB,Vdn"W84:KMNDo%-MU`-5R_/Wk]I!\YKN,'FJ7V!C_bCCDD3<#J+rN3lD0OHXJ)r!DJY#fGFJFrH-0$IZ^8-L:O+0T
%Bn-^@3=!S)8El=;aIHQN\/'Z+@an$"[\kAZ0,=@F[LJ-,Ur]R8,O.-a1b\!Ncl;SN>nQrCR@eXL$/Pe)(Eh3c]#c]uj*#KTF#$XH
%7_uOF\[q<:1dRC,9+<^%+dESU\e)Yj9TE=]@c%W$$ba53W^H^XWN-Sq'@k9gkHm=sZ`3hsgf*aN@4ukAs"a#AY8GN.];H8Yg-:NB
%n1-s@^]#U1&5-CgBT4+tT+VE"r71^D[T)8\];OLX_e1LI;n7:s7Q5u%mY9<q^dC_sQ.'i8M.Q6:@EHaQ4;<WW>TV!f6!irMD(>OQ
%cl1(s?q*^-0e1hiL*7+b$V`Nmm/)PA%O7$@"iKbF,c.lV@j?8f5+cHU+KA?E,t6r^(0Z9UfHbUH^)O^#me0P$4S@AI955C'LYr\6
%:;<@4G9-^dj55!lIt,Upk=Z`g?,ut-*P\asNjqbR\5_)Mfs1U/Gi?sJAH!%]E5h9FS(o-7DOd7%n=duN]<bY9C)CEh6<!HK'o.GZ
%4\3[2Y@^t(36HZ,!7l#Y&c1-NK8)<8U'\<g5l`UE'=(2FEs+e.?UcF``!cXQ'9BLW0AqK7;K"7VHXA=ad/_Xa;dg"2cYrL.PP;6?
%hf\k/Nq`"gc:K\NS\=@aT;U^@OdG3b6?r.)j,G3dH5+DTl1f-5'Z-baWfa5sqI?<Y#k4V"p"MT]lW.\Y%3oE&h\P;H8I!;bJQng;
%,%@ENIjR0,[#f.*o*KU04J#7#%2T>6\3(0mFk5uN77kEj3-S;?g8e7Pg+>LPHAcWBJ#[Jk-nO5\_^DAC@&hObmp4&M/,=B8n)&W^
%/0O]DQ2D`)jN5]OU(J"FJ;prJ`@sRK?7]U8e8cE3fd<kl.K/UlDQ:R@MMK,efOib*f.q-B2D`@:Ku>\=7rdD,_X5.o3GBGbr;r&:
%UMJDOX5!.u)&*aeSpU0onO%CjW3aI9Wj,TKEUm@bA$;`c?oE6min4;eOrdN!o7X#VdD]`spTEH3(&Y[qp[8Wm6%2gro=KVS*!P[b
%3nXIY]BJl`6ADgYE?mM5@'t*u;g=a9#0Tk(Kr:3HQEI"3[nT'ciX,8GKm@$`nZ_Fnn&9QZ0$[,M-2`HUWQbNRpt*I!qSa(B\tJ]M
%FhS0icUnp6jdUd?)bW9SRt-O!CcY?Ni<cF-\YP_M$D/=,+H071$0c'A<PR!W8/O2!n5HoTkWdM*c8Op_K8"\F2?D:<DanF%RWKk$
%f;hl7)k"*6*,+"=9d!n[oo`p-4(5mM&_+EuqlP&/X4@$X=o0kDAF`3IrQV]1"C36YkElP04$UnC&Q"K6%=40D2)Vqq;j)uN09'6&
%P%8S`[+7.=RjXW>$"Y*^437U:D$-h&-(1hE7mk3Xjd=,E@E4&!R#(AYQ;`MEI!k(K\0RHsaI\p4U9mjF$(d2Wce0VRZhCQUhc9Qc
%C:DOhYF8\dX/Yg\2.Yn"'(g)/f9mpP4@85TOsS4N[';D[+E;?-O\9<.XjC5Zc!K@s,nM/&_8jhPTg5r$6B[mB+uYj:PurXe3/2Ir
%/"o#M^a4/18I*qAD]cKeQ.u_[233Q>;FuZAC.C=M;fXs6n!a2\ZbL;Lm4A(bbUE;;1cp)1o3"Bd7$)h5rTOV7..S.n.A6mZF:7>r
%:]e(s't^%M8oB@6QrQcHKG&k*)'th$PRNgg5>*DuJD6`c:AH0+6K4QJVfWRLi*A3T4.Cn9Mus!C9QDYjer&E=lr9-ChtedajEAu.
%2>b!tJ(O&\q>XID8:E;<%N8$cq)XK<]k`R-V_f#9YmiX#Via7BAbG:LNFYW)h0mBhGqQCgWlH#@M1c7&0o(N3OdNam?71jD@>hMY
%*"q7r]q&%l3kPkN$JH@C4CV0?;Zb(Ccl24>Gdu3mKLZUM.=L9#b22gf]3^!=lh:/S<O53P6EgEZm#_T)UcdVQ>fb%Wa0lQSdK8W\
%aMoA^%:@7C;!LXCdC94plmEtKbN=6IQ;.L2hacdt\.JG&!a*q!&ol/9lfj+-@^u<lYN)m_las.N&cNJj3aaEHJ`])"(LcD^l9`4'
%cKR<>%67.a95J)73/IjlAa/!q8TL9O6c^Q%-D>'pc]S^pKUuf+,n@S+\!d3EdI#c8mHB!'rqIb5DsQJIl?!VY(?<;:r@\qLL\?qQ
%%'XJ9rOjLXIb]"'kJmk+b][mhOR+oTFBBUu&s^V^EqQ<>7Mb$6n2G6A9rrR*GjI2[h:0[dJ*tMf4!sZ61FqB$Xk!SYDs7t0`YiXb
%()Yjp0rk$/.Hlq,3]D/HA5@;,#sk[KFH>5lkZr2"?K_H[<q"RfkgK"Wd*;>lT%+XBm9;90UissU2C'18Mt;$1_@-QJ#@L^&%h\@b
%$PWTN5#8pL:cPA_GM0gJ0%/I!(5T\09CO-0CB^r.Vj"2D38`,j]GBW$r[mni*m>C'?o<s`(?-0'0qMR`89Q(+9Y6#8fr$?o&*_OA
%*qeojIeWuno@q'@CIM3Q]NGg\qs1T+/lo=0812E]2W@mF60qjl][b2VliHTagt+pCc.[@h@3Y9D\AMJXr[EUd&TQf2:D+$`VpsJs
%0bTU,aHAE'On]l>^=!cDU>DfF!oW&1r'm#TUgnUb5B\*120C^pf4_P[Sluc5ib!i";gT/RHpFl6dQ#Jh5bG/`cRdYjfO.hT<;jKK
%"j56@7<0:/Pu,qLC<EI@o"rSgT";>%3fh<b\f'JQR91S/L[WAR@`0X<JbG;onLV;&>b-=k=*XQ6Y?ceNSo=Na2eN['j/WM?rl#P2
%f6L_1]["4tV]>'T00(cd\:e?DO?1.7rU_l^ju9T/'/Z5q'98PnX51jg,jRpMeA-B7(Y#fkFt?k'\q-[LSYo`4<8]9H/XT992JZ-8
%=X*1`6nPQ:Y.nb78.n3l:Lka^kI_YFAT-n&OL@1MFY3eOHjQ%0AqI`$RRgc+hM2ZR9Pi+Xb1YK(KHT*+)1npo!/(162\N1bK2<RD
%NLT2.'=^QeMt$Lk7ec+^8+YR)d;$2R5L)Lig6'=Ws2cAD*sFFna1=bS(r<tUHh=eDDd0AQ^/]U';U_u9P//```4-NU_p[N\$W`Ur
%of%)si:*_G+h8=O>mW6Q@sq0cDt9-GFk_sJ@Mib";Jf(K$+T[Q>cgk#P4R4BJ_oeih#9b%h4V.piT%T]s&$f,^Kbd8RVsSbIYp$h
%\cJJr+%C)<lB-Ihg&.$Kl">bB(1o@)oC4,$rPt>N=sSO1%28>7.o@]QAp^CC?24%c(h)Vh.8f3Gk-G\CagDb(iO'<S^V+=$h>UQO
%DHn\h(I$^An@K<]=/,.UoNd=QCaIea02Pr'\gP-kU(oo^3%IiuHuh:u;3tN<;&<OhdJ_gXG22Il,i4Mr-0i@fHQ@Q:U@1_H?&?9G
%d5Q('^7[spci8=hci<e7L]?o6Du]UI3W<O]HhHWQr^RCs=AQ,M\UMl28H.KV!lt**mtY7pofF\leSs7Um]&&Zq1\^)dcGJ(o4-#*
%Pm3C7CNI7pC6An^`C<^.:uZ;C&T!%,In3Lhd?a@188p-*GSZD^CB\5b@1qU)RLbb9;WKB3CZ+d;6c<n7HkN^0jh[X,eT5M1Edm6r
%48O+WFW&$_:sGaSR*S]l6A'`+g-kREYlhde85fssF"fOOQ/1IO3q___$q>)]Be>K^9E=_7W@cOd<0ENpq8"4bkBq18,W\Z=+[!>[
%[!!>*m:^>hrq;s;=p]]UYNr#$Aen)L2?K^"0sKps'\6>`"4uk>Mkp3:<p5i%_Go[d/N4bXL,A0H3\@O&3%;d^p#0SCTo?$4h%EF2
%lOr"*j"W;F`/f.Wl6<g2d4O-Z3uY^>i-(bHXKE`aE6SHBQ'@pn9[JTjK_=j:WT5GSH#6i?G[`N<]<OmniS&/3*goFF!/"E656`(,
%8B*<"SOBAi3.sfZNlI([gl1j*QW6^2(UR//E>$578#?jF%tX8e<p'fa<[l1ppJuUQ=`F.N8$]*@/$m6Z1dRJ,>bt!.:KmJP8T\9Y
%>F5D%X@q;S>"\na^L]U##OWe\Fse*&T-#%.<n"Ui6Zb3AL[aNadFr.C\"e@KVq#;1;(ml;3i),B0o2@)'ggGU*2;cT[tS@$,h$JY
%)QHCq[;2<[OmBBBCH=[>+JU66m*aZ\FL;3VG]`Cfm4sLPd=-**?*UNV[CWs_i'qWG.,.qjR58r.!f,a/ecM6q5\rim8sA@XSu%*o
%qs()(I^S(k("?l$]k](IP=T-)[6TD'FEoR?l$.+6,kC^#gPZb"-pTaebmf0Yl+L;spDt?f4Eq:pdbN)l?^%_c\g&E79ko"L4I6lK
%HM9\DY-(Oi.PMqhZ#rf_koubC,g*LCK9XJsdl]L3&Y8(T,#ot7X:M5kQCTaNLf\Z^,+hNsi8qdb(mjB&`r"H"]GQ)ZF1qjA*n`:6
%%'i)3&@=]c/MMX:%n.*2J(Qf&=[XR*NoYk.KZ@.)3")d!gnj*X]d*Al*aGRE*9lb)!<)?<U35_;aQapj(I_PG&_mG!LEZ%!aMnE>
%9ls5T7lr3N5R&5sZJC&V+p!(&0Cr=&di1S*1Lk'g>n*Z$,Vs9X%L@Z8R\5\+iZ^MdU5ej"0^T9Ss2YtKb6&m/M[5'Z#0h4'>FLKi
%Ym4o5Q5!je:/nMT&8AmCTXpWk1.,ttIA,6$bIE0g',j`.K%`OJ;5YNq"aFk.c6\1P`P&RH:&U0>aAN<f\R[;+V*e_q80lrU*hMA_
%@Tk[J/SoE1/rdD0F`(c[kH[c-&dTM9EuIEIKV8jEk!2MoUIhfE;kk2>f@d7>A@#W.2Hk$2*)RhDLbdI/bQ5.dfai8KP*r@RFne.)
%Ickig)7$Oac<i*Vf4#J9$A_=IOKrb91Jn6j\OgmH-(^)JBcY[BRF)tT`)=h99[md\k3=]-Cf<Si4FLYApQeZMJ$2;bHNEr#fgNM@
%\Ab=9qH=FBmnM3?V=!0omU;05R`n1?Cp\I#l*mmTQZ7J9ac69uc)hbFb0-RTfB]-qHm)6^4Z4m_gl(LI4JmsM)#N?KZr]YOFmDfN
%NO0n(9s7-VngtTa,]hdn2&Sh9YItL)X^[P=YW,;Ep#oe!^6$=5aT`=H)NnY:qUcoL\#nJeD\SGphA.-GCV<A'c.Y6&C!"o!d?9(:
%Cd&5-KSe2M^.obYpkjZg>UlH1[MN)h>>[LeOH6TMIc'?=Y>.O_"SN7'[;:V@/P&H6qj&jEqKJ'^F'2frBfemc$>UHT6cdNaMONaB
%9,\!:pitsFOb-dr"X+=[Ssr3qIVN[lY24F0O00L??2B%,cBH@skn#4a06XWY9K=&M94Ls>mkg4`k%3YF7-?1nUf>nJNgSWB>B8"f
%O6l>L/JBROa"u3uM2V>\c:N,(iC/(bltGb6s-n$-R/?bpBE5afdlFGR3>XGB<LgpH:94VEQ<[4_9@6W+AmZHd,V"#M)I(op.'TfI
%X2idZA[dA;@i*P!);S3Zh/;Qr_"2!k?W-37n-^NH7C9[]$Y'pX]Z/N".qcuS**f:4M%7"(U>;.cC>dkf'5.ID;G>YUInD"Y.@sa)
%M9ZcR89`[G`\.5))<T8Z\t;HOYHMP:?og*hdT@`M,^qUW(0<_YY,6M<3=]#rG%lu#Us(R>"*]U!$lG:6cHgJJ)JP^G4%.]LI7TFu
%*R.kZEAQ=8e6'R/g\[!AF-13)jh..HIEo1_q9F%1a'$LpQfb[=bOrGfakh;;G2DcE!0LYo[<<0gD`sF.rB$I[N8eHV?[$MirX2S%
%Q.Ym8r,a6]-5%!rXtOeY3*I,^hSqP"fp7$X]2ULtfmXE\RqTVkX^+?X3BKeoI\ugXC2R0#li#r;g+DjLQ$;]fggt02[G0*Cjtcu8
%Ta#8o[RWodrhh7q"d6C'QPEgnFo,/q/\#uT2]a=Y2BG,\+iX&**E%#Af"JJLAA;-iW/HlYYDUrsBPl""`oD8hm2"ro8,k1P?A<V[
%G;It!:@e!LIU;0J9&FXeW@E?KEBYu,+]cIjQMk>_X%H=YW`k]?C6P29."$F&Z9!hVc"(J6K)pNl>1Qc%89l3rW^9tfme=+GY=3\"
%X9//BXZ.r<j"J[-ooIVGT&.(Il^FL$_JNp,?a8P'HX!E'=%@Bl@^r\s*3_qT1I.>,)d&gW)E<R'_4o]bfCCPH7]n2U_mkDcC0j;.
%FUs:3`8u%dl?U^l+^M"o^u+\W>WQr3(B#OQC5MK9)+4\FHg3H)alV_AZmCS0m@L0Td5mLUgmaXs5KE_CPj_nKCL^qfI`%u%2s&5Y
%-BIW\(&aVFHVBqK4B^rQZ!C!M!@QcK^hk@Wrj^GBCR3XXKMZ0Hm\pWLbJ(QW3U[Z!Pc'6g(<U1;EHFk1*@Ei)WhSLJH+_nucP[07
%r7-5;R>UK0-EU4L[k1%5K&>N#\hpP<BBJ+Wf-#=S@U#/=<!!Pa:/.&INHFQ!8HT)!%nLFm6]Y6sLb5\YGhHNh>2=$mfi?/S\:K=0
%U]R=NdGAGh>);=&oU+^^957V1$24J]=cXo3Fh"fd6MQoLX5Tsg/Tp?+=EjUN!tJ#h5(iELAO&&+,fa)[:"?R1rU;Vc?01EE(33Q4
%eZb<1+"WG-[?-:\&It:H&OeCk6Sg);f7anRgaVpt*q)#aR[*\KiKa(YL:OmMI7Jtoeg[4X4\=aT:N6Uc.>1'Q7e^\,#l/H!AofY7
%OKJ7l,\mU)%W8r0)7-u&I>;(o[_E<_+dWl!M-c,GNgd0jh5glec?[bBj&edWaut?:2NP'^Hfc]m\QH5,=KU9S7-sKp@t)^8_ga0Y
%>h([HQ%:;c0#nTPnS?CmD^*MK[CoKW?M-lpa)WAi1/-8&0u5o=n]LX>XL$""mhhhS]Wg5d]d?a)klIR/:o9<[WemU$%k^7n>Ca%)
%%?F>^Bc"rh\pIG0hmV:(h&qL!Yg"'HlC[c)dVP?f`U^)\)ItO_hsA1S".ZQ8MbirmArA^[q_0>j:FH"!A6CA/FQtn]RYc@b6R-N1
%G9D-=^-X@if@*8rk:r-/*q/d*IM5>1PSO+em^Wj/'CP;_G!*6obQNPnZ!\10Wk/N^'tlI/GJ:7L&>K&/\]$e%E*Y(Z_UU15Bt^0U
%'=fB6j!,kV*e@J[1%/6_eQfb&GL(/%eR[(tbJq-HJY,qFJ,@66%L%i;*nMe&:?%t^[8lN9?'hIG#L"ecCM&<+MG%"]chV:[-/2VM
%3,2"dI,/;=Xd(K`VG0um.43$]2RaWdFnB?ZDA)jV`c$bNmD4Ap!oAsfj"ceWlHi"Tl)%T9rjqR%'r>Pon8!0;D/"Fr0mku1rj>da
%XWWN2Kf,#(*X-G(:C)=WO!]"gLU8P6N4Nfh1imjfo,K?uRFlAjE$(K&N3l=&)JSLk$,4^FhG/;:q0(uY(j6P9?l>tG;o\kZbts9L
%f7p-bcAsl]bu>l4AM1,W[a*U5a`4NVlA"g]")nDC+q56h%qZS,Q7?Sh_.G\00VeMF`M_hO,.lh.RlNT#ZnHh`p+JJh[tEZ,;XG0.
%#c@=mg8`\n%"c[LM6f$O?9@3Kh:/<<$I5P;$5Xa2$fGu;\"%<COJtCeQjbIqk..YJkE:m?r_In/RInUs!d"B9EA.5%'0B/?kE:AA
%p4/0"GYFhGb]H,aV.^;>DmQg7*"G;k_OCked"?1/oA()9n_a&#jeiVJX^7L#ZAddP%n=5!;(+%(]!Sl-CTQ9kSqkQa7FCa_41"du
%5DQ!))]o;-Vshp!5@)jt^f"CcCbBIlAom`]RUb.%*4eqP9bl+sk.PJPY?_Mr]/1pdLgT]s>0B1*VN9+aXbRbtkh%ln]o'GD1+&/8
%d2Zq+s3hZtN+S&G,G3#oSWWjK25#*LH(dp!L,r#=@3otH/IeJFJ4#.2^pLU\%aYDY@YCWIJ_TK+5"sX=eWL,g0Sn;3;eli/?BeVH
%dp*1gl?>>RVZgAN,G51C3$#"aU<\n5e>00^M+.pQ>@A?DDb&gtZqgJSJpS/3O"Gb57.r611nZu_O_#D*Q\OQeeX$-)T7`lK9@W&^
%/8O1=Qi1,o99p8A3.)2ma%7^WRapb]AnlFG5$E3?M)kD.5uBLHMl$umX5C(r`@]W2Jgis1qLc*-,.ENpn!/n!o3<gN>O[iXXtGDo
%Wh-sabae@Vf%Ju&'s"0=kj1n'<@AV'Ad'KeD[RWfG7'6X8>R(#jEYR).Xm",#(OuVWC3OF87]n93(df+-'D&u9@s$;K<-`jIlmoP
%i(<\[gZO^1-Yb5Icau,u6[S28nkoA!3bo<BZ].VaE4::slZ9Ps*'#edKtY8`"qNB.AgO]BRciP,J(<q[T_u#^b&BF\X67+`2:pUO
%GOMf6Eq%m)Ml1AEBaHYhUkmHj'*5Wm"/4IFS(Z-%PW`HMi;"[%MhHm_I>]KKR'H+\:)l[D]tuPfX"TCQ`Fka'^Q/s(M_2OeBdm]$
%>5;VZqpt/#pLM];<pgTCToWmc'QjS>!3(D_&,A,h[g:H\XWQ1,;E%O_qqC)4CC<E@<de%Do&r<lDe#@k*J(m!-1X,b+VUfD-rjEB
%Csk[NH00iu9"Z-`S@1E0LId^T)SVQ5!Ks]\ZP``Hpc`jo<*DuQ/"XGe7'W$EQei[*8]01Q3-jsT\Ha-[UuTOG;8u5=U`;+aqCK'2
%C9pL?KFg=kWhsN'c2Q9TKAYLBV/t:(ahkj84(G<J]2,[aHH:(Z4AWIN.8<rkXpa(aH<R#gQL\h"d+;O1+u/68p7Y>7+@$uDM"N$i
%.qWKfP2fp7]LeF)@nW646U'SZIeuE(K#5?+G?9qDVaN;#]5N>S1bkOVJ7B*HgLs<[lLnHV7''t3<4Dm.)BI5:Lq%+lXU?bLZKKoM
%G\-f^8egmTan38$P>D-<16O)A<dj7gZT5";AUiQSqkX<U]V?-GI4iQeYqF4+o1L6C@?3<H.>R6.EjMcpMJ#kVg(j^C4t2tf>)Q,,
%a0jO0M*2os\u!s.>0.-EiP5R[;BjF9=;iTKZ.E]he,>oAQpCqCEe+=:*K>60ZsD6=\=E@U>pii7BkuB1\*8rf@4R$emS*Eo[ZV:i
%Dtd<iBe$Ku2-+NL8n=MYHG!a^>2bd-YFNM(cfPuXALloNb*E3E+qh$U#cf3F[$V)ih/T6fN33Ip_oT[7[B90$;g83##oU$fM]3LP
%+Va&50q.;p(tg\sOCh_SX]qM?U33`lAYTn7Yd:]siV1]q0\k>XGOY^^A^]6Jk7#`c_KVKGRE3KDIS1Y`?]F)D[MV3W;@cblWd.L+
%`LBOAm*DqQ7I+?f"@i/Aj"ZX1B+qunq'DFZqr5kjX.&idh;P[%YoR167fV`"0?NELmN#G3(>inAH3022$3&CUUmtGEe,?b!V.$XQ
%@eS)$9+a\n`ba\RZ?W'@Qh/b\KZLi_e_IW)\jmj--lW&lDIZ)TZW0dtZR-#C:T:5O[7N>p)I)\+iQcoOm&fgQ^Mba_8BNIT,i6&s
%*^P@`PsY[ih.(X71=tI0`tD[]A-thb#Bf1!Bfint[JRMWnpaR<4dGK<i.'4K3K#).'(7m>c)P+%JEY\HOdpTg*:%WA/.*"ElKg]E
%pE%!$%>D&4`A?!G.s1-)`A=JPfNN;S@u!>Rd56W[5aS8%<2(,4!QDWe_[L#Jc81bVm`D7kZ*kd/?ikVXV*./H>spOqYK9lbr+PVg
%e6>TmH%_seAY_+p1PPd8<u/Tr1k,AQO^W`H9/6Bfn,m#\Rd\66OM6,X8F3hE#JPL0n`t\qL[hE=DKe=0?Ua8C(BY5UV39\k2s^@K
%IA45c=)8E`s($#IhKH8C!8?pQdcQhh`*mUVn6i8fbIhr#q82:`@]>aMd;U=XZFJ1@q>@1Yn3nJ"m7<4S*YJh!?^coMZa+U@nlDn7
%d)a.&X"3=e*NfXZ8#V,INhfnC@T$YKa):C7oZ<o*(68nP;FD'JMfM$Q(?b'!^+9&(7K9OS%n.RK[=23LJ$brJE%^V57Wb&RaGMuH
%W=`jp2)G%eQE3D6:$mh.j[6CSn!'d$jE5J.k*:+'jdFV&S8si'Nu0A'P"i4!S.P$DaZ]J^'ZKRo7B/Bq<)i'N32)D$\%]km_K4iR
%>G?840,EThB)>MZkXZi*dO,R/FK6[JG^-*g)5ROeYi55b1Q1_Era"3l.sq0@,anR9fDkBPSn*iAq3CFsI'SukQn5YH.U,hT0.jMT
%lnTc=7b;]i$jRi(h+,Qu`G0NU/p]]Z,d*t>->d1;'ht,plgbM^K8).CT]tb@g,7a),ud=F,BLJf>XB[H@ch4KF'dcGJ\X-?:-2$k
%NZIi-O`%)Ic2h3@LL2ef%SEb7,*Fl`po`f;p&)Fn[iZ&u=C.`"Gh;OO:X:O2mj4eZ(nVZhLge(\<8W_uR[tY9A"\K#[>n_&!(Jgn
%$cg(]H@A?5jpX;[;Em4*K4e-oG9nDslj(Y.6.GX)Q$M]`+A67-WI8b>c+0tDfp1I%St!P^Rm\#B-^;HZOMRPVfaU-/HAf<==6lpE
%;*PSOd]soNdENrNX87$?s/tWGBQ#8Poj-*t)_1@C.=/`aGb'/%Pbpnsi$V;Ub(e#+lA'nUaQ"sUa3q-O;(GS?D"+H*O(eO62/`T,
%FAJPbO8q$EULfFl'"l#^jc(ckZ,XHiAY!4pWArTaO<=%U1Q(7+;GNg5TW:QS;TX(2=h\d2h9UgZAW#B(p2^T;hipm,HMV1_l#<.e
%ff8-l@tiRKfPO%&Eh9lYEUK?`4<,7_a*AqXFK`n4iR"ldRR7bqf>`tlP(*OaL<fas`jG@B.P<hPZWY^0N6OsG,!XQAdMfrc\nutb
%k/N&o<n!;UNeHJlqOO+LrkpJ_<?$b"K&ZH_q+)S@[]iCdp#X=K9lhP$"QfVZHX=DZI')hAdpYV$H%,pE(=LHj05erQ#(\<bb1R'l
%aJAKda[+a0[=WsE8_6<E5aF#^VLMDTA3H-b3*ttP*SWbal,hPo+GoC/@"7rQH'sKd46o"n;SB9qP[Ef/f%<.RB>3Uq9Q"d*gkE#S
%<sZP8B?\muW7GeYip4?-r=b;FCqpm?(#)/59lXnncSl/l=%ogU92q?DRC(Q51!H5S6l1l@n:[M&33L*RmL]oqfp__e+-,/j1m!_;
%*87>oKdlind6ips`ICN[@d_uD^@PXbn&98$nW\":5++6lk%;",3L)@4^kYQ<;LQ&2di\Q_>*lg*^NPj1dS:<IARA4o8`Qi7D&X-b
%[>+f(XCM9R[W[&b)Z6n*U)+J5"1r*7:q*L_3ii`RYql&lgYCYg(s+]\/CqETO^U/K,VGk#I;81,Hd\QF"O4NnflA#)WTD2O%l].>
%;k8u>HaS3JV^Gu=;7<lDm8>."XY?\5:_4bFEEH9)W#jgaD&3D=YM=>BJ2#96e[b8OK!)]_[R<VXCU5#b=R3;1>rdY9Nm:IK=(^a>
%eE+3`j'22d;Ja)ictbG<aolgQi&1*P<jTl=NV:]kZ)Err5'!;oI:)XY*DC0aR'C'a]8%04mK_(_-&6Sef&V/=Y%GFdp$l+uJcAa&
%G^^-ZH6Q#ZSOEG"[r'3b?h+E6"U0tVH!a(Aq_K[GZp*ap5F+\8X/`!G77Kn%+-o7^LJg$0OH/^0m@r-7F1;=U2#sDF3f7dXAJ[mr
%;I#T9*F;qn?Y$(Uh?o=<(#O/XIYT\Eat-jS0OqAo0H!Kl$4FG9B._5QJ0s8d!/B:Apna6b-&C]Y>ocKlQ>[$*MdG./\K>5^20FZX
%!enOR+NRSdfA<&@ikFG!Xc^1#'(u+0\e>ek9'7/@T;$^IB,;J.(\Tnees!d0H4C=#DBbQC<,-Ej^(!m8Y,uW<O6uG^1i<h)?kP">
%-I[n@KFFP&]b"G8mRM!2/PWhPF;)'MET3t^dD.ht31/.^j7EJsAj@P,`,Gga=UiHCC&IWehBfq(/c7!gGe\P]DrL5(0D]VE^uPCY
%Oi4I'aWKR5?J7L=khp%XcL9BVGdipWpB.2'%1XQ>?$;,.$biOVdo/d/'$j%hk`\Rk-Y^cQlKgj/Idi>Yb^CMC'g2WV[u]W]4rdse
%.JeI5BrOi:'s1^W=7lc?atju:`\=8IE1WR#>5k-,*LqF&O1m5\%V8;&1X^qbKmPKoR6r,7YlqSamcZRkW8sdpXa(OP&1j]&]\lVq
%T*HHF'#E#`,ee'j^T+.A"rI-=l/+As(Grg+8fhojGl":krR5Fc$kPG+S\!HJF+`[PH1n#2)K%\&6L<gUKn_!TTqiTmd$TI%8-"(j
%/1Y9MH=!!`,rcHiP4B,L\->dhaa5knIS[*V0Ob;A'e[dr*9tK!HU.tO*R,\ffQoF"1k\LT/_E:]qL/$MhEq0]dJd#.pFkRdE_N8N
%l/NCG_lr4_ZLq)W)r_@e+t7'lM5cL0?%C/^n6s00@K>qknK\3>%rK502UG"S#2.hL#.\^1$<AEG_AWirmA.=)=SqP;'U).]Y(f;8
%^h$]?9[GGnMJ_Ks#(^7OP".%8M$B<(eg5Y9kX"`!*#N#_GTI5%7\D<LJ_WD/fcB[5MAQ)3i1K[Tr<?T[dc0e6DEb6L]mTes5/$qO
%4ML5>bWDHU_i(,ff9)mq<k&SkkfYocj_\G*Lm8,k<(Y1J.4GXE98aqd0Ns,o3<a[2asY&:W4YBY)m#UqJXnpA&FhG7dcM9\"rq,>
%7HVCdN0_,>K;DA+OJ+*$r7sV^-C6VXUZG$b_[4FR=US1J>_0Z+OrC)#q2?(,cZ\UnX/60H)ek#b9?uR8,doB]3\o$K-+X@mkn!fd
%_`\rM09?kQgiMd..Y=E0?<6aVWiYZA7HYl/7I*Zji*PL[+\?Mf2s_Y[_T'C!<65^i4@S^G?qk;]KOi=%7hnECBK*qn*a,o$+C^ak
%hRBkCCJ,Ce0.m=;PXMnppHsT658_+^(!!eZYWq@KWXKlp'PS+8\RK-8BGgB+<emW*eRamh6m8#=*X--8[]9&^L"*cY).Ut42Q,Nf
%MtaLEJP;`i/4"Q*E!D:Rb+IYad^$\d'/:8mS43R'%d?&,H`nB-j%;h(K3+dT\BXRmkMh\*.'5EdWTb(e+=3-H^GUL,JFM`S&[^+%
%S?dIcOWi*k"T]gdI/e(lm7T*TgBO?S$4B)e`f.L)eAC65M-_7\6'<4(5PZmWoB1Fs5<->.]m@AQc`\>\0K-@a2rH$8f<JlT!B_;3
%')EV$>'@E\#3K/1h7m"66*W96mNh%1(.$]1"7s9el9P/n;lTL0gKkr<ENr4ZU(\H,*`2R]O)=aYC7D1T_>=O1VHj>?8I"3u0376a
%SQ7hJ<?7&*%egRA^s^O]JZcq88@1A(KJFb*<m'7^V/R7PU(#8VJOgtGE1`n6eq)`7Pjef@E-DNT=bANO.Sn"0UO1c%j/q'N6fC'!
%R0#[_2BZd86E%VeLc"^(@8$FgkRZ7D?l,5f`C5c'0&WqG$.IXNA92kK0LE1T-?Y6H%]q1:N\D([>M>(eZk::?kUnGe\5I+U)7n]D
%X_>\,;JArqU.l&+ULUaC='m#jo(PW!^?2KXBlK]..rI9*hX]Qa*h8R!^h!T%[#=.$E?s4CYg)56:9(HWOiHf'"V];t7+E*[:q7o7
%nBUk(nd52c0A[]Kci8=hci<e7L]?o6Du]UI3W<Mk1<U+)TDoM@5M"<L?`rd_B;p16MP6:a1f7"]-M+_!AN^,l?A>96dWHE?\J+9Q
%SQO<Z#`B8=BV9QZr1SZA6E)i#YMdf7L+?gA1Z$QjL!P)7\I1=Rh]W'&pmm`-Kp)=,In5T$@\R%.b7FTiV6V3j?nDoA44ZUMs1aN%
%A3#W\/`oM`ibo]W]X0NE\AlB5-mjp!ok&:q1!8B/C7d$t6u1Kh'@8=e]1cM+$L@YVd@1uG1m`nh\ZDd<&_9a&De.->Wkj:Z"d:[&
%;hYnsQid.a-TR:>a<j;1VgW$q+UlGq^cj(,oLoB+57iehH/TW/!F#KJBKpF*$`#u!52%R/Ibp5IWn/XCU"<t!b%>G.Uk*(>&rH\u
%Y/+*H].Qs^HVV2Z%O"P=aj#I>gN>!3W&.Na=BS@(UT6`A6e"*'25crtkZjpSAQf3rUYc,pQE)9*AptN1cmUfOX<J?M(3B(FE(."n
%p*h5fP4@MVE8Ph:s7W2Pq>.O+8LF:n].&r0Ng4DWL<kKM!j5A(4\,Yp_g1#!g.`U%*CN3tf4Mm1?o)4&PE]pRBkd-3!p8R@^_SA?
%S[Hm@kTOf3B_BReS2i;n+mj5Sj9!U[.o:R!Hoja0@_:j9HTjI<Fdrus9Ta*`cGK,,3sV(_4+mJ4Rn6da(qq9rgL](/R01-UC=3-d
%5UImZZDOYS'cbUHjkMbXPEoiJ<C'6-c,>$ck,)kuZu]&fPT7'?G>6[ib/4*J^?5^lQ=1pVFpNn_e4!ehT@<"B?.,BVIeJp[JSC-L
%(=rh'FnEsms)`VP)p\#iN'r)lAYE_:;F-`d#gHZL^@bJ+R'!7EOo^2M($b4>L`FnBV/!@JRZ%H5&(%1*klNC%1;e&l<'.jI_l721
%,*R2I$6n("0S:bpPP)'Z-CY135H9XGm'LVIUlQj>8ti_rD@7`350Hd#9NGoVk1<q>2FLoOFp1/mW(]ana(W?lJ1JW5:1aN'B?Eht
%[JXuf:;:V9]\V1p6DdGQp3&b5`*sp%gVdPJa_TQ/F'+f!eJ?cAR&klpD(JDEAc$'rgse98SYg)qW]h:a^OsCk]/+ItqF$73UJ5AT
%Yl#6t%&.rdV)Xg5Q?!HT]1W:56#l9#AX42Sc&c$&A50Ej)49Bk/<$[Q$E[,ZRot_h`Zc3h+OU[?Y(g1mAhl>Z\*hJWa1HEafl*oe
%>Pf@>Ndo$f?7Ls+dT>bYQH<5s'/=o%-la^A7/gP?=0c=+G$ObGoFJ>A?nWe\H14S+AO$5)HXRfCWmRIYZ2miY>)%gIGFft`Wnr*Q
%,eJs#DOJ+'<+`kg\5Ne`:;@%Q4I;b-J!iW7)',2["\$J4WZ],4/r-4H&jmMu31k2rPsJ@K)"*,GknWVs]<eB.+%)TeG]\%1<?NGL
%#3.[@&46&G2U'X9acMN1Jm^Yj>t8+Wr\ug'!Z'F3XPqI-6+AVDMeW@;+QEIsr[$1nL/NIu/$lK?PEs@e%E^Co<RB<g[KI(nWH]9G
%*(4mN3)6kNp8_b1:,d["nVL;'<(K@'9<31.RrsC=[5ZV/jsakjrY]lHMTo_-rMR)oU!@NMM2Gn;1fG#Z5B,."nM=ci*hp0<GLbc2
%Ap!1Q]m'^P&ecROD;JP/`lm'D+)W_rG>]S>ag6&OKt1r!+h1_BeZf?14\2C$%^d!mPM$YLCEC__=CW=De=Q60f^+VBAPL)RB`KMG
%D];@$nrtO)UJ.;ZRNdRJMNI`*Y%Y&eoXFp((.B,O)L<maK(M&!Vd?TZRNIS@XF%s"9N5W[pteg-M)KXCCf[N)g^P^4gat+6WGsf"
%1'XXa"Z&;0)9?B(F]H*uV+bf-;Cij^G!j?q4p6JV6f*7K,=Dg';)@ETdj=>q^-(&9B(6Adi8IR%.t42>k5BNUL+r.D*IU3lMRk`@
%6$sU;^)LGVP;Ae;HstEbaYJq0Ler7/C_AZ)TbPGV'uAD1Rca!,!@UBImGbuLPrGh+MCp)UgXT_5d)*okhhu?SV^4iFhi!5^kS75e
%;O'U1JAeOS27?FZ@lYf&P>Q2B!>*;u0LqC6NfBG*'.OX)6_^bo/U'-;p(P!4)b;#f"Vm[,:'TNd%kgH]!k":>Gk@(Vb9i]HF'5>4
%Aj3e,,'>7p">q7)nC#fA5bqf0,?7VAU/ki\<2<u+bY'D=C/g;L0<XDjnF,!BYmQs=2/s)%hB>1!N"H::9rDQZ:BUF`NN`<&XfCh1
%A4EMI9KRk7;p:0_nDf8q`l8,uY>N0G35#88]eS\8;=/O#O.D,-R6'YTj"rAEL7oU4W^Jq#5o]4D]R#TTQu<'VUlm`EX_NP2V\5ae
%S0s20K+:['5a>'HGQa]a"d)l8L,N%4T?he,j*O"K3V!'bs6Q:D4XOta%0'g[.A0iVH?#`&TeO(MaINeuC4UKM/Ha$a[^SGpj"n0W
%Ublm&$])I1Y!06PhVc(ZHmpL-++s14?5PTe[6:N'jKu>sWXKuBi=VplRYAk0l=hgjj?rgP&/[5)OQ0hUS]1CY9G+^r;8s5](u,Z_
%`f/o\0uF-]8DP^.ZY='FnPlfJh;AObHq5um>L!.Q'MU+-L1]EQ7XP@DU[)p4oBK8hErs+XBD_g3E"`#$]D969j%,lGdZ/i()E2.)
%_0mG]EU=_$n<CZh=`E?Y$tp-rK@`&SqkM2`IOT=:2ur0\WW&a8q>Eb-m'$-I&>101:/CEls,[dgb`J>Y8bVsi:2Z@?!tg68X4/*o
%GEZ`n<mVN%.eY?5XCEL<r]<(?%;juC;`ZI1*UjKae#5TN)H`YB@m!N\3+tALT](a(-j[m9-6TS!/_u_Si#UMUW+N>SU)>goej0Z^
%nK!9p(MM!t"$,]L%Qb'S8_C_jMKA=uiHGL@(tJ#]h^S?)]gjHZ@:N\Ye"2(rOH/7-3W\]J*FT67V673".3'=P/*Y8>FQ[-Xh+lcb
%G_#Y1ic&3f4F/!lS+YcsCE,hZ&QcIcca"_pZFap)$mD0<FR'.f^iij&M'7>0Hm)^ODM#6k%t-<31IDVb(Q4/bV)T_U6O"MKGdRU#
%1l2u59pKg=b-`M=(:g<#lh2#F?<8YpOq`m,d4"T#kuN%)V8\.E)o3d^5-=/"LcN5De=W6Qoq90BjHNeUH)uC6C)uU^Eu'6*k!G@c
%ToN";%Lt)aG_^^fD4m!k^rBtJ**c/lp3rTqMuiM[7-sp]r=.77<jkU2;-M7h2\qcB939NhN>JH_DRZnsg-b<!JqpH/CifY$J=%-.
%HlGV=l3eQZm&8KDFZgb"X\P?#\8bR@0^4?Vf+jtKb.WQ`fT,dS),cUXfKHN@"n^HY""?6G;#l>2lo)042V(/efqOI2"(kOSiC7_:
%<^PMre>3l&"E.1d)7Vl8\l+R/f;o6?',F540XceVXm!QfrN'MdS6Ueo/0"T/X!oKXbXOu1$dc_TI8+pq(3N2jp]-FS9>u62[Y=)/
%q'n:2;:(bC_o$-(f"HUAmLE<@YR4HTpu<nb7&r?nLE3&2c%YF5Fo\c@.cQ&&b/XOtcf!:S:QRLa,$\hYPA[SlGT0CG9hD"2\bWJ]
%+4Z;a+1O&t+WL3ISjP;C@q3[]QpGE!g/DAZ-76`#`+o+:>.gV(I"ja<@*:V:]IU1A%iDApp4Kdm)crcpN@*@"q\?QU[/G(\6f6kT
%fLg%!cqRN"6q;1mS/p\,7Yl!OaG?.$Vm0fA&[]57/I%qkf.6[IHhOl#Nmm%!'S#T97/?2Z.Cup6"6d*_hH@@c,;9F#DsSl4O%:JG
%.GNkc(65'ucJ7.IG2W;N'Ijj,HM)tPPp,hO#R/L!3]6=f;ZTag)NSN@gXuWu^qLtH!8ENg#!<u#<IhKp7A^G';@amQ0IsMtYUq'>
%2%Y&8hA*Y0pm>OnE*N](,m]N91d4InEP0:6]Qm/5;]7B=)sR6u'-pR;cWd?I1Z3Y:!^)>%d(HWOUQSMks3-u+nF/4UKrAb!"o1pM
%aH##GRjgluO_s'SZ]/ZLfh^@4qjU&p*#.dK>;9)$_*l5"e5?`2,e4l=:ulkK,$7JlI)_+i&YR)S)65^DZ;um2Vi\9bh52SLAagu=
%q3g&AP]d6<8WhLqXa/f/V0cmsXQ\]?"%HQ$OtbYFn3HIGUH2<IcIL,/HiQ#uo4gEFR!CZfl-I]3Z\sR#5/3@(e*o=DI4!O]e!Vk(
%XY1s<3W$Eb0LPW^31`3-5Yf2t=:O1Be[$1!qWg$5h)bpY[uODI'C7"%2e(PRb@gL#cG&7"k&tB?W2TeSr*$%P^jBnY.Kbo3/!#jM
%'T+BCDERVc!9ZuTkPo#l#Q*<OTJfU'2h6NElQ=1Srt>h!I#j*.mOmM:O`EDb$4!5#C=8;r2;3o3J:#RoDBO:nKP)*Q*#EHhY6/@$
%>6k7JL1F8TF0J)@#"(5&Xt$H"HDAW9c?_>fA-4Fd7#_Vq[A0cc:b`8Y+<G6Pq8<%Ls6LAakE#a%"Go,2+A&X"Kh&$m"HeZem)jB"
%m"1*W\6sh#1+*4^%W5-TknVP5%a\$Z63\TDV$ee_8=Q!@_hc2OY8Ui-8:5k+]B#kjADt%N[(Q#G\!ipc=p[`RZNqq<DMMW@UT!JH
%`i-R0hJd]F]t[s7p^:V#:cabR9lsFIY,G,FMdB>k.0S&g\_RT\f][&cj9N#!IG.hccUff49S3)fPMh^\qa0R>+Nd-OJ<cPtOYIP9
%"TAW$I!C61Di@BH.^=d^PkmBPLkfi.n-oIfJ6me]I4Z49Uc)@u&M39V7hI?MahiL:D81G[g-4)JHnIr_)[+k(7;sAA(4i=7,J@&)
%$Y^u"1F"YT$"lf\e?VO#]>@o-Nc.9?cCH\>i7;#UXg*<Hel^hA21F`@QXar`*^/fefH2c)Ub(.C^d!Q>`u-/f26[ko@#KKPoV`ir
%4aKe_G!/!'.:/,=M<WXLZ2?4fNU2;15V*$8CPLlcePiRBJM:eE&Os0l!EDIM/4NqB"-LK;gZ[hl6<6B:I+l8%5KXp@)6,?PkIH'V
%!s,5]r65ed;'=.;G@((&'B4"5TDI\]3?sn0;VM)C0(4K3#B?XoB5^g(@cEH_b9H7MYd+)kR.k8)TCtPB5a`.:HQ_Bhs"K[JirjVr
%UD@"#nTJp2UCYi&Y.jQlb'_<p+"8jIKZ?,C2"mIa9>(rLglZn$3X[;pKY,k,Z108P4L`Yu$(M=^8$'GFH/#60'oHL'</jTuk;Z][
%kQ&&e"-F-a\+=bq/gIjCN5T7?%1%nrAiqeJn,3uN]iB6TP</u"RZ8S>L8h&O\?:R]GfAK3T[^"mOq>Xub#dO9=fP[DA?:aT]A:P*
%K6LN$YbU=qTh=`8KAShBmb3oTXB3?&iTSRpoW=q28\b8JhA@l6W2jc]T8$%mePQ3H;.F"B?7JNc\%m2+Z/a)U=NZ6IW8E1YlHTeZ
%7*8s_,D5]q&hP3Nbe5tZQrF=qZb6ISM==f1l,21\g#7a4%Z":c;J7@#bUB!K?*CqC\)g719@+4ec..YYQ"VDUTEP!S7iU!0*B/'d
%D,;a9B_6'LX36_=9>hb3YUXOGH,;hO`modD"d-V[HK*#r`Sh7o%6*qU]+<P;>FqDZ+"A*gRJR1n&.[Y%ZUD\!"9,5s>EJS"lf?83
%p>t487IJh0qGs?gWj>C,0p0GD'@<j8\Tdg>8_&Cf^=o`P0/cJG@MTX[(*VceH\a7R%6C&@9T$*s)-heo94FY]%<1E/Wn6eG'h1WY
%GL6seSO6']G[Pa;;&7I`hIL>;K3oAH2:h3$&Nr'aUj:f&ps?I`D54X;,KaHEaJgKHdAR(7]p1b(;6<qm%eMS=Q*=5MfiO9K&gQ*A
%eRq>`;_ZHP?b4o@R;m7(;8Y;=]Znr-0HuMTZtF;G'mVK.SmhJ6ej:I%4ss\%fc(VUjpjtcbu6>m<KojSRW^fd0N!a\h3iZ]<,r%F
%\WcBuC%f*fXGZ0!9HFWWg>`_]8TUAFi'hB3a8t.bjod?AON^9=rP9`rfH&'R`4\)U"i;pij6$C`4pk4QCH7Z-CgYj#e/459*&G%4
%C?_7_Nj#OeC-DVEC/?Y>MbbQC4nE12Ypbt(7j+oZrIO7D/7&_;gm(>17OG1G]_P6h.$\_h=AMGRV@pGC"DfF4Z1^+q6G9dKcT#1g
%7of2:'?kd4B'dN-J#@khI9S&H`i[^_R"VaN)rQJbB=`iI%6t+_;tLq0M%o-kOYdr-Fi)X)CARe3mrRMnDIq<66\0WL%T#R3E8a2:
%6l.]^;Xu8/TdPFkD^Cr,cGOf+Fp+2;#3-O(c`:$i2.4"0J%63gH#)\HYSRBH!R"Y_!C5]76p3rGg!\Qk]-P3Z]G7EUR<k6AD:)g[
%=@RC9J4Rfu2<0I\)*/C(YSdtaOM21r;>eYt-HIa5I&nT[p4a(7gi=C&SL%&OcSm+$Xm9#C:NQ*[=Z<22N+<Sf8Fi]cH;l4E=tS<<
%%o#9Oq-cu^bjt,_JJ3bIo,3Km)NJsCD$?bL&%du<Y_-c0)-0?%Vj%W="Ho]011]=I@\s'9`dP.poSNl[8H$=Zj(J'ZH=4kuCJAiV
%ot).]HpZ<GW3KS3]XnP>k)S.PXO]!&806/*eY-ijjWr!J(ke;VMH7nY&e6FfLVJ!Uob7(U_&GI_Uf;c`b#`q?c)9e=Z/ZeJOYXC1
%RNuTc-#GtG9d&)eLougWE-WQIiAEJ$WWa6,T6DIOo4l^W+Ar9\%(7*P[4bB.G;kc]KX)Opi(\D:+$N$E@6\2bZkfZ%`cXp8)mC%g
%W>HF%P^oV_1*%+U:@8'?Ujc\n2)^'6jl.pO)5AXjVnsbEg_]OiNsYh]A1qUM]=_1k"h",@%[4(n&\TKK:cZ[V'Im#Nq2>Pb8H$>5
%:76k9Y'OKU3K=qU,Mc2U'?Wej+>#^C[&&J^oC*lhlmcXi0Bgl+,]2Qt&-'2mQ59$"FO\tODk'@r/#edc)uu'G-#'<<S\eEJ7AQ9D
%Vps_+)$hoQTC)Vg*`$]#4k?=AV@K1G%7HR!%9/@g#h98e/Y*E"/G/N8SI?Xfd.:/a<::q\XEQUFGcg:-eYehVPgrN\W3O5'8?*3:
%n/mCbr6(c@?_<eaXIJLeq(/(Mkk"Z5F2'sPrlh#@a39"4&_n0N_P7kVi5YV8:^#.4k,2B!rh+)eJ-J4s;uAef2/q0$4k]Pn8^3''
%Z0+e#93M8R5ib2M<LP5(`KIfBgr#6T&pVC#oN:Bg.A_hEFI<\rdVXaONq9[d*o*b?&F9kr7do0"?\Y/r>7"#D"Y#"n0H=-dKkp;H
%9/p_SpuW5?GpW+sM`>Q]>9g-sCFACCBF%nBn?r>tHb0NrgO]ZJ<Hn?>i7c78<5!=Xh+neuC0q_Br7NE&m5k2`"oW;qGaKOFA+2mt
%`McGd]R;>77t^#(rCC^im*\]!F;Bm`&@u490l&@Fd#!2WoH5,4fcX^n:6md@=&X6i^pVZf,U>a#[0@/;11>V"arJrs)P9tfO'!(+
%U`AZ;90nKR,hauoW)o@h`$%.B%'J[;g\>H>=tiWELZNGF@fTG@V[[:eq?k6WH45@^O*]k,&5!:X%m/)+CLXCg,eEp9/Kq;$<RbHd
%BE79hd>YR>!MY&&Kf#BgQ6"rfL28o$C`T[(5P-0:H@/':.#8_K*]mQ%>MliC+$N:XVg"cX^YB\V`=Q^8+O=-^<hS7LCUhT0H='5A
%`1bV?_,c]QF#hU?ZRk2s75dlfBV(4!l?@_7.J0__=(QGuLFW![,7$[5?F?A"G!5MH+nZN#fTnEqT+t>.fqn,c"XOt2HrAip;-s5Z
%8*IPj.kfMdKm)/eiD:etHADE%HkiT,3%@!VcFoWYnQHhUfS?<D/<YohC\P=!2Y84c#^V;-,b>%Ka>r+sJI18DQX\lto/Wn0in#fR
%,7$-WZDb=GkmaVa=@K-7EYa8Tcu'%iaJs^M6B@bdVa/2*"cHh[T_=qP4d@G70ofXuW[+WmAWjFP"L`*D*cV.IcGF`O([3)%-QEI9
%Z)X6I44nG2o1`1Xe8UZZGaj4`Cb%%1V%%3"XG4BPbG=n?_tSc8?R.-f2cc06]DC%O,rOkj+R0>W0`9!X.B4Wn[3_]n]81at,8'Ye
%@HqrE1cfZ*jEI`N`DLpJH58nJB9f4`6&Gj"%F-cCkTI9,o,JFpG1&1jWdFdi8+N0>%n>r-MSi4:aNqB`EJ^GW9Z,i$7W':B@fTJL
%Hh"("ej3_`TCrY!r]FGsC0@4:X<Tb4Z%pG*2'@<j91n$se51Cb=:l*??;XXD4[;5n%uJ6[_a0.VboMKmb4@J.:fLcSNfd:X<(Nu&
%8QlWT(qeNCceeBhYrD=`WD"tMLEHBW#NTHj,=hq_cfkUreTX56-[_!?A^Uo]eesd@Ei>uX[!"V.Nr`6)$9"[elR(lA=Y=i!.3=O=
%1*tSE<RLh!\A]EEg/Gqk^_6QGdOId467t6Aprfp^eW'ek84i/m:?sWA!0Hec!o3CuF/U>l2s\2>[NF=8f48EeIs:Dj)MO,3Ha0a%
%M!#4(,VaolI[IlRQW5@/lq5IiXUY3%egn2D#i;7n^cMp6B%%*<)5\$>Pbcc[KlsG$0\0Z6lZ:eAA]DEjmpMIiqo1DrCM2!aEboaI
%W8]*pAd$c55XL3JnOfm(CZ*5S?Il5=q?b?TAeS>A[,q:DSm@N\,\0suqkMt96,FO5au,RA.F$4#PH/Vcb-s)Q=hG.c__f(')YL2P
%XfVd@1DL9$aB-;U9`o1:."nhVelW#F,<)fa`VMWSX9eFe([N0epTe9aKWR!DLt8ZLW-uRefr.1t,j?g#IHur;9G$BIZY7@uRF(])
%4uf3AgCmZaK''Nlgp+oEBiPejp\NHNJ#K=:#<*%i&lnq@?LSop?!j>Kmq4&k:Fk^AH;oLdi5ZU4k5:Um6U\W6#JS.G]EkhBn2]kc
%N>>BN(@aEOjj>_P9WJS90!T6,<h;10m.a0>Ba!Acijk[!g@Ms$*OSk(kQj7]]TXLa39ZBidddf6;X&1EKZg(t=eZ4U%8GCiR]kQ.
%pl'-FC&1qH;`C`oScS7)]=,-7$_,p[2C]%69/F-o=nEaY".&aQZ@7YGW1Ze6\<$KSokpN4^J.0,KcBNnOfa*a4gXh'pl!CA*U$[N
%"N.\;`E.A510ZusFJ_&!.:uLMmFDP>W.oECBupRM9K;`$3?3>ZIkMdc2:+U*qRZDI0;O'T3$Xb]JX6CUh\]d*&g!8CAS5X1^jK"3
%1r$iUM"J:FL'kB]m*tq>NBh,5&Q%4F>2+f+Q-bT8UY62$C7_DMOnq");cUVRTu&0V>n@fZ[\!4QXjVS=.lC.dF;$gQ9;GOAp#nqF
%Jn!e!-.S)OU;]LKO+gVVG2*XgnVU@>;o:E-c=BJ+l!NX9E,i\IS,eA1%JKlXH$C7Dhc4<2_H?l$o:j^sYAURb-1p6'C*.+AG879^
%lim_1Okq&RHU?$YF_i"M2&1`j]DKfefbfacd)5E0+\l#YD)5.fOYV`)\dVBA*mH)0a+`#=SC-1:+f[+I,<LRk#Ja@Kd1!e6iJNl+
%3(d]lGR)%DheLkUV,Q:j'\3rUpZs,B'Fs`/&e.9M%1M6]oW<UTGC),gA:YY3C=0_hG0qR@B^lCG"1d#.bQ3s@[9_AJGA`$J1#tJ5
%:Dlao^qCq>\(O'(.$tU[*a0gBY,$MUBsDJ9E)RaBQ@*+Naote+h17q>?4kBr-Oo3$S1cB?)aOUF@L1hY`SH/6K@pfT89p4Llu<eO
%>t>EAg^sX&.%:nr2>OhDDQc"+prq[oo.:X\Lk[:mT'i4.fd>/`$A/opr(PWNn2+E_,XYV.fkrfT[!VAXa3X\c"8]?EfY5.O4r=KW
%/Es)(f2sBhA)nk[@2.'E>n/!'>UPT4XTu"rMCcbHi\=34e@j83mQdF9lqiA"HigPrN1`#cm>D)5Z.':Hls`2@o`$V;N6MR-<Kh*l
%'<]b.peQf%3\)gI&7nIHcc?G1"49Nmf6,dhOR03W=)h:6>3Z?]5S-CG=Bc)KRb\`>.G:kHGhZC%>,_W=@j80q>n<9.D*S,<Rl(2s
%:GBFuZSVb=;L4[HQ>1g'7UXun^6&2J>;b8fYZ1H<%J@psP`nMoeok"2p$F^kCQZ3cE<5>#<mm_>Ifu8a_[0>MJ<l9=T-?RWJGF/6
%eJhCN0pcUdr"uNTgQ0D00V=j4N)t=Q6JlUsH%P^9%t/Y3:f)5b:[QB^?/0[,K3d&r.iV&H.sauhpWH3Cj5f+0OId]L!`HAKO#NSu
%Jp*6;OG+MYCX.Q+JGm@f3p`&,c88"[BFH=V8/J!Y[cSdg##M\^GN=M.%ifA<\ZX]p;?>7TH"gYk\^oc(g0Q5]clC+c>MF:<3u"I?
%F*<U`7uh<HKqGtGFVLfe3Z!kF+G%JBP/d"ApqG=#9P!I$%'..5,<qAr$=`2`n];FeQa`./#V+',Pa<pI8i>66OWlYkTH!=Ao4r&&
%0I<V:H^]7iDqPp:DQ)/ZHpZL/[#Q+OG#%A73%.8j]S1+3o9[!\X^b/I%Q4pnS<rPpL%GtG^6$@]A\0L9'-2cMN`LX`]\iK9pQ_o@
%22m3*%DR^HY?&kq3\R722=9UHYT)Chkb\!Zea35q\WHZ=a(gP/!?;q-h%G2jNgr]oi(FOYi'%C?QXq+9_K$nls&LXf?o3R\?m3]6
%.6ZtKVTL_!A46^:6s?oC[AU0BSBS*b(1W+XR[E=nd?[K<@u5<mnR`7sCh1!h_i&nh(%k-cd);qj\X])V4<n-=2U?Lkrr[j.%8FJ0
%g<Z1uH`#==f/:^i;>hJc=p72(HPia:)A5Ok?1`9;-A9?$Ki$&7A$lJC`A$KA>d\6a(8mLL[]*p]K2,gE+R(3gG!m7R+O$&7q*'Ql
%=H]``6D9ljL*fD/-ZGasdkV!L_4L0U550,YeI/H0A/;K0E@K]c9g]AM">S?=Puci,=>7hP3[Ade$qFH,[rbG87<gjcnh=#2Ta!#f
%PSgJG+q"QRPlF4_[Q1ECCD2#4X76m^MuoYmCkj7p%iaV\>'ImC'Z*(QI-hH#/pcqP"4MM]<uj`,mu6p9lVg>gPdA,Dbg6Mt%BM$o
%FoVXe&9bu2+]@(-Jp'%Lr8*<$P&aug-p@fXDpEcO44h&RSSd+:TTAQpaG7\Y(::q=ijUU`aBu9^,r>C7'@FDIiNg7L2PS`,>X02.
%oZ%i4%3!qX)tB=g9O>B4+1Ps2o@T0T_N[\?<@Y<nIk3ZkE<OL3s&dgD'6WpK+ZhZ01KL!u!`WJ=S(U+rF0N53Yd,[,&<B-OUr_BY
%(Z5bV)De`AWTK+&@;W?4bF:n4?@[0CK>>/LE#DkM0.J>>FPI''RC"?<6jK%9RKiN'$K9k4=M#RpZ5]%?l`^8DmDsg(Dm-^2NpH-Z
%c"jju6"Q<;62&PPh8?]?'K*-OU?6\aW*`+^Y/\IfWbhC28XQY4Fq!fmiD='$P3-\^83e]'/-?)V05GlVFK[Vi%D:PXV)Mm:0kH4L
%n76TtT[Xo&qpQH7(a=#=WErdnRh$62UAG@H/Ra]2IRS`m#JFDXNeY=CD/:gGq?=J&B,(aQ!aYY1kRoq'HrB0+m8($`s&icsp7q$D
%7>VcDXL[l>DQ`;YE9HEr4Nu\clYnqC"N]mnlb]NR>*'NJ-<0Vj#n]7BZ1[Gh&^[,QFRM=2>i_CY/oYHALo-"HP'Ce/^*Ci]JM8RR
%'pYM,6cOq[D6t3+>DX!`$e-RjWAj@iDSs-/ZD*@%mU9C(QN@L8"b/Gh,.\N:AEn\=b#o]HL#HjTL2Y%i-M0FR6E^!+iC_i@XQUOA
%&!CUX)2P#tVFWWnC[<1tW0G-35`.;(h\%EaQE"O^iai]s?CjHif-i+9CsbpPVeg'*^gsc(NB\$bMc>6sd;fNql[E6\;9C:<rQ&.o
%b,hp9Lo1!=f/1a_..)EN,UFuJ0\;DbV\P/BE&YlRO/[_X4+m+<&=o)+XS-N^'>b)S91oZ9Z?U*#qfJ,[pjKY:OPGiZ).#0`,iI?f
%h$2aA?jorIZ0r:^)W>If"tR:\H/5U&%VZ)bSFh?oJE6]@L.<&;"E4#/3Y7JF:3=4letDO,4j$eSb1Z`@Eeo`uXBFFW.i$NC-8l<2
%]bMh<]<C0=?@e_K^"-?k+4$qM:,9_G@Lt%(Q/raG*V%!_ie1MdgP5UB9R!0Gjfg.*$gETWR)JIs:WG$J]`l&E)N4g1'_N.fY_s_%
%OD%M9@V&(k^j*@(S8GeG8Lr!)1(*oVT2pthM+o,?Bt\K#6$KD@a@?8JQ233;k<IKP]o"J$]rmCWM]Jml18;@*<eo:Y[iXtA"ueL4
%l`04]G?<F[R]0\lZ?5^(C6*]>4]G*W6):O;CqshC$6%V7ld5pp!e<7,3\L*1"'W`MQ%p]a6pUWh,XH[PhCmeX_f!8EFjnqod*8mu
%='$1j?m7IkBF1MM*XE!b4qF2X]uWUmTrU30;V/U=XfB@!0=urQEG[=f<'g`-3\DQ&BHNsHc\5D?ZLH5M(26hrk!fV/M1KZCD%S;G
%?YP)_A>"#V9\;q3i!U?09jmu9EXa4'e\$s%Y*SB5g8Z_"cEKX_Nh*W5Il#`nYerrV.sdq_1[U@LR8s%GU4`urX*Au':;Rr6N`(Ma
%VBm`E(IN%H<3R'D.8%-0$)/Q5KMF7G&u+c^\g4ZIhBKRYV5S^,:C/JL1W]f(6<'gM?1%FFGRbh.=`?\*7bRo/<Y`u!E/+mR:"tI9
%7qRXf@R2[jO/^,i*R6`XqRD'=psP=-(cN])/+25!lOU)km`2;Si'u!"gF*?,c5u!T2)[W^*O==r9$&hEL<-LE7'UWt)+>F0N=LML
%LRCGaY,'PSD'"*WlWf5/ajn]F+s;/V02[F@/t#?t(fgSF?=/GL&_U39*F#nr)YX`L/Vg]rjLLp`8)/GbWScMe^g;Kj=me)`O.5o?
%,,u5UF:/mAOW+gaCf[UmX=k6_TMo$T*WkSB[0lDFGP@!#9^L?LBn/>ngQ\1b;.=le_1u'O6_4==7LCft.;2=rd'\/d<FmV?a0gA>
%9fmNM-/hI&bG9^Qk5=Bm.`K\Pfl817NlBhii#sLS><>anY(>r-SP"$Co=OXX't\0[N;`!i<Il5b]QJ$"RWh$k<GpEmgEb%0,m+`2
%cfu.F?:gZ]i6iX^%,$n9l<nF2U6f2]=9f5ABH/faTJuNK`P#s+R:soipYfUX;11#XW2dO%et!)N\$O&t;CsSu0TXl4G]JBW+uPNO
%s,p8S?Tk8"cB-=`%dM2"KO*hf6srV%d\J,KS'?\YVAmBh!/RE/DBd)I=3Zm)l$,($?erjJIq8L]7Y!6uV^$0"!,1Qp5Uo;oo+^K3
%1ZRF.l49a',C>qI4f6S`.9'a`bo9Sp,Vm_U$<9T\R.4g.[NV@Za,*P8SGf:?Dre,@VF8Je2hJRg/*P^&9cQ9L@_-5H&*]>2!p)8/
%:-5,UL6pq3`2N`gb2j-O]pV6EAfA8aU@D,l8ein1%b_VmWe_.X"3Rk()KBE=o!_fBrM!V"M],(EZMJ9dM;r,1)Pa@LI.cQ,qV*Ab
%ErY_)YCHG=^V0O1]>+:/Iqnt_r70W^l2U$-3IQ$TIJi95pO5lNf7.iIIeB30eZ]#BYHP_?hf$7-`@h_;ci<P$hgb5nhgYOmDnl,A
%B7KIK5CNK;hqWYYLHcmmnBHG&s18++\)7,J5QCNG2g9cJ[m0jN,e3*OiTEH*ofrB1ci2r(!.K,1Ac~>
%AI9_PrivateDataEnd
