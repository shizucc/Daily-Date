%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1606.m00.i125.n025.S.c12.322117805 Vector mushrooms illustration for menus and recipes.eps
%%Creator: Adobe Illustrator(R) 18.1
%%For:  
%%CreationDate: 6/28/2016
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.1.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.1.1 x446 R agm 4.7721 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c014 79.156821, 2014/08/29-03:07:50        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">1605.m00.i25.n033.P.c12.186264188 Cartoon sun. Vector summer cartoon smiley sun</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2016-06-28T11:30:36+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-06-28T11:30:36+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-06-28T11:30:36+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A59irsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiq6KN&#xA;pHCL1PfITyCLkafTSynbkjPqdug/ePv4kgDMU55O2h2fiA33QdyqQiqvzHenYZKOc9WvN2fAj07F&#xA;YpDAEGoPQ5lA26aUSDRbwodiqJ03T7nUb+3sbYVnuHEaV6AnufYdTlOozxxQM5fTEM8cDKQA5l7B&#xA;cflF5R0vToPrU1xd3TrWScOI4w3gFANPapzke0e382MAwq5eWw/b8nb6bs6EyQeiSp+UFvqNyv6M&#xA;upobWv7ySdFdaV/YcGP9Rx0ftNnmKljBPeDQ+PNOfsuEeUv0sqtvyR8lxQBbq7nkkAq7l6b/ACAA&#xA;zJl2rl5yyRj7o/raRpI9Ik/FIr/8ndA+sstnqM6p+z6nFgf9kFqPuOYB9qskZGNQkOh3H624dlxI&#xA;vcfJTufyYs20q6ltbidb6FC8HqPFJFIVFePwqrCvT2zK0ntDmlK8gh4f9G/1n7mGbs+AHpJvzeT5&#xA;2Dp3Yq7FWSeSPIerebb2SGzZILa34m6upNwgetAFG7MaGg+8jKsuUQDKMLe6eV/ye8haPEj3lq2r&#xA;Xw+1Ld0aOtKHjCCEp/rBj75hy1JLb4aY6r5B/L+8jMcuh2cEf/FKCBv+Ci4NlR1BG9sxjeRef/yo&#xA;t9Lt7jVNDnZ7GAc5rWc/Gq9yj7cgPA7+5y3BrhKXCfmjJgoWHmebFxnYq7FXYq7FWSWeiWFnB6uq&#xA;gPcuvwWjl0VSegZkoeW1T/KOvtiZNQbqLm4tNtckt8wafDZahxgFLeZFliUmpAaoIqf8oHLsM+KN&#xA;uPmx8MqS3LWp2KuxV2KuxV2KoeO8Xk1fs1+EjMDJKzb0WmhwQAXfXVPVTkG+1Ge6DJv8I7g4oJdp&#xA;svOJx/KxI+R3zL052p0uuj6ge9GZe4LsVV7G+urG7iu7WQxXELco3FDQ/I5VnwQywMJi4y5s4TMS&#xA;COYeq+UPzQgvpPq2qmOzuf2Ja0hf2+KvE/M7/hnB9p+zuTT+vBc4d3Mj9Y+DvNN2hHJtOoy+z9jO&#xA;H1L1IiyShohQ/ARwAOw6bZoOHPP00a91BzwIDcly+q0qodqsFY+Hxsrf8DwOZWLsmZ+s19rCWoiO&#xA;W6B1XULXTLNr28kEUSqCORoan4vfopC0A3bMwdixn6YcXEWv85w7mqYZe/m/p4tZVsbadrkgiMyh&#xA;FSvYtxZjT2pmdg9ksvGOOceDrV39zjZO1cdemJt5ZneOhdirsVZJ5P8APWq+WGmW0VZILggyRv8A&#xA;zLsGBG/TMbUaYZK3ohtxZeFnWmfm/f6pfwWK+jayXDCNJJlk9Pm2yqSruRU7VpTxzAnoZAXduTHP&#xA;ElE+c/PHmLyzNFa3XovdzIZFEKNwC147vJ326AH37ZXp9IMm/JlkzcLznzD578w67GYLq4K2hNTA&#xA;lFU03HLiADT5ZssOkhj3HNxcmYy26MezKaXYq7FXYqn3lSxt2km1G5bjFZ8RH8Ib944NH4kjl6YH&#xA;Lr1plGonQrvcjT4+I33JXrGq6hPHFeTpctxkjhlUSlkUMZGhhAIPx8E+Lep9t8w6c26TzzBD6+gW&#xA;V70a3dYHHL1DWaP1d3AUGhQkUHfL9MdyHH1Y5FjOZjhOxV2KuxV2KuxVvRPKN5rerR6dYzBbi5Ll&#xA;FcfDREaQ1IPgvhmJkw1Zdni1o5EJ3P8AlJ5nt5OD3FvyGxRvUH4FcxeMOYMwS/Ufy31uxs5bqeaJ&#xA;oogGfgSepA2G3j4ZKB4jQRLNECyUqs7Q26sC3IsR06bZm4sZjzdXqs4mRXRE5c4rsVdirsVZV+Xf&#xA;mGTTNcitJWJsL9hBPH1AZ/hVgPGtB/tDNd2lphPGZfxR+7q5OlymMq6F7lbxVKiQ1J5Bj32TifvY&#xA;Mc5oOzJeL/mpr81/5iksVf8A0SxooVfstIRyZqfNqe2/jnR9mYBGHH/FL7vxu63VZLlXQMLzZuK7&#xA;FXYq7FXYqidNeyj1C3e+9U2aSK04tyFl4g1PAtsG98BV7N+c19oeseSNJ1y2sG53LobW6aSkkayo&#xA;WdXUclP92FO/X8cHTnhyGLdMXEG3iGZ7S7FXYq7FXYqnUF9cR+VpbS3oJLi5MavWhVpfRVW27Cm+&#xA;Yeo+oOdpvpKRi9ltrjlYXEtsszOJXEa19KKWqlpeSs0Z6H7I2470ykNp5srsuF95f1G2tVb6tAnK&#xA;OaYVJSBRLE440UNJCKffksRqa5xxY/Ni2bB1jsVdirsVdirsVekfkPZxzeb7idwD9Ws5GT/Wd0Sv&#xA;/AlsqzHZnj5vcrnS4JhQqrL/ACOAw/HMMxbwUquNA03jJDLaoUmRo3FNijgqw+kHIgUWRkSHzPre&#xA;nHTdYvdPJLfVJ5IVZhQsqMQrU/yhvmyibFuIRSCwodirsVdiqraStDdQyoCWjdXUDrVSCKZGYsEJ&#xA;BovpBZZAoIFCDWp9wf8AmrOJt3b5980Bx5k1UPWv1ufr4eoafhnYaT+6j/VH3Ony/WfelmZDW7FX&#xA;Yq7FXYq7FXsmrRc/yCsnkFXjWNkr13uuIpX/ACTmv/y/47nI/geN5sHHdirsVdirsVRdjdpFHLBK&#xA;SsUxQl1UM6sjVBWpFPmDXvlWXHxN2HLwnfkml35N8zcGtZbWYQoqWslnM9ePE82lSQE8mMlSGZQA&#xA;DSlKZgmQc4RtSXW/qOlz6dYN8FynpTmnFfTBFO/xNxUKSdqdOtcycWEg2XGz5wRQSXMpxHYq7FXY&#xA;q7FXYqy78rvNEHl3zXFc3TcbK6ja2uX7KrkMrH5Oor7VyvJGwygaL6Mi1jT5YxJHKroRUEEEUO/j&#xA;mHxByKKUa55o0qzgeeaZQkKkkA1p8yK0yJlZoMhHqXzTrmpNqesXuoEEfWppJVU9QrMSq/QNs2ER&#xA;QpxCbKCySHYq7FXYqiNOiM2oWsQ6yTRqP9kwGV5ZVEnuDKAsgPolrteHwj4j92cTxO7EHiP5hWwh&#xA;80XMikFLhUlWn+rwav8AskJzqey8nFgHls6vVxrIfNjmbFxnYq7FXYq7FU18raDJr/mCy0iOQQm7&#xA;k4tKd+KKC7mnchVNBkMk+GJKYizT3D817C3038tpdOtSq21oltFGlakqssYHb265rMMicwvzcqQq&#xA;BfPWbZxHYq7FXYq7FUZosEc+s2EElPTluIkevSjOAa4Cdkh9T6lYaTfMhnVHcg0cGhoB3Ioc18gC&#xA;5UZEPmHzXam08zarbleIS7m4D/JLkr96kZnwNgOLLmlWSQ7FXYq7FXYq7FXYqmOneYta05PTtLt0&#xA;jAoI2o6CpqeKuGUb+GQlijLmGccko8it1LXtX1MKL25aVF3EYColRXfigVa79aYwxxjyCymZcygM&#xA;mwdirsVdirsVcCVIZTQjcEdQcVTtfOvmhYhEL9igHEVSMmg9ytcwT2bgJvh+9yPzWTvSeaeeeVpZ&#xA;5Gllb7UjksxoKbk75mRiIigKDQSSbKzJIdirsVdirsVVbW7ubS4jubWVobiI8o5UNGUjwIwSiCKK&#xA;QaTPW/N/mTW4Y4dUvnuIYzySPiiLypSpCKoJ9zlWPBCBuIZSySlzKT5cwdirsVdirsVcCQajYjoc&#xA;VT1fPXm0LCv6SkItxxiJCEgUpuStT9OVeDDubPFl3pLPPNcTPPO5kmkJZ3Y1JJ7nLAKayVmFXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYqmtl5a1S6XkE9Nevx1rT5DKJ6iI83Lx6Kct+SY/4FveNfXWtOlP7cr/Njub/AOTj&#xA;3oC/8ratZp6hjEsfcxmpHzGWQ1ET5NGTRTjvzSjL3EdirsVcASaDcnoMVZYv5XecF0+O+ubaOzim&#xA;FYkuJVSRhSv93UsPpGYebXY8Ys8nNw6DLkNRG6VyeUfMKTLCtoZpHNEWFkkJ+hST9+Rx9o4JcpMs&#xA;vZeohzin1t+TX5g3EQkGnCMHcK8iA/ry0akHkJH4frafyshzIHx/Ull1+XfnG1meGXTXLp9oK8bU&#xA;+dGys9o4QaJ3Hkf1Nkezsx3A2PmP1oebyX5kisJr9rTlbW4rcNG6OUHiyqxNMOLX4pmon7Cubs/N&#xA;jFyH3JJmY4TsVdirsVVbazurqT07aF5n/lRSx+mmV5MsIC5EAeaQCeSYy+VPMEcZdrNio7KyMf8A&#xA;gVJOYke1NPI0Jj7WZxS7kqeN43ZJFKOpoysKEEdiDmdGQIscmtrCrsVdirsVZB5N8mah5ov3t7d1&#xA;t7eEBrm6cFggJoAFH2mPhlc8giyjG2WeY/yVu7CwkutLv/r7wrykt2j9NmCglih5NU+C/jlcc4vd&#xA;kcbzPMhrVJba4iVGlieNZBVGZSAw9q9cbVTxV2KuxV2Ksh8naVHd3UlxKPgt+PEHoWav6qZi6mdC&#xA;u9z9BiEpGR6MruNQijjKx/u96V9vbMF26Ak1djQVZuJqD03wWrk1qVdt6Hcg0PX542qXa1ptpqML&#xA;3VmojvYwWkiUUEgG5oP5h+OZWDNRo8nB1elEhxR5/exPM907sVVbS5ktbqG5joZIHWRA245IQwr9&#xA;2QyQEomJ6imeOZhISHQ29K0v80INT4WmuIqKNo3kPOOp2O5+JPv+nOe1fZmWIuJ4wOh5vRaPtTET&#xA;Uh4cj1HJlcWtWtnHSwWODlQgwrVjXp8W7GvzzUDNMcvS7nwBPeR4nN5g1OUkK8nxUFWYqCDTw3/a&#xA;8Mic8+siyGlxjogTe3ZZZWoS3Ejcg1b3p88rb+EAV0Y7qn5qwtY3NnbrNKXVogX4iMg1WteTHj7U&#xA;zf4Oys1jilUftebz9qYKPDEmXwp5rnRPOOxV2Kpx5b0yxvrhhdOW4U4W6mjNXv40Htmv7Q1GTHEc&#xA;A59e5sxxB5s9t7i2tohFBbiKMfsRrxFfl45yeTFOZuRJPm5QNKv1m9mUmC3cgdWVTT6TjDSfFTIs&#xA;Q82TaeYSsrxy35pw9Ng5Xffkykgf6pNfbOg7N0+aEu6DRkI+LFM3jQ7FW0R5HWONS7uQqqoqSTsA&#xA;AMVTO68q+ZrSAT3Wk3cMNCS8kEigAd2qPh+nI8Y708JZV+W3nK00sDSZh6JupwUuSKpycBR6hqCv&#xA;QCu4+XXMfPiJNhtxzAFFn/nLzJN5dsY5bpuUtyxS2giU83YCpPxnZRsCaHrmPDFKTcZxDBPy50+w&#xA;TzXNPr1o1vdkerp1lNGy1aRiSyRsKtwA+Hb37Zk5pER23aYCzu9Q8w32kajpc2n3kTTxSoVEToVo&#xA;abMOQ2KncHMTxK5N4xW+crqFYLqaFXEixOyLIOjBSRUfPNmDYcMiipYUOxV2Ksm8uXIi0mUD7XrE&#xA;kePwLT+OYGr+oO37P+g+9f6slxew2qMvr3EiQxlzxUNIwVan5nMUC3OkaFlmH/KqNcaNWe+RZCPi&#xA;RUFAfAHkK5LhLi/m49zF/Nujy+Vzard3ZaW7cpHGycahRuwPJwQCQPpx4WyGcSQdndsWBHwyJuCM&#xA;i3pBfBBeThAAvqNxA6AV6fRm2xm4h53MAJkDvUcm1uxV2Ksq8o+a2s3TT75uVmx4xSt/uot2P+Qf&#xA;w65pu0+zRkHHD6/v/a7rsvtM4jwT+j7noamjK3Udz40NR/HOVet5hJPN9+bHQ5SrUllHoIR/M1RX&#xA;/gC2bDsvB4mYdw3/AB8XXdq6jw8Eq5y2+fN5bnZvEuxV2KuxV2Kp95Wudau9asrGG7uPSkkX1UWR&#xA;6CIfbNK/yjMfPCHASQzgTbJfzE8tyW1rHd295JJEu09vPNUnwdAxHL3GYuimAapsyh55myaHYq7F&#xA;Wc/lGLGLzBPfXIDPawE26kVId2C8l9wtR9OY+plUW3DGy9iaO51ID1+aRuKrCn2yD/MTWnyzC5uT&#xA;Yi+dPMFxbT65fTWsfpW7Tv6KUKniGoCQaEE9T75s4CgA4cjZe9+eNY0mw1HQtZ1KIGKAyx28pqRF&#xA;LcIjciBXtGd6bZiAE2A3bcyxn8xNTabVNL0yYV1aaeGXT/TqTEWmVQ5dgv2ipAp4YMMZXfRlMxqu&#xA;qB/PPUpLa/stHtZmjgaEz3MakgPycooanUL6Z2y7BAc2rIXlGZDU7FXYq7FUVYXzWrmo5RPTmvy6&#xA;EZVmxcY83I0+c4z5Kmoot0jmB613BGxFf1EHNeYGPN3Mckcg2L6Y8p3B1jyxpepSNSe5t42uKUp6&#xA;oHGSlKftg5YBbqpjhkQ8N/PK2u7j8wIomalraWsKoxNB8RaQ9T1JbAQeQcnBQjZNBjn6Qjgj4wfH&#xA;IRT1CNh8geuW49MTvJc2vHKHzS4kkkk1J3JOZrqiXYq7FXYq7FXpHkDV5dRtH0+Ul7izUNEe7RbL&#xA;/wAL0+7OW7Y0fBPjjyl9/wC16rsbW8UOCXOP3fsSj8ybzlqFvYg7QIZJP9aToD8gtfpzM7Dw1Az7&#xA;z9zhduZ+KcYfzR97Ds3ronYq7FXYq7FV8FxPbyCWCRopB0dGKsK7dRgIB5qyTXFa58t6fesS0pH7&#xA;523Zip4VJO5OYOMCOYgNpNxYxme1OxV2KonT9RvdOuRc2cpimAI5AAgg9QVYEH6RkZREhRZRkQbD&#xA;1v8AKnzf50vtSlk1GF7/AEeQ8Jr4oiei/YqRw5L/ADKK06/OjJGI5c2cCSx383vJf6K1iTWbFa6X&#xA;fyFpAvSKdt2H+q/2l+keFZ4sl7MZxpl35m2cmpfl7bXKNzaBrW42/a5r6X/M2uVYjU2cx6URrOjN&#xA;e/m5pDMOUWk6ZHPK3bnHLKsf/JRgfowiVQK16mJ+c9E1Lzb+Y11YWrJFHYQwxSXEhPFVK+oegry5&#xA;SEAe2GExCO/VBiZFjXnTyHfeWHidp0vLKY8EuUBWj0rxZSTQ7Gm+WY8okxlCmMZawdirsVdirgSD&#xA;UGhHQjEhINPpH8np2fyBpwkfkwafjU78fXfMPJQlQbwSRZYX+fuif6VYa5EQUZPqdwB2YFpIz9IL&#xA;D6BluGXRryDq8iy9rdirsVdirsVdirP/AMpbJvrd/qDCiRxiBT4lzzb7uAzR9tZajGPxd12NjuUp&#xA;fBjfnW4WfzPfOrclDKnyKIqkfeMzezIcOnj+OridpyB1Eq93yCSZnuA7FXYq7FXYq2qszBVBZmNA&#xA;o3JJxVl+vQmz8r2lk+0qoGdfAlgT+LZroS4s1+9uI9LD82LS7FXYq7FXrH5aazez+VNWiiBroUJn&#xA;SGOlZldZHoAVb4qp+OYebF6ufNyMeTblyZzo02n+Z/J9u91H6trfQcbiNzWjKSrjlt9l1ND2pXKy&#xA;DA+5lfEEfaW1nFodtBIPrNrb28Q/eAfGIlBBam1fhrkeLe08PRdcXFjaw3OsOVDTxoWmJpWNOTRL&#xA;U9qyMfpxMtk8O7yH8t21TXfPl3PFyFhctNc6gWrRVbkYviHRubACh6V7ZlZYDhAPNphM8WyWfmF5&#xA;oa9v7rSIATZ2dyyrKzF2doiULCvQHfHDh4d1yZeLZh2ZDS7FXYq7FXYq9R/LL8wdL0vSf0TqTiIR&#xA;OzQsdgVclj8R2rWvWnalcxM2M3Yb8chVFV/Mnz3ouqaFJp1pIsryMjJxIcgqwPIkfCuwI613wYYS&#xA;4rIoJyGPDzsvKczHHdirsVdirsVdir0Tyr5r0DS/LIt2k9O4Us88dCXdydqUFDUAAfjnN6/RZ8ub&#xA;YXE8vc9J2frNPiwiz6hzHeXn91cPc3M1xJ/eTO0j06VY1P686HHARiIjkBTz2SZnIyPMm1PJsHYq&#xA;7FXYq7FU38r6pb6Zqgupl5UQrG23wsSN9/YEZRqYGUaDOBFpj5k8x2uoQNHHHGpIFOCipodqsoAA&#xA;HhmJp8ExMEigGychVMXzZNDsVdirsVTvyj5sv/LOqC9tfiR14TwkkB1rX7x2OQyQ4gyhKiz5/wAz&#xA;dBa2EVgv6PjkLNNaqhRSzGrN8IKrXuFzCniyFy8c8YUn/NC2WyayEw9ICikK5NP5a8d8j4E65MvF&#xA;x3dqFr+ZWmyCCLUB9Zs7eP01tJEqjDjw+MUYNt45LwJgsTlgQVLVPzdEenPY+XdPj0xJK1aNEjCk&#xA;7clWP4Sad+3vl8cJJuRaDkA5PN8yWl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVPdB8i+btej9XStMmuIe054xRtvQ8&#xA;ZJCitSm9DgtIDIh+Rn5h8AxtIV2qVM8dR7bGmPEvCkWs/l3510aA3GoaTNHAN3ljKTKo8WaFpAo+&#xA;eNhaLHcKHYq7FW1VmYKoLMegG5xVogg0OxHUYq2qsxooLHrQb7DFWsVdirsVdirsVdiq6OKWVuES&#xA;NIx6KoJP3DASBzSBavBpt/PII4rd2c1oKEdBXqaZA5YjqyGOR6I2PQfgDzXCoGDceClhVBXjyPBa&#xA;/InKJasdA2jTnqWr7y/PbWn1pJBLEKchxZWFQD0O21aHfJY9SJGuTGeExFpVmS0uxV2Kr/Rm9L1e&#xA;DelWnqUPGvhXpkeON1e6aNWmvlzyrq2v3Pp2kfGBD+/u3BEUY9z3Pgo3zC1/aOLTRuZ37urdg08s&#xA;poPZNJ8reUdH0z6n9Tju2daTzzxqzyHv9qtB4AZwOq7cnlnxXLyrYD8d/N6DF2eIiqDybzn5XbR7&#xA;5prZGOmTkmFt24H/AH2x/wCI16j5HOw7D7XGqx1I/vY8/PzH6fP4Oo1+iOGVj6D+KY4AT0Ff7M3r&#xA;r3Yq7FXYq7FWW/ld5XtfMfm63tLwcrGBGubqPpzVCAEr4M7KD7ZGRpMRb6kh9OCFIoY0jjjUKiqA&#xA;AqgUAAHSmQtspzStT4m2P0YLTSjPKioR1LDYYCUh47+a/wCX+mS2k+s6XCLe9t0Mt1HGAscqDdzx&#xA;2AdR8VR1+eCGTeiiUNreLZkNLsVfSP5YWmg2Pkm0/RRh/SF5Csl3d/CztMd2jZhuOBPEDt88onLo&#xA;3Rj1Rt35Ot9XkJ11LaaIdAFEkh+UjKCn0ZXGx1ZyIPRkWnw6LpdqtvY2cVtbr0SNFRfwpk+MMeFJ&#xA;9atfLmozj67plrdhtmMkSsf9ixFcgZ9zIQan8t+U59CvNOnhQ2c0ZEUbJH+6NKK0bAKVK9slGQCJ&#xA;RJfLGZLjuxV2KuxVPvKuq6bZyzQ37PDFNx43EacypU1+JeS7e+9PDwxdThlKiG/DkEebOLCHyrqs&#xA;i21vrsBaQcRCYJI67gkIjemCSVG3frmunDJEWYuVGcSdiqaxY+UdDlBvdVUSPWSK3itiZKdK/CQB&#xA;7VoMjiE8n0hM5CPNhvmDzTp9zbPZ6VDMsUgCy3Fwyh2UGvFY4/hXp3ZvozYYNKYm5FxcmexQYvma&#xA;47sVRWlWLX+pW1mtR68ioxUVIUn4m+gb5jazUDDhlkP8IJ/V823Bi8SYj3l9C2lxp8NhFYQ26C3j&#xA;QRrCfs8QKUoRnlUtdKR4iLkd783q/wArWw5JVdLb6Np88tpcRabZqTI0Mq87YMxrsgKuK9hGw37H&#xA;MjBqMmpmITicpPdtL57/ADkD72rJijijxRPDXy/Hua8sa1HrXlC78wXcHoLY+sZ40PIMIIxIxSu+&#xA;4NKE5ttX7NiGQQhLn3+bi4e0yY2QxC//ADG8u6jEdONpLb2l4DFc3coWRokYU5LGpPIjtvt1oemZ&#xA;Wm9mcuCYyiQMobgDa/j+L5bc2nL2oMg4SNizLyvpuh6Tpqz6DAlxBOK/Xq+pJKAafE+1KEfZAFD2&#xA;rmm7T12qlkIzCq6VsHN0unwiPoLzH8wvLcmn6gdShiEdlePuoHEJMQSVA8GpyH051Xs32p4+Pw5n&#xA;95D7Y/s5fJ1faek8OXFH6ZfexHOldW7FXYq9K/I2+sbbXL9Z3C3E1uqwJ3YBuT8a06UG2VZeTZjG&#xA;725NVj6cmA9xX+uUcbdwNz6iqgb8x4KcTJRFBNqEpYkCi9hkeJlwoa6c3ETJOecbKQwPShFDgtNP&#xA;lzM9wnYqmOha/qmh36XunylJF+3GamORf5XUEVH+Y3yMog80xkQ9i8t/m3HrtbJrUWt9xJVOfISA&#xA;CpKniNxuStOn00onjIb4SBTGS8v54lHqkDgXfh8J+Gvcb/snKm1GaZ5Iur2wi1Bbr0nlYmMBd1AP&#xA;2mYsp+4ZMQsMDOjScL+X9rqFq8Gp61dyWzLwa3tysIYd+b8WlavT7QBHUZZCMQ1zkSkNx+Qvky1u&#xA;1u4Fur626NYNMBT3BRUc/LllkpHowiB1Yj+b35WaBoOkQ63oha0Xmsd1p0shkpz+yY2Ys1QftAk7&#xA;b7U3IKCHkeSYuxV2KozRvSGrWZlu/qEazIzXvFpPSCsDzCICzFabAYJcles/nXbeVL7RbDX7Gad7&#xA;m4K/VZVh4wTRyry+L1DHItAhYGh3NKb1GDpTwzMW/LZiCXjWZ7Q7FXYqyHyNqOj6frf1nVHMcaxM&#xA;IZQrMFkagqQoJ+zyHTNJ2/pc2fT8GLc2LHKx8fOnO7PzQx5OKfc9N0Lzf5T1HWoNMgum9Wf4Yp3Q&#xA;pGz1oEBbieTdvh9uucjj9mdQI8WSogfE/q+13E+1YE1Hdin51Wl7a+YbWNmY6e9uGtlr8HMMRJt0&#xA;5dKnwpnX9iabFixkQG97nq6bW5ZTlZKf+U19L8m9Qp/u+G+kNO/wtHv/AMDg1JvUx98U4h+6PxeO&#xA;5u3BewXFzP5X/J2yMcjRalfACJ1JBQXLNLUd1IiH0HfNIccc+pIIuI/R+1zuIwxbc3lN7q2qX4UX&#xA;15PdBN0E8jyU+XInNpi02LGbhGMb7gA4kskpcyShcvYOxV2KuBINRsR0OKvTfyg816i+stodwxuR&#xA;fKTBNO7OYjBG7FUVqj4gPwynLDa23HLd7CYJE6qrGlPiX/mmmY9N1sL/ADI83z+WtNhit4Qb+/WR&#xA;be5H2YzHw5MVaoOz7ClMsxwthOdPNb781PNV5psti5gjEyGOS4jQiUq2zUJYqKjbZflloxAG2s5S&#xA;Qw/LWt2KuxVVtLqe0uorq3cpPA6yROOzKag4lXvNvcrfQQ3MS8I7tUmVetFnCMPuD0zDIouWDYS/&#xA;zV+YOteWtItUsFjczvQespYKvAM9KMv7T7VyeONsMhpNPKnmq91jSv0nb3Do7l45Y3YPwmAO24p3&#xA;U7Dp27ZGQMSyiQQm17+YEuj2Nze3kYaKFeWxIap2C0Ndy2w3AwxJtEoireA+a/Nur+ZtTe91CQ8a&#xA;n0LYE+nEp7KD3NNz3zJApxybSXCh2KuxV2KvXNfhFx+RukXMvxSW4AQnqB65jH/C7ZgDbP8Ajucj&#xA;/JvI8z3HdirsVdiq6KWSKRJY2KSRkMjqaEMDUEHARavePMunDzx5Hs7lAP0h9XS5tjsP33H95HXb&#xA;ZjVfnQ9s5/Fk8DMR/DdOxlDxIX1Q3lyylP5TNaUPqvZXihSCCGdpTQj2Jphzz/wm/MfoXGP3VeRe&#xA;V+S/LknmDzBb2ND9WU+reOP2YUI5b+LfZHuc3GpzeHAnr0cLFDilTLvzr1cSX9jpERpHbRmeVVI4&#xA;8pPhRaduKr9zZhdl49jM9W/VS3AeaZtXEdirsVdirsVZT+V2oQ2Hn/RriY8UMxhr7zxtCv4yDBLk&#xA;mPN9RSwo4JpQ+OUkNtvEf+cgHUvoSDqouifp9H+mHF1Y5HkWXNbsVdirsVdir6Y8veXpLPRtMilo&#xA;HjtLdbjl2eNVDD/PwzEluXJjsEi84fl5ceZbOyhtLmOB7VwJGkqRxK0biFB5HkBSpGHHOkZI2yby&#xA;n5U0/wAs6GmmxN6wDGW4ncAc5GABam9BQAAeGMpWURFPJfzi802N9fx6NpvE29mxa6kTo0wHELt/&#xA;IK19/lluKPVhkl0ecZa1uxV2KuxVNfLXlnVfMeqLpumRh5ypd2c8USNSAXY+AqMhOYiLKYxt7F+Z&#xA;elHSfy2i0a2R3gsYoUeYqQGYSIS300ZjTNbjneYH3uUY1jLwjNq4jsVdirsVdir3T8qdTgm8mW8P&#xA;I+pZySwuD1qXMop7cZBnO9owrKT3uy0xuDL19IW5PEBG5FlHSrEk/eTmDbkUx3yt5d0nyhok8pkD&#xA;PLWe6un2+BQSq/6qL+NTmVqNRLNIfYGnHiEAXh3mHV5NY1u81KSoNzIWQGlQg+FFNPBABnQ4MfBA&#xA;R7nXZJcUiUvy1g7FXYq7FXYq2jujq6Eq6kMrDYgjcEYq9Ss/z81dLRIrvT0nmAo0scpiDe/ApJT7&#xA;8qOLzbRk8mF+cPOOoeZ72Oe5RYYYAywQKS3HkQWLMd2Y0H3dMlCHCwlK0gybF2KuxV2KuxVm1n+b&#xA;3m23tI7d/q9z6YoJpkcuQOleDoD92VHCC2DKUXpP5y67bPKdQt471XblEEPoGP8AyQQr1X5ivvgO&#xA;EdEjKeqE8yfmv5g1eJre2A062cUf02LysO4MpC0H+qBhjiARLISwnLWt2KuxV2KuxVO/KHmu/wDL&#xA;Gr/pGzAZnjaGVDQco2IYgEhqbqO2VZsXHGrpnCfCbTvzV+aWqa/YPaPB6KybSOZOfw1rRQFjC1pv&#xA;mPh0fDLiJum2eexQFMJzNcd2KuxV2KuxVNvLvmbU9BuXms2BSUATQvXiwHToQaiuxzH1GmjlFFtx&#xA;ZTA7MoX83dSCyq1kh5f3dJGHHb9qoNfopmAeyY/zi5P509yRa95717W7QWly0cVsKcooQwDUoV5c&#xA;mc7U7Zl4NDjxGxZPm0ZNRKYosezMaHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVRbe4eJplidoU2eQKSoPuegwWqnh&#xA;V2KuxV2KuxV2KuxV2KgKi2ty4qkTsPEKTlZzQHUfNyo6HORYhM/5pWMrKaMCCOoO2TBB5OPOBiaI&#xA;otYWLsVdirsVV7bT7+6DG2tpZwn2zGjOF7b0BpkZTA5ltx4Mk/piT7g3Lp2oRVMltKgHUlGpt70y&#xA;IzQPIhunoc8OcJfIofLHEdirsVdirsVdiqIsdN1G/kaKxtZruVFLskEbSMFHViFB2wEgc1pQdHR2&#xA;R1KupKsrChBGxBBwq1irsVdirsVdirsVeo/lJ+XtjqiDW9Xi9a2V6Wdq1OD8TRncdwGBAHtvtmFq&#xA;dQQeEN+PHtZe8W/oRRqiRhUQcUVQAAB0AHQZit7GvN/5b+VfM9tK0sCWmpMCY9QhULIH2oZAKCQb&#xA;dG7dCOuWY8so+5hKAL5q17Q7/Q9XudLvlC3Ns3Fiu6sp3V1P8rKajNjGQkLDikUUBkkOxV2KR5so&#xA;gHlprJFKvDcqN5FCsGPvyzn55ZH6ibfSdPpMMYjgjDh+359VIxaQAKs0tew4qP1ZXxnvLk/l8Z6R&#xA;+QRVjbNeTi10awee6O9I09RwvSp60G/U4mUpMZHDhHEeGKbXPlTzxo8f1mWwmSNKljEyTBQPtErE&#xA;zkAdz0yNENOPtPT5DQl89vvY1rd5FqECSSAfW468pBtyXwOZekzSEwOhcHtvRwyYDIfVDcfpCQ5u&#xA;3gnYq7FWQaDocExZ7lJJbhP3iWaRsaxKhkeQkV+yq1Ip03zWajWWeGD1fZnYsQBkz1R5D7r9/d82&#xA;UjX4beAekokt/TEaskbRqjlegpQVX7swDleljgHIemunkhZfMEvqoscry0jJYw/CQjITIDQCtELB&#xA;vp7ZHjLZwRrcdev2fbySG9sVvUYwqrSwRmZmt49ghPJzKaA/AWArv88yMGqnDbmHVdo9k4c4Mvom&#xA;evefd5/Nj7qyMVbYjNzCYkLHJ4XPhlimYS5hrJtTsVdirNfy+/LR/N1teXDakthHbMI419IzPJIR&#xA;UjiHjoAKb75j5tQIGmyGMyexfl/5U0/ynpiWkUrjVdRk9K7uHooeSNWb041YK3FFV2A60q3TMDLm&#xA;lkOwIb4wEe4oy/0Swk0a5gbSrXUby+BkuYYEj5vIwC7Sy+nuNviJFOuVxyGxGMmRiNyQ+atb0LVt&#xA;Dv30/VbdrW7QBjGxVgQehVlLKw9wc3MZCQsOGRSBySHYq7FXYq7FX0z5ehXStMs7NKMkEEcRI2qU&#xA;UAt8z1zQSncie92AjtSfx36t9lqgdSQaZITY0rLeCoFVNRUAHJcavE/z6t4jq+mXykGSaGSF6eEL&#xA;Bh/ydzO0c7BDj5hyeW5mtLsVdiqYadr2p6cvG2aIr+yJoIbjj3+H1kk4/RlU8EJGyG/HqssBUZSA&#xA;970n8tbpfNst7aa3pljdxWkayCaO2SCbkzUA5wekOPXama/WYYwAMQ5mm1+YH6yz2/mg8reWb+40&#xA;DT7a3ktoWmC8DRilTWQhgzUFerZh4J8UxE9WepyzmOKRJLxi6/Nrz7cTNJ+kvRUmqxRRQqi+wqhJ&#xA;p7k5uRpcfc63xZd6Sav5l1fWCzag8UkjNzeVLeCKRmP80kSI7fScnHBCJsDdslqspjwmR4e69kry&#xA;1x3Yq7FUcdXuWbnIqyPx4ln5k0C8R+12HTwzXHs2F/VL7P0h3Ue3tREVt8v2s4/Kzy5D5unvbK+l&#xA;litLIJcRRxMTH6sh4ksj81qVT8MEuzwBQlL7P1Mh27mJsiN+79qN/NHyXZeUrW0vbFjI95NJHLzo&#xA;FAK1oqxiMAGpFOlMhHs0E7yl9n6ll25mA6fj4vOzrE5VFMMJEYIQFSaAmvc+JwnsqB/jn8x+pr/l&#xA;zP5fb+tCXE8k8pkkI5Gg2FAANgAMzsGCOKAjHk6zPmllkZS5qeXNTsVdir6P/LJ/K8+g6Xc6LZxW&#xA;kpYafdXqxqLkzrF6riWSlSGIB603GavNDIZUTs5EZRAZSombWEhaETXFvdTLbzSKCEItkbnv9kss&#xA;jKCOxpkfDlEbFeME7htZRMmjxJH6QvLuSJxTj8MUcz7U6AiHbEYuhT4nUPmbz7r02t+ar+6Z+dvF&#xA;LJBZdNrdJG9MVHXY1J982OHEIRoNE5GRssfy1i7FXYq7FXYq9C/LnWvM99cy2YvZHtLS35Ro1GoQ&#xA;yqqgkV+zWgrmn7ShGEeIbSJdhoslyqX0s1/TOvRHfhKP9X+nHNSM0nbHTYz5IfU/N+v2mny3MNlF&#xA;KYBzkRua1Qfapv1A3zI08+OYjLa3G1OnEIcUd6eW+bfN195lvIp7iNYIoEKQwISQORqzEnqTt92d&#xA;BgwDGKDpck+IpFlzB2KuxV2KvZv+cc41ZvMDEfEBaAH2PrV/VmJqhdN2J6tr2lJqGj39kVUtd28s&#xA;AagrWRCvX6cwhECQLcTYp8hkEEgihGxBzcOG7FXYq7FXYq7FXp35Da4bPzHcaWtuJJNTQETlyojF&#xA;usjkcQDy5cvHbITZQLJ/+cg55RoOlwPGKPds4kViacIyKEEDrz/DBC2U3hWWNbsVdirsVdir6A8j&#xA;6fo2kWcCaNPNcaZq1rHqlvLKQSbvTJlNzElApVnU0KkduuYkiTzZ7dHp1pYIurX902ztL60Y8Q1t&#xA;DFy/5JEZUTsrHNcvm0ry22s7qNP0y4uY6ndbqdVWAfe7rhiLlS9HypmewdirsVdirsVdir0f8mTH&#xA;9a1QH+8KQlR7AtX+GaXtjlH4uZpOZemS2lvKaugLfzDY/hmjt2EchHJKb61WCXgDyRhWh+6hyQLl&#xA;Y58Q3eFajDHBqFzBH/dxSuid/hViBnY45ExBPUPNzFSIQ+TYuxV2KuxV7F/zjndRLea5algJZY7e&#xA;VE7lY2kVj9BkGY2pHJtxPbZPs5hS5NwfJfnbTv0d5u1ezA4pHdSmMf5DtzT/AIVhmyxSuILjSFFJ&#xA;MsYuxV2KuxV2Ks6/JP8A8mHY/wDGO4/5MtkZcmUeb0H/AJyFg5eWNNnp/d3oSv8ArxOf+NMEUyeC&#xA;ZNg7FXYq7FXYq9P/ACY8xhb6PQLh6SLOL7RmJ6XCqUngFeguIGZR25U75Tlj1SH0ZaQxrErIaj0l&#xA;iXevwpXj+DZiMnlP5/6vFp/lK20mL4ZtVmRXA729p8dD/wA9HWmXYBZtBfPWZbF2KuxV2KuxV2Kp&#xA;r5Z8w3Wg6ol7B8SkGOaP+aMkEj8KjMfVacZYcJbcOTglb1G2/MfS7iEOtxHGe6ycUYGlaUZh+G2c&#xA;5k0OWJrhJ927ucc8MhfF89kl8w+fLaOB/q0q3F1IKJwYOBXuxX4QB4df15fpuz5zPqHDFc2rx441&#xA;E3J5mSWJJNSdyT1JzpHQuxV2KuxV2Ksj/L7zT/hnzRbak9TakNDdqOpik6n/AGLAN9GVZoGUaHNn&#xA;CVF79N+Zfk9bM3I1W1KhOdPWVnpSv90CZCf8njXNSY5LoRNuVcedvnXzdri675jvtVVSiXMgMat9&#xA;rgihFLddyqgnNthx8EAC4k5WbSjLWLsVdirsVdirK/yu1uw0bztYXt84itv3kTTMaKhkjKqW2O1T&#xA;Q+HXIy5JjzejfnJ5y8tX/lb6haXsF7dTTRtCltIsoTgas7lCQNvh38fnkIA2zkRTw7LWt2KuxV2K&#xA;uxVfbzzW88dxA7RTwsskUimjK6mqsD4gjFX1N+Wn5oaR5o0mNLy4ittdhWl5bOwTnxG80VeqsNyB&#xA;9n5UJwsmMxPkyBeEfmx5uXzL5vuJ7d+en2Y+q2R7MkZPJxT+dyWHtTMnFGggsNyxDsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;ir//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:bff4e222-9f74-be43-bb59-e9a4a16392a5</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:bff4e222-9f74-be43-bb59-e9a4a16392a5</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:70ca70e0-f4be-f148-be6b-0413ec3438e6</stRef:instanceID>
            <stRef:documentID>xmp.did:70ca70e0-f4be-f148-be6b-0413ec3438e6</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4239c0b2-9560-5644-9c1b-2d4eaefa5ca4</stEvt:instanceID>
                  <stEvt:when>2015-03-29T08:26:58+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a613b13b-ad44-5047-9dbf-0017b945326e</stEvt:instanceID>
                  <stEvt:when>2016-03-03T19:26:51+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:baa8e3d8-32e8-264e-85e2-479b96a27290</stEvt:instanceID>
                  <stEvt:when>2016-03-06T20:07:54+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bff4e222-9f74-be43-bb59-e9a4a16392a5</stEvt:instanceID>
                  <stEvt:when>2016-06-28T11:30:36+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Áåëûé</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>×åðíûé</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 .69 cmyk
f
363.058 190.408 mo
363.082 193.098 363.262 200.082 373.855 200.399 cv
384.448 200.716 383.981 206.412 380.452 206.485 cv
376.922 206.558 358.589 207.839 358.744 190.514 cv
363.058 190.408 li
cp
.0775158 .107179 .218662 .000488289 cmyk
f
371.531 200.312 mo
373.157 201.999 383.692 206.979 381.629 207.022 cv
378.365 207.09 360.739 207.767 359.009 194.101 cv
363.79 200.073 369.425 203.167 371.531 200.312 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
371.531 200.312 mo
373.157 201.999 382.349 206.575 380.34 207.045 cv
376.503 207.941 364.372 207.628 360.084 198.04 cv
362.543 203.036 375.269 207.652 371.531 200.312 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
419.034 189.41 mo
418.369 192.533 416.506 200.611 404.113 198.471 cv
391.72 196.331 390.915 203.065 395.001 203.986 cv
399.087 204.907 420.103 210.738 424.025 190.555 cv
419.034 189.41 li
cp
.0775158 .107179 .218662 .000488289 cmyk
f
404.383 198.403 mo
402.092 199.981 391.116 203.793 393.505 204.332 cv
397.285 205.184 417.621 210.145 422.868 194.664 cv
415.894 200.475 406.34 201.799 404.383 198.403 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
399.346 160.776 mo
402.065 160.774 401.832 162.923 401.832 162.923 cv
400.312 163.558 398.664 164.266 398.697 167.008 cv
398.999 192.165 397.521 199.841 390.078 199.842 cv
382.934 199.843 395.507 191.736 394.458 168.707 cv
394.242 163.973 392.183 163.612 389.799 162.757 cv
389.799 162.757 390.683 160.796 392.2 160.794 cv
392.966 160.794 398.424 160.777 399.346 160.776 cv
cp
.0775158 .107179 .218662 .000488289 cmyk
f
394.288 167.098 mo
394.973 169.688 397.819 167.469 398.713 168.573 cv
398 164.224 400.86 163.594 402.28 163 cv
402.28 163 402.065 160.774 399.346 160.776 cv
398.424 160.777 392.966 160.794 392.2 160.794 cv
390.683 160.796 390.704 163.983 390.704 163.983 cv
391.791 164.106 393.673 163.734 394.288 167.098 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
392.434 163.121 mo
389.308 163.123 388.144 162.325 388.869 159.925 cv
389.594 157.525 392.035 154.47 395.335 153.886 cv
399.535 153.143 402.534 156.57 403.409 159.477 cv
404.195 162.092 402.394 163.09 400.649 163.091 cv
399.768 163.092 393.494 163.12 392.434 163.121 cv
cp
.188205 .198367 .383459 .026978 cmyk
f
391.775 160.683 mo
393.697 161.244 400.532 157.413 399.626 155.362 cv
399.495 155.066 398.772 153.513 395.394 153.803 cv
393.838 153.937 392.499 154.836 391.422 155.875 cv
391.477 156.005 387.457 159.423 391.775 160.683 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
391.159 163.968 mo
388.687 164.152 388.71 162.621 388.662 161.217 cv
389.087 162.997 391.089 163.398 394.264 162.325 cv
401.659 159.826 401.72 156.4 401.72 156.4 cv
407.453 163.109 402.394 163.09 400.649 163.091 cv
399.768 163.092 392.819 163.845 391.159 163.968 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
395.585 155.002 mo
395.803 155.493 395.196 156.24 394.229 156.67 cv
393.262 157.101 392.301 157.052 392.083 156.562 cv
391.864 156.071 392.471 155.324 393.438 154.893 cv
394.405 154.463 395.366 154.511 395.585 155.002 cv
cp
.0775158 .107179 .218662 .000488289 cmyk
f
397.269 155.49 mo
397.281 155.699 396.956 155.887 396.545 155.911 cv
396.133 155.934 395.789 155.783 395.778 155.574 cv
395.766 155.365 396.09 155.177 396.502 155.154 cv
396.914 155.13 397.257 155.281 397.269 155.49 cv
cp
f
392.629 164.304 mo
393.538 164.827 393.767 165.456 394.072 166.193 cv
395.748 166.839 398.171 166.616 398.748 166.174 cv
399.221 164.121 401.101 163.491 401.101 163.491 cv
397.908 164.079 394.552 164.543 392.629 164.304 cv
cp
.188205 .198367 .383459 .026978 cmyk
f
394.626 188.046 mo
390.544 198.047 385.049 199.843 390.078 199.842 cv
396.794 199.841 398.617 191.065 398.662 178.936 cv
398.719 169.272 396.623 183.153 394.626 188.046 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
387.922 198.06 mo
387.758 198.979 387.524 200.326 389.102 200.298 cv
396.72 200.163 398.412 193.043 398.511 184.143 cv
396.977 192.881 395.658 194.911 387.922 198.06 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
382.085 191.408 mo
378.77 187.813 363.901 170.431 365.408 164.1 cv
357.372 171.461 li
362.539 174.805 366.108 183.209 369.331 194.49 cv
372.554 205.771 382.509 210.818 386.913 203.345 cv
391.318 195.871 385.4 195.003 382.085 191.408 cv
cp
.0775158 .107179 .218662 .000488289 cmyk
f
363.206 166.45 mo
364.497 165.99 365.52 166.003 365.52 166.003 cv
365.515 165.997 365.555 162.682 367.778 159.766 cv
368.831 153.138 353.996 150.403 349.262 155.558 cv
342.866 162.522 346.213 171.589 350.945 171.865 cv
351.452 171.895 354.608 168.102 357.732 170.463 cv
358.832 171.547 356.646 168.786 363.206 166.45 cv
cp
.188205 .198367 .383459 .026978 cmyk
f
353.763 163.973 mo
351.579 166.005 350.118 168.493 348.758 171.058 cv
349.425 171.532 350.166 171.82 350.945 171.865 cv
353.28 172.197 355.02 169.582 358.143 171.943 cv
361.511 166.052 365.642 167.301 365.65 167.299 cv
364.896 163.262 367.651 161.937 367.778 159.766 cv
367.879 159.13 367.833 158.529 367.664 157.968 cv
362.437 158.067 357.668 160.34 353.763 163.973 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
367.778 159.766 mo
365.779 156.295 350.103 164.501 350.945 171.865 cv
348.964 172.197 346.656 169.483 345.977 166.433 cv
351.276 165.077 364.622 157.031 364.149 154.404 cv
366.565 155.599 368.147 157.444 367.778 159.766 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
352.734 159.872 mo
347.801 162.338 344.948 160.398 349.262 155.558 cv
350.95 153.665 354.02 152.858 357.152 152.872 cv
362.662 152.897 357.152 157.662 352.734 159.872 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
355.158 154.004 mo
355.379 154.652 354.523 155.53 353.246 155.965 cv
351.97 156.4 350.756 156.228 350.535 155.581 cv
350.314 154.933 351.17 154.055 352.446 153.619 cv
353.723 153.184 354.937 153.356 355.158 154.004 cv
cp
.0775158 .107179 .218662 .000488289 cmyk
f
357.037 154.158 mo
357.122 154.612 356.465 155.115 355.571 155.282 cv
354.676 155.449 353.883 155.216 353.798 154.762 cv
353.714 154.308 354.37 153.805 355.264 153.638 cv
356.159 153.472 356.952 153.704 357.037 154.158 cv
cp
f
365.648 165.012 mo
365.648 165.012 365.746 163.854 366.852 162.036 cv
365.464 161.765 363.434 162.266 361.851 162.894 cv
356.737 164.924 355.36 168.2 354.402 171.104 cv
355.296 171.044 356.409 170.962 357.372 171.461 cv
358.352 167.974 362.359 164.362 365.648 165.012 cv
cp
.188205 .198367 .383459 .026978 cmyk
f
382.085 191.408 mo
379.966 189.11 371.859 178.666 371.859 178.666 cv
367.432 174.172 367.086 183.784 369.331 194.49 cv
371.739 205.972 382.509 210.818 386.913 203.345 cv
391.318 195.871 385.4 195.003 382.085 191.408 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
382.085 191.408 mo
381.885 191.19 381.63 190.899 381.333 190.551 cv
381.063 192.182 380.62 193.751 380.034 195.155 cv
379.159 197.253 377.626 199.461 375.34 200.166 cv
373.933 200.6 372.697 200.587 371.531 200.312 cv
375.337 207.652 383.404 209.491 386.965 203.448 cv
391.369 195.975 385.4 195.003 382.085 191.408 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
416.412 150.931 mo
420.269 151.573 419.429 154.565 419.429 154.565 cv
417.122 155.105 414.616 155.719 414.012 159.614 cv
408.472 195.363 404.555 205.897 394 204.133 cv
383.868 202.439 403.622 193.926 407.598 161.018 cv
408.416 154.253 405.581 153.253 402.403 151.474 cv
402.403 151.474 404.122 148.903 406.274 149.262 cv
407.361 149.443 415.104 150.713 416.412 150.931 cv
cp
.0775158 .107179 .218662 .000488289 cmyk
f
407.648 157.362 mo
407.88 159.442 413.62 162.118 414.156 158.891 cv
414.945 155.64 417.273 155.07 419.429 154.565 cv
419.429 154.565 420.269 151.573 416.412 150.931 cv
415.104 150.713 407.361 149.443 406.274 149.262 cv
404.122 148.903 402.403 151.474 402.403 151.474 cv
404.891 152.867 407.169 153.783 407.648 157.362 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
406.053 152.616 mo
401.619 151.878 400.159 150.469 401.756 147.238 cv
403.354 144.007 407.541 140.109 412.358 140.208 cv
418.167 140.327 421.931 145.723 422.482 150.053 cv
422.977 153.948 420.185 154.935 417.711 154.523 cv
416.461 154.315 407.557 152.867 406.053 152.616 cv
cp
.188205 .198367 .383459 .026978 cmyk
f
405.595 149.106 mo
408.186 150.357 420.844 148.878 420.251 145.71 cv
419.851 143.576 416.589 140.295 412.358 140.208 cv
410.113 140.162 408.008 140.986 406.235 142.204 cv
406.282 142.401 399.77 146.294 405.595 149.106 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
406.053 152.616 mo
402.538 152.031 400.891 151.024 401.156 149.021 cv
402.955 151.779 406.229 151.628 411.046 151.519 cv
422.949 151.251 421.196 146.13 421.196 146.13 cv
425.792 154.468 420.185 154.935 417.711 154.523 cv
416.461 154.315 407.557 152.867 406.053 152.616 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
414.904 141.81 mo
414.945 142.582 413.746 143.272 412.226 143.352 cv
410.706 143.432 409.441 142.871 409.4 142.1 cv
409.36 141.329 410.559 140.639 412.079 140.559 cv
413.599 140.479 414.864 141.039 414.904 141.81 cv
cp
.0775158 .107179 .218662 .000488289 cmyk
f
415.689 141.839 mo
415.704 142.139 415.237 142.408 414.645 142.44 cv
414.053 142.471 413.56 142.252 413.544 141.952 cv
413.528 141.651 413.995 141.382 414.588 141.351 cv
415.18 141.32 415.673 141.538 415.689 141.839 cv
cp
f
406.458 154.341 mo
406.729 154.69 407.289 155.646 407.546 156.765 cv
409.77 158.078 413.779 157.93 414.702 157.44 cv
416.014 155.449 417.23 155.317 418.3 154.848 cv
413.631 154.923 409.129 155.137 406.458 154.341 cv
cp
.188205 .198367 .383459 .026978 cmyk
f
403.059 184.014 mo
396.501 198.095 386.868 202.94 394 204.133 cv
403.523 205.724 407.643 197.3 412.427 169.379 cv
412.613 164.445 410.426 163.409 403.059 184.014 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
391.626 201.759 mo
391.176 203.025 391.267 203.958 393.505 204.332 cv
400.865 205.562 406.387 199.876 409.199 185.496 cv
408.396 186.929 403.289 204.619 391.626 201.759 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
387.662 144.483 mo
391.967 144.483 391.596 147.885 391.596 147.885 cv
389.188 148.889 386.577 150.008 386.626 154.349 cv
387.074 194.183 401.284 201.456 391.326 205.372 cv
381.765 209.132 381.545 193.5 379.912 157.035 cv
379.577 149.538 376.317 148.964 372.543 147.607 cv
372.543 147.607 373.945 144.503 376.348 144.503 cv
377.561 144.503 386.202 144.483 387.662 144.483 cv
cp
.0775158 .107179 .218662 .000488289 cmyk
f
379.305 153.054 mo
379.813 155.687 385.367 152.666 386.651 153.538 cv
386.92 149.863 389.346 148.823 391.596 147.885 cv
391.596 147.885 391.967 144.483 387.662 144.483 cv
386.202 144.483 377.561 144.503 376.348 144.503 cv
373.945 144.503 372.543 147.607 372.543 147.607 cv
375.498 148.67 378.137 149.253 379.305 153.054 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
381.59 176.072 mo
381.869 195.208 382.281 208.706 391.326 205.372 cv
401.092 201.773 388.162 189.841 386.751 159.151 cv
386.523 155.911 381.763 164.676 381.59 176.072 cv
cp
f
376.715 148.187 mo
371.765 148.187 369.923 146.921 371.074 143.122 cv
372.225 139.324 376.068 134.332 381.319 133.568 cv
387.65 132.647 392.715 137.827 394.097 142.432 cv
395.339 146.573 392.485 148.15 389.722 148.15 cv
388.328 148.15 378.393 148.187 376.715 148.187 cv
cp
.188205 .198367 .383459 .026978 cmyk
f
378.965 141.236 mo
381.475 141.247 393.888 141.808 392.2 138.686 cv
389.867 135.463 385.93 132.897 381.319 133.568 cv
378.872 133.924 376.734 135.2 375.029 136.844 cv
375.115 137.049 371.842 141.204 378.965 141.236 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
376.715 148.187 mo
371.765 148.187 369.923 146.921 371.074 143.122 cv
371.776 145.287 375.885 146.807 381.187 146.594 cv
393.976 146.08 394.097 142.432 394.097 142.432 cv
395.339 146.573 392.485 148.15 389.722 148.15 cv
388.328 148.15 378.393 148.187 376.715 148.187 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
383.614 135.074 mo
383.798 135.905 382.62 136.872 380.983 137.233 cv
379.347 137.595 377.871 137.215 377.688 136.385 cv
377.504 135.554 378.682 134.588 380.318 134.226 cv
381.955 133.864 383.431 134.244 383.614 135.074 cv
cp
.0775158 .107179 .218662 .000488289 cmyk
f
384.94 135.983 mo
385.012 136.307 384.553 136.683 383.915 136.824 cv
383.277 136.965 382.702 136.817 382.631 136.494 cv
382.559 136.17 383.018 135.793 383.656 135.652 cv
384.294 135.511 384.869 135.66 384.94 135.983 cv
cp
f
377.466 149.987 mo
377.823 150.318 378.154 150.697 378.445 151.153 cv
379.611 153.695 386.335 150.559 386.982 151.863 cv
387.273 150.991 387.729 150.327 388.28 149.794 cv
386.083 150.296 379.616 150.958 377.466 149.987 cv
cp
.188205 .198367 .383459 .026978 cmyk
f
392.506 190.04 mo
394.655 199.018 387.279 204.775 383.563 200.594 cv
384.7 205.495 387.384 207.483 391.477 205.975 cv
396.868 203.988 396.035 199.378 392.506 190.04 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
419.034 189.41 mo
418.865 191.238 423.093 190.314 423.771 191.132 cv
424.65 188.768 426.444 188.548 428.102 188.362 cv
428.102 188.362 428.996 186.196 426.166 185.373 cv
425.206 185.094 419.522 183.456 418.724 183.224 cv
417.145 182.765 415.63 184.537 415.63 184.537 cv
417.369 185.801 418.993 186.688 419.034 189.41 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
418.261 185.716 mo
415.008 184.77 414.039 183.585 415.522 181.308 cv
417.004 179.031 420.485 176.484 424.083 176.986 cv
428.421 177.59 430.76 181.964 430.788 185.255 cv
430.813 188.214 428.636 188.706 426.819 188.178 cv
425.903 187.911 419.365 186.037 418.261 185.716 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
420.671 183.611 mo
422.319 184.099 430.77 184.805 430.257 182.43 cv
429.339 179.865 427.242 177.426 424.083 176.986 cv
422.406 176.752 420.756 177.182 419.321 177.937 cv
415.606 179.87 415.995 182.229 420.671 183.611 cv
cp
.188205 .198367 .383459 .026978 cmyk
f
427.191 179.014 mo
427.123 180.049 425.376 180.227 423.375 180.646 cv
420.211 181.309 418.531 179.927 418.599 178.892 cv
418.667 177.857 421.58 176.764 423.62 176.898 cv
425.66 177.031 427.259 177.979 427.191 179.014 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
418.411 187.043 mo
418.583 187.329 418.728 187.641 418.832 187.997 cv
419.113 189.891 424.132 189.114 424.309 190.094 cv
424.666 189.577 425.093 189.228 425.557 188.983 cv
424.017 188.893 419.64 188.092 418.411 187.043 cv
cp
.188205 .198367 .383459 .026978 cmyk
f
425.333 177.798 mo
425.333 178.212 424.38 178.547 423.203 178.547 cv
422.027 178.547 421.074 178.212 421.074 177.798 cv
421.074 177.385 422.027 177.05 423.203 177.05 cv
424.38 177.05 425.333 177.385 425.333 177.798 cv
cp
.0775158 .107179 .218662 .000488289 cmyk
f
403.445 200.301 mo
401.154 201.878 390.713 204.049 393.102 204.587 cv
396.475 205.347 413.428 209.123 420.685 198.989 cv
416.642 204.217 400.469 205.943 403.445 200.301 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
358.749 191.274 mo
358.888 192.814 362.45 191.541 363.136 192.116 cv
363.057 189.557 364.927 189.432 366.273 189.025 cv
366.273 189.025 366.684 187.094 364.212 186.844 cv
363.374 186.759 358.414 186.268 357.717 186.197 cv
356.338 186.057 355.353 187.757 355.353 187.757 cv
356.987 188.539 358.665 189.178 358.749 191.274 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
357.714 188.333 mo
354.873 188.045 353.889 187.211 354.771 185.098 cv
355.653 182.984 358.149 180.343 361.207 180.21 cv
364.894 180.05 367.5 183.317 368.025 186.04 cv
368.497 188.49 366.767 189.229 365.182 189.068 cv
364.381 188.987 358.677 188.43 357.714 188.333 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
359.39 186.221 mo
360.83 186.374 367.941 185.67 367.154 183.78 cv
366.003 181.795 363.892 180.093 361.207 180.21 cv
359.782 180.272 358.48 180.88 357.406 181.724 cv
354.622 183.893 355.303 185.788 359.39 186.221 cv
cp
.188205 .198367 .383459 .026978 cmyk
f
364.092 181.417 mo
364.194 182.285 362.773 182.699 361.178 183.352 cv
358.657 184.383 357.055 183.494 356.953 182.626 cv
356.851 181.758 359.099 180.408 360.81 180.207 cv
362.521 180.007 363.991 180.548 364.092 181.417 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
358.04 189.409 mo
358.226 189.62 358.535 190.126 358.643 190.542 cv
359.165 192.069 362.947 190.259 363.243 191.045 cv
363.46 190.561 363.779 189.96 364.298 189.687 cv
363.007 189.847 359.218 190.092 358.04 189.409 cv
cp
.188205 .198367 .383459 .026978 cmyk
f
362.367 180.693 mo
362.43 181.035 361.691 181.458 360.716 181.637 cv
359.742 181.817 358.9 181.685 358.837 181.342 cv
358.774 181 359.513 180.577 360.488 180.397 cv
361.463 180.218 362.304 180.35 362.367 180.693 cv
cp
.0775158 .107179 .218662 .000488289 cmyk
f
378.256 205.4 mo
378.132 205.35 378.029 205.284 377.936 205.21 cv
375.11 206.647 370.191 206.347 368.226 205.722 cv
372.943 207.681 378.899 207.853 381.159 207.325 cv
381.487 207.248 381.722 207.04 381.88 206.742 cv
380.94 206.426 379.197 205.774 378.256 205.4 cv
cp
.294285 .43473 .582361 .214786 cmyk
f
386.273 204.3 mo
385.046 204.265 385.025 203.431 384.395 203.043 cv
381.603 204.423 377.734 205.281 373.242 202.839 cv
377.222 207.672 383.482 210.356 386.304 204.322 cv
386.273 204.3 li
cp
f
394.051 202.888 mo
394.045 202.904 393.69 203.601 393.157 204.264 cv
393.267 204.288 393.381 204.311 393.505 204.332 cv
399.132 205.272 403.685 202.17 406.773 194.231 cv
405.679 196.295 402.465 203.008 394.051 202.888 cv
cp
f
384.184 202.614 mo
385.475 207.756 388.735 208.001 392.21 206.72 cv
396.717 205.059 396.141 200.818 394.008 194.258 cv
395.695 207.971 385.539 204.385 384.184 202.614 cv
cp
f
400.285 202.147 mo
397.995 203.725 390.167 204.973 392.555 205.512 cv
395.264 206.122 407.284 207.754 415.454 203.483 cv
415.454 203.483 401.834 207.857 400.285 202.147 cv
cp
f
150.762 48.7133 mo
172.802 59.6937 168.57 77.1802 168.253 96.7983 cv
167.4 104.049 188.043 101.736 186.973 95.8476 cv
186.095 91.0081 175.93 61.9683 201.093 47.4677 cv
223.046 34.8169 150.762 48.7133 150.762 48.7133 cv
cp
.133852 .211398 .652491 .0180972 cmyk
f
150.19 49.9349 mo
150.379 50.0318 li
163.979 55.1576 170.234 68.7105 170.139 83.1164 cv
172.508 71.9329 167.759 62.5156 164.866 55.7767 cv
164.808 55.6718 164.804 55.6721 164.855 55.7777 cv
168.886 60.06 170.817 66.3069 171.875 71.7303 cv
171.743 63.2645 170.152 59.0419 168.957 53.9324 cv
168.96 53.8248 168.958 53.8228 168.949 53.9263 cv
172.904 62.8034 174.322 69.8784 175.791 81.3504 cv
175.381 71.147 174.404 61.8867 172.508 52.4091 cv
174.593 57.4322 174.762 60.2218 175.752 65.0295 cv
175.949 60.8255 175.804 53.9836 176.968 50.3011 cv
178.092 59.4945 177.364 70.6059 177.778 80.2088 cv
178.678 70.7598 177.59 56.3705 183.439 48.3025 cv
182.523 50.698 180.87 57.4442 180.901 65.345 cv
183.307 53.2074 187.363 48.5379 186.582 49.4711 cv
184.379 57.0768 179.945 70.6885 180.333 79.072 cv
180.335 73.1677 185.235 54.4018 192.643 49.1106 cv
188.841 53.2104 185.421 63.5442 185.025 65.7687 cv
187.041 58.4785 195.212 52.2471 201.51 48.6181 cv
223.462 35.9674 150.19 49.9349 150.19 49.9349 cv
cp
.139284 .296574 .731167 .0284733 cmyk
f
150.19 49.7217 mo
150.379 49.8185 li
163.979 54.9444 166.893 60.0623 170.163 75.8424 cv
168.528 64.4693 165.4 57.5744 162.201 52.4565 cv
162.143 52.3516 167.959 54.1625 170.873 65.1801 cv
170.163 60.3466 168.231 54.2967 166.751 48.6892 cv
166.754 48.5817 168.323 49.652 168.315 49.7554 cv
170.02 52.1722 173.831 63.1727 174.641 69.5161 cv
173.816 59.8045 171.3 51.1296 170.092 45.6327 cv
172.58 49.9939 174.428 48.6181 175.284 59.2975 cv
175.92 53.4517 175.778 44.6376 177.626 40.3727 cv
178.835 45.8459 178.249 56.8448 178.316 60.77 cv
179.383 48.0464 184.263 43.192 186.654 41.4389 cv
185.738 43.8344 183.014 51.5615 182.531 56.8636 cv
185.872 44.5665 189.752 43.4864 190.797 43.1735 cv
187.093 50.5811 185.9 53.4342 183.313 62.9766 cv
186.867 52.6698 189.852 47.2676 198.453 44.6376 cv
201.012 46.5568 191.345 47.8362 185.025 65.5554 cv
187.041 58.2652 194.899 49.6844 201.51 48.4049 cv
216.735 45.458 189.865 35.9854 170.589 38.88 cv
158.372 40.7145 150.19 49.7217 150.19 49.7217 cv
cp
.171969 .380102 .80737 .0549325 cmyk
f
168.856 84.3914 mo
169.2 79.2964 168.874 76.3859 168.201 70.9897 cv
169.137 74.9784 170.026 79.4928 168.856 84.3914 cv
cp
.139284 .296574 .731167 .0284733 cmyk
f
171.128 83.4275 mo
173.162 73.8369 170.385 64.866 166.896 59.1222 cv
168.55 62.9479 172.23 70.7589 171.128 83.4275 cv
cp
f
173.027 85.565 mo
174.651 77.4472 172.344 67.364 171.489 62.4079 cv
172.728 66.9795 176.274 77.319 173.027 85.565 cv
cp
f
177.044 83.3006 mo
176.36 78.8144 175.928 66.8015 176.574 59.7589 cv
177.214 64.9287 177.044 83.3006 177.044 83.3006 cv
cp
f
180.077 85.5223 mo
176.947 75.6715 180.101 56.6176 179.664 59.1856 cv
178.837 74.4684 180.077 85.5223 180.077 85.5223 cv
cp
f
181.796 83.0736 mo
180.711 76.48 182.24 70.2584 184.759 63.5014 cv
181.672 73.16 181.796 83.0736 181.796 83.0736 cv
cp
f
183.131 80.8618 mo
182.258 75.5898 183.59 69.5108 184.759 66.5896 cv
183.465 73.4336 183.131 80.8618 183.131 80.8618 cv
cp
f
179.854 75.4396 mo
179.854 75.4396 178.835 54.9444 187.862 37.1029 cv
178.337 47.1254 179.261 72.2172 179.854 75.4396 cv
cp
.0440375 .13434 .490578 0 cmyk
f
166.107 38.0922 mo
166.107 38.0922 174.712 49.6844 175.922 76.6493 cv
176.536 68.9475 174.072 43.3581 166.107 38.0922 cv
cp
f
160.963 39.7421 mo
160.963 39.7421 170.587 50.5027 174.247 77.2455 cv
174.158 69.5197 169.374 44.2609 160.963 39.7421 cv
cp
f
158.292 49.4711 mo
158.292 49.4711 169.594 59.3957 170.612 77.7229 cv
170.751 65.8628 164.547 51.7457 158.292 49.4711 cv
cp
f
180.469 71.1747 mo
180.564 68.7105 184.449 47.9991 192.482 38.951 cv
185.872 49.3289 180.469 71.1747 180.469 71.1747 cv
cp
f
181.133 75.25 mo
181.228 72.7859 186.085 48.3338 199.59 42.2919 cv
185.089 52.7147 181.133 75.25 181.133 75.25 cv
cp
f
175.849 40.9413 mo
178.906 45.8459 177.531 67.7154 177.342 75.6291 cv
177.609 49.9031 175.849 40.9413 175.849 40.9413 cv
cp
f
192.058 47.105 mo
188.217 45.1351 li
188.217 45.1351 188.217 37.8137 188.146 37.6005 cv
188.075 37.3872 196.036 41.2256 196.036 41.2256 cv
192.058 47.105 li
cp
.0110475 .41825 .964507 0 cmyk
f
169.523 51.2481 mo
169.759 45.3709 li
169.759 45.3709 162.438 45.3709 162.225 45.2998 cv
162.011 45.2287 165.85 53.1899 165.85 53.1899 cv
169.523 51.2481 li
cp
f
199.235 34.1175 mo
189.141 37.6716 180.469 27.2936 164.832 36.6764 cv
164.832 36.6764 147.345 27.2936 140.522 36.9607 cv
138.11 40.3766 135.83 44.6376 143.081 47.0543 cv
150.331 49.4711 150.047 57.5744 162.557 54.1625 cv
163.666 53.8601 164.764 53.5324 165.85 53.1899 cv
166.458 52.255 166.894 50.8896 166.264 49.115 cv
167.154 50.034 167.982 51.2824 168.584 52.2914 cv
177.12 49.3832 184.739 45.9676 190.264 46.6917 cv
191.212 44.8522 192.272 41.5822 189.87 38.7954 cv
191.771 40.3029 193.122 43.4977 192.058 47.105 cv
192.373 47.2129 192.682 47.3351 192.98 47.4808 cv
199.662 50.7506 207.48 51.8879 209.897 46.6278 cv
212.314 41.3678 209.329 30.5634 199.235 34.1175 cv
cp
.00619516 .260136 .916197 6.10361e-005 cmyk
f
148.269 37.4391 mo
146.132 39.4187 150.249 39.6563 153.02 41.1212 cv
156.766 43.1011 161.955 37.9231 164.832 36.6764 cv
164.832 36.6764 156.148 31.5004 148.269 37.4391 cv
cp
0 .32874 .913939 0 cmyk
f
201.466 38.3501 mo
207.692 41.7093 200.591 33.6401 199.235 34.1175 cv
197.108 34.8665 195.043 34.9942 192.963 34.8219 cv
195.826 35.9626 198.981 37.0096 201.466 38.3501 cv
cp
f
158.983 37.5637 mo
158.096 37.7502 157.119 36.2557 156.714 36.1358 cv
157.52 38.0618 156.435 38.267 155.981 38.5273 cv
155.645 38.7197 153.881 38.3902 153.139 36.2115 cv
152.854 37.8464 154.588 38.8396 154.205 39.0548 cv
153.459 39.4732 149.158 40.8318 147.798 38.5904 cv
148.462 40.5502 151.186 40.9201 152.794 41.4284 cv
156.835 42.7049 162.037 37.8858 164.914 36.6391 cv
164.914 36.6391 163.114 36.2934 161.603 36.7979 cv
161.552 36.8152 160.946 36.4494 160.61 36.2478 cv
160.588 36.942 159.48 37.4593 158.983 37.5637 cv
cp
.0110475 .41825 .964507 0 cmyk
f
202.236 38.74 mo
202.261 37.5894 201.645 36.3346 200.615 35.4836 cv
199.808 37.5356 198.448 35.0217 192.963 34.8219 cv
195.826 35.9626 199.584 37.5437 202.236 38.74 cv
cp
f
180.469 46.1303 mo
169.641 49.7866 169.107 46.7264 166.715 47.0899 cv
165.164 47.3256 164.363 50.5064 162.628 51.7457 cv
159.393 54.0559 153.781 54.5243 152.428 51.9945 cv
146.99 41.8298 142.666 46.3933 139.917 44.7442 cv
137.67 43.3959 138.761 41.4446 138.631 40.2159 cv
137.603 42.7842 138.022 45.368 143.081 47.0543 cv
150.331 49.4711 150.047 57.5744 162.557 54.1625 cv
163.666 53.8601 164.764 53.5324 165.85 53.1899 cv
166.458 52.255 166.894 50.8896 166.264 49.115 cv
167.154 50.034 167.982 51.2824 168.584 52.2914 cv
177.12 49.3832 184.739 45.9676 190.264 46.6917 cv
190.992 45.2791 192.798 41.0659 189.87 38.7954 cv
189.994 42.0786 185.943 44.2822 180.469 46.1303 cv
cp
0 .32874 .913939 0 cmyk
f
203.642 46.77 mo
195.397 46.3435 193.481 39.2788 189.87 38.7954 cv
192.56 41.9963 192.763 44.7142 192.058 47.105 cv
192.373 47.2129 192.682 47.3351 192.98 47.4808 cv
199.662 50.7506 207.48 51.8879 209.897 46.6278 cv
210.518 45.278 210.779 43.5629 210.659 41.8191 cv
210.112 46.1076 206.887 46.9378 203.642 46.77 cv
cp
f
142.195 41.5779 mo
142.811 41.8127 143.445 41.9484 143.959 41.9549 cv
145.138 41.9697 145.609 42.2168 146.681 42.5465 cv
147.599 42.8292 148.688 42.258 149.433 42.5901 cv
150.001 42.8434 150.328 43.9561 151.024 44.3227 cv
151.527 44.5877 152.373 44.4715 152.958 44.7574 cv
154.446 45.4851 154.86 46.9354 156.691 45.9515 cv
157.643 45.44 157.949 44.2878 159.18 44.0795 cv
160.284 43.8926 161.086 44.7748 162.147 44.7286 cv
163.705 44.6608 164.022 42.9891 165.372 42.4487 cv
166.785 41.8835 168.501 42.2941 169.959 42.4084 cv
171.716 42.546 172.749 41.3405 174.402 41.2563 cv
176.595 41.1446 177.51 42.1461 179.678 41.0732 cv
181.101 40.3693 182.554 40.3939 184.019 39.6564 cv
184.992 39.1668 186.436 38.9484 186.929 37.8543 cv
187.672 36.2054 185.938 35.008 184.582 34.5723 cv
182.134 33.786 178.914 33.8835 176.376 34.2578 cv
175.588 34.3741 175.821 34.5687 174.822 34.4157 cv
172.87 34.1169 171.802 34.7422 170.124 35.7618 cv
168.712 36.6202 166.914 37.4707 165.644 38.4184 cv
165.127 38.8037 164.956 39.5752 164.554 39.8722 cv
163.592 40.5843 162.086 40.2181 161.001 40.7448 cv
159.712 41.3702 158.84 42.7226 157.609 43.4696 cv
154.189 45.5464 143.399 41.4574 147.374 36.7807 cv
147.827 36.2483 151.94 33.9646 151.887 33.5399 cv
151.767 32.5698 146.923 33.3653 146.168 33.5888 cv
144.295 34.144 137.817 38.0542 140.476 40.555 cv
140.929 40.981 141.553 41.3333 142.195 41.5779 cv
cp
0 .166964 .632624 3.0518e-005 cmyk
f
204.996 37.3074 mo
205.602 38.1091 206.012 38.9411 205.241 39.78 cv
204.194 40.918 198.225 38.1377 196.804 37.6228 cv
195.648 37.2037 190.805 34.7437 189.661 36.0712 cv
188.213 37.7556 194.765 38.0273 195.116 38.1456 cv
195.714 38.3467 196.098 39.0646 196.744 39.3111 cv
197.347 39.5412 198.01 39.2503 198.666 39.5448 cv
200.066 40.1738 200.284 41.1052 201.971 41.2899 cv
203.827 41.4932 203.385 41.4625 204.951 42.5338 cv
206.69 43.7231 208.362 43.1067 209.025 41.1623 cv
209.785 38.9304 208.546 36.4708 206.719 35.1651 cv
206.138 34.7506 204.711 33.5367 203.96 34.2312 cv
202.959 35.1578 204.162 36.2038 204.996 37.3074 cv
cp
f
146.284 37.19 mo
145.934 37.6515 145.746 38.1907 145.876 38.8841 cv
146 39.5454 146.864 40.2684 146.049 40.662 cv
144.963 41.1866 142.811 39.6967 142.495 38.6926 cv
141.723 36.2369 145.273 34.0148 147.371 34.1723 cv
149.967 34.3671 146.849 36.4466 146.284 37.19 cv
cp
.000244144 .0955215 .350011 0 cmyk
f
170.75 38.4465 mo
170.599 38.4671 li
169.078 38.7432 168.194 40.4237 166.598 40.7003 cv
166.652 40.4323 166.842 40.2314 167.049 40.0184 cv
167.277 39.7833 167.867 39.8809 168.148 39.6447 cv
168.378 39.4506 168.265 39.1252 168.442 38.9458 cv
169.662 37.712 170.854 37.2696 172.47 36.6791 cv
176.008 35.3872 179.823 35.0173 183.529 35.7452 cv
186.888 36.4048 184.541 38.0148 182.446 38.3648 cv
181.07 38.5945 179.514 38.8192 178.119 38.7339 cv
176.926 38.661 175.751 38.1237 174.543 38.1821 cv
173.826 38.2167 173.278 38.8867 172.643 38.9188 cv
171.897 38.9564 171.55 38.3749 170.75 38.4465 cv
cp
f
149.954 40.5584 mo
150.916 40.9562 151.993 41.1752 152.794 41.4284 cv
156.835 42.7049 162.037 37.8858 164.914 36.6391 cv
164.914 36.6391 163.269 36.5279 157.767 39.9491 cv
154.75 41.8251 149.996 40.4677 149.954 40.5584 cv
cp
.150668 .502739 1 .0413825 cmyk
f
202.236 38.74 mo
202.242 38.4744 202.213 38.2032 202.154 37.9328 cv
201.041 38.3148 197.852 36.1698 192.963 34.8219 cv
195.826 35.9626 199.584 37.5437 202.236 38.74 cv
cp
f
184.231 79.0647 mo
185.31 93.3154 171.642 98.0993 168.459 90.4313 cv
168.37 92.5242 168.288 94.6484 168.253 96.7983 cv
167.4 104.049 188.043 101.736 186.973 95.8476 cv
186.712 94.409 184.627 85.6027 184.231 79.0647 cv
cp
.139284 .296574 .731167 .0284733 cmyk
f
186.261 92.4365 mo
186.384 100.54 167.932 103.469 168.296 95.1266 cv
168.281 95.6837 168.262 96.2376 168.253 96.7983 cv
167.4 104.049 188.043 101.736 186.973 95.8476 cv
186.889 95.3799 186.61 94.1305 186.261 92.4365 cv
cp
.171969 .380102 .80737 .0549325 cmyk
f
86.2145 83.7782 mo
85.6361 73.214 77.07 68.4791 79.6911 61.8045 cv
55.7957 59.8921 li
52.397 71.8529 42.7194 93.8749 65.2878 100.509 cv
76.6322 103.844 86.8202 94.8411 86.2145 83.7782 cv
cp
.0775158 .107179 .218662 .000488289 cmyk
f
86.2145 83.7782 mo
85.6361 73.214 77.07 68.4791 79.6911 61.8045 cv
55.7957 59.8921 li
55.2654 61.7587 54.5821 63.8733 53.8923 66.1334 cv
52.586 70.6752 60.9535 76.6428 69.4124 78.5813 cv
79.4833 80.8892 80.1622 90.3004 71.5271 93.12 cv
64.9477 95.2684 55.7548 94.0011 52.7328 91.2485 cv
54.7637 95.2417 58.6163 98.5479 65.2878 100.509 cv
76.6322 103.844 86.8202 94.8411 86.2145 83.7782 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
80.398 68.7934 mo
79.7511 67.1447 78.7635 64.1665 79.6911 61.8045 cv
55.7957 59.8921 li
55.3447 61.4795 54.7827 63.2467 54.2005 65.1293 cv
53.2782 68.1885 85.2413 78.6062 80.398 68.7934 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
55.7864 95.3558 mo
58.0013 97.4975 61.0804 99.3866 65.2878 100.623 cv
74.5489 103.346 83.533 97.8208 85.513 89.5996 cv
81.7272 97.7021 62.1108 100.989 55.7864 95.3558 cv
cp
f
85.5854 40.1486 mo
85.5854 40.1486 91.3273 55.5524 72.7637 58.958 cv
68.1755 59.7998 44.791 61.5503 43.8394 51.7203 cv
42.4662 57.9097 45.4517 61.462 46.0605 63.0326 cv
45.7991 63.3067 50.1283 64.086 50.1283 64.086 cv
60.0887 64.9825 80.2504 65.9711 85.0376 65.3873 cv
85.0376 65.3873 89.1934 65.9449 90.4122 61.9402 cv
91.1364 59.5608 91.0612 48.1457 85.5854 40.1486 cv
cp
.284215 .737453 .62887 .259556 cmyk
f
46.5344 63.1591 mo
55.4144 63.1591 67.9504 64.4116 75.0892 63.541 cv
82.2281 62.6704 89.1934 65.9449 90.4122 61.9402 cv
91.631 57.9355 90.5863 28.3354 65.3392 32.5143 cv
40.7259 36.5882 40.6144 63.1591 46.5344 63.1591 cv
cp
.337285 .824124 .76141 .472816 cmyk
f
77.7094 33.5671 mo
74.4255 32.1999 70.3644 31.6825 65.3392 32.5143 cv
56.3871 33.996 50.6777 38.4537 47.3199 43.5267 cv
42.8004 51.4004 66.1546 50.7459 77.044 45.454 cv
83.5777 42.2788 81.5744 35.1761 77.7094 33.5671 cv
cp
.312688 .780941 .698695 .373816 cmyk
f
85.5854 40.1486 mo
85.5854 40.1486 91.3273 55.5524 72.7637 58.958 cv
68.1755 59.7998 44.791 61.5503 43.8394 51.7203 cv
42.4662 57.9097 43.9033 63.1591 46.5344 63.1591 cv
55.4144 63.1591 67.9504 64.4116 75.0892 63.541 cv
82.2281 62.6704 89.1934 65.9449 90.4122 61.9402 cv
91.1364 59.5608 91.0612 48.1457 85.5854 40.1486 cv
cp
.377142 .839017 .830503 .588739 cmyk
f
71.4132 34.361 mo
72.1032 36.369 68.3116 39.492 62.9442 41.3365 cv
57.5769 43.181 52.6665 43.0486 51.9764 41.0407 cv
51.2864 39.0327 55.0781 35.9097 60.4454 34.0652 cv
65.8127 32.2207 70.7232 32.3531 71.4132 34.361 cv
cp
.284215 .737453 .62887 .259556 cmyk
f
77.0869 36.9105 mo
77.3472 37.9307 75.3476 39.322 72.6204 40.018 cv
69.8933 40.714 67.4714 40.4512 67.2111 39.431 cv
66.9507 38.4108 68.9504 37.0195 71.6775 36.3235 cv
74.4047 35.6274 76.8265 35.8902 77.0869 36.9105 cv
cp
f
76.4047 46.4816 mo
76.5809 47.1723 75.2272 48.1142 73.3809 48.5854 cv
71.5347 49.0566 69.8952 48.8787 69.7189 48.188 cv
69.5426 47.4973 70.8964 46.5555 72.7426 46.0843 cv
74.5888 45.613 76.2284 45.791 76.4047 46.4816 cv
cp
.312688 .780941 .698695 .373816 cmyk
f
70.6449 47.2213 mo
70.7665 48.3777 68.3591 49.5788 65.2678 49.904 cv
62.1765 50.2291 59.5719 49.5552 59.4503 48.3987 cv
59.3287 47.2423 61.7361 46.0412 64.8273 45.716 cv
67.9186 45.3909 70.5232 46.0648 70.6449 47.2213 cv
cp
f
76.0289 58.3258 mo
76.1505 59.4823 73.7431 60.6833 70.6518 61.0085 cv
67.5605 61.3336 64.956 60.6597 64.8343 59.5033 cv
64.7127 58.3468 67.1201 57.1457 70.2114 56.8206 cv
73.3026 56.4954 75.9072 57.1693 76.0289 58.3258 cv
cp
.377142 .839017 .830503 .588739 cmyk
f
65.752 59.1942 mo
65.751 59.8267 64.3796 60.3374 62.6888 60.3349 cv
60.9981 60.3324 59.6282 59.8177 59.6291 59.1851 cv
59.6301 58.5526 61.0015 58.0419 62.6923 58.0444 cv
64.383 58.0469 65.7529 58.5617 65.752 59.1942 cv
cp
f
71.6905 58.9036 mo
71.7532 59.5706 70.3591 60.2473 68.5765 60.4152 cv
66.794 60.583 65.2982 60.1784 65.2354 59.5115 cv
65.1727 58.8446 66.5669 58.1678 68.3494 58 cv
70.1319 57.8321 71.6277 58.2367 71.6905 58.9036 cv
cp
.337285 .824124 .76141 .472816 cmyk
f
58.0512 57.9452 mo
58.0063 58.4424 56.8924 58.7481 55.5632 58.6279 cv
54.234 58.5078 53.1929 58.0072 53.2378 57.51 cv
53.2827 57.0127 54.3966 56.7071 55.7257 56.8273 cv
57.0549 56.9474 58.0961 57.448 58.0512 57.9452 cv
cp
.377142 .839017 .830503 .588739 cmyk
f
82.8112 54.5011 mo
83.026 54.9518 82.2234 55.7825 81.0186 56.3565 cv
79.8137 56.9305 78.6629 57.0305 78.4481 56.5798 cv
78.2333 56.1291 79.0359 55.2984 80.2407 54.7244 cv
81.4456 54.1504 82.5964 54.0504 82.8112 54.5011 cv
cp
f
69.4718 49.9547 mo
69.509 50.3095 68.7704 50.6777 67.8222 50.7771 cv
66.874 50.8766 66.0751 50.6696 66.0379 50.3149 cv
66.0007 49.9601 66.7392 49.5919 67.6875 49.4925 cv
68.6357 49.393 69.4346 49.6 69.4718 49.9547 cv
cp
.312688 .780941 .698695 .373816 cmyk
f
79.071 48.4432 mo
79.2614 49.03 78.1442 49.9184 76.5756 50.4274 cv
75.007 50.9363 73.5811 50.8733 73.3907 50.2865 cv
73.2003 49.6996 74.3175 48.8113 75.8861 48.3023 cv
77.4546 47.7934 78.8806 47.8564 79.071 48.4432 cv
cp
f
81.6113 44.4267 mo
81.8109 44.7902 81.1852 45.5175 80.2136 46.0512 cv
79.2421 46.5849 78.2926 46.723 78.0929 46.3595 cv
77.8933 45.9961 78.519 45.2688 79.4906 44.7351 cv
80.4621 44.2013 81.4116 44.0633 81.6113 44.4267 cv
cp
f
56.9085 50.284 mo
56.8537 50.9664 55.3304 51.401 53.5061 51.2549 cv
51.6818 51.1087 50.2473 50.437 50.3021 49.7546 cv
50.3569 49.0722 51.8802 48.6375 53.7045 48.7837 cv
55.5288 48.9299 56.9633 49.6016 56.9085 50.284 cv
cp
f
85.1093 401.868 mo
84.1446 391.332 75.411 386.914 77.7859 380.148 cv
53.8366 379.111 li
50.878 391.188 42.0128 413.55 64.8089 419.353 cv
76.2678 422.271 86.1195 412.901 85.1093 401.868 cv
cp
.133852 .211398 .652491 .0180972 cmyk
f
85.1093 401.868 mo
84.1446 391.332 75.411 386.914 77.786 380.148 cv
53.8366 379.111 li
53.3749 380.996 52.7695 383.134 52.1629 385.418 cv
51.0237 390.004 59.604 395.662 68.1282 397.289 cv
78.2768 399.227 79.2998 408.607 70.7736 411.741 cv
64.2773 414.129 55.0442 413.199 51.9234 410.559 cv
54.0992 414.475 58.0701 417.638 64.8089 419.353 cv
76.2678 422.271 86.1195 412.901 85.1093 401.868 cv
cp
.133303 .424353 .707546 .0284123 cmyk
f
78.7482 387.106 mo
78.0414 385.482 76.9455 382.542 77.7859 380.148 cv
53.8366 379.111 li
53.444 380.714 52.9471 382.501 52.4342 384.403 cv
51.6244 387.494 83.9474 396.735 78.7482 387.106 cv
cp
.165011 .53872 .786313 .0507515 cmyk
f
55.1253 414.551 mo
57.4171 416.611 60.5632 418.386 64.8131 419.468 cv
74.1677 421.849 82.9436 415.999 84.6213 407.711 cv
81.1346 415.947 61.6517 419.949 55.1253 414.551 cv
cp
f
50.7195 357.671 mo
50.7195 357.671 43.1371 372.257 61.1449 377.907 cv
65.5957 379.303 88.5907 383.9 90.7372 374.26 cv
91.3432 380.571 87.9457 383.732 87.1494 385.216 cv
87.3753 385.52 82.9834 385.764 82.9834 385.764 cv
72.9881 385.436 52.8569 383.952 48.1769 382.787 cv
48.1769 382.787 43.9842 382.832 43.2642 378.708 cv
42.8364 376.258 44.3069 364.938 50.7195 357.671 cv
cp
.133303 .424353 .707546 .0284123 cmyk
f
86.6636 385.284 mo
77.8503 384.198 65.2552 383.908 58.2764 382.171 cv
51.2976 380.434 43.9842 382.832 43.2642 378.708 cv
42.5442 374.585 47.2006 345.335 71.7473 352.569 cv
95.6777 359.622 92.5392 386.008 86.6636 385.284 cv
cp
.10074 .122683 .381842 .00283818 cmyk
f
59.3411 352.102 mo
62.7676 351.146 66.8615 351.129 71.7473 352.569 cv
80.451 355.134 85.5725 360.257 88.2847 365.703 cv
91.8075 374.07 68.7086 370.564 58.548 363.981 cv
52.4516 360.03 55.3084 353.226 59.3411 352.102 cv
cp
.049958 .110201 .290196 0 cmyk
f
50.7195 357.671 mo
50.7195 357.671 43.1371 372.257 61.1449 377.907 cv
65.5957 379.303 88.5907 383.9 90.7372 374.26 cv
91.3432 380.571 89.275 385.605 86.6636 385.284 cv
77.8503 384.198 65.2552 383.908 58.2764 382.171 cv
51.2976 380.434 43.9842 382.832 43.2642 378.708 cv
42.8364 376.258 44.3069 364.938 50.7195 357.671 cv
cp
.14963 .202853 .480629 .020325 cmyk
f
65.493 353.659 mo
64.5626 355.568 67.944 359.131 73.0455 361.618 cv
78.1469 364.105 83.0367 364.574 83.9671 362.666 cv
84.8975 360.757 81.5161 357.194 76.4147 354.707 cv
71.3132 352.22 66.4234 351.751 65.493 353.659 cv
cp
.00225834 .0822156 .272557 0 cmyk
f
59.5502 355.496 mo
59.167 356.477 60.9816 358.102 63.6031 359.126 cv
66.2247 360.151 68.6605 360.186 69.0436 359.205 cv
69.4268 358.224 67.6123 356.599 64.9907 355.575 cv
62.3692 354.551 59.9333 354.515 59.5502 355.496 cv
cp
f
59.0569 365.079 mo
58.7975 365.743 60.0259 366.843 61.8007 367.536 cv
63.5754 368.23 65.2244 368.254 65.4838 367.59 cv
65.7432 366.926 64.5148 365.826 62.7401 365.132 cv
60.9653 364.439 59.3163 364.415 59.0569 365.079 cv
cp
.049958 .110201 .290196 0 cmyk
f
64.683 366.517 mo
64.4209 367.65 66.6633 369.137 69.6917 369.837 cv
72.72 370.538 75.3874 370.188 75.6496 369.055 cv
75.9117 367.922 73.6693 366.435 70.6409 365.735 cv
67.6126 365.034 64.9452 365.384 64.683 366.517 cv
cp
f
57.9816 376.88 mo
57.7194 378.013 59.9619 379.499 62.9902 380.2 cv
66.0185 380.901 68.686 380.55 68.9481 379.418 cv
69.2102 378.285 66.9678 376.798 63.9395 376.097 cv
60.9111 375.397 58.2437 375.747 57.9816 376.88 cv
cp
.14963 .202853 .480629 .020325 cmyk
f
68.0751 378.999 mo
67.9987 379.626 69.2974 380.301 70.9758 380.505 cv
72.6542 380.71 74.0767 380.366 74.1531 379.738 cv
74.2295 379.11 72.9309 378.436 71.2525 378.232 cv
69.5741 378.027 68.1515 378.371 68.0751 378.999 cv
cp
f
62.2167 377.984 mo
62.0729 378.638 63.3739 379.48 65.1225 379.865 cv
66.8711 380.25 68.4052 380.031 68.549 379.377 cv
68.6928 378.722 67.3919 377.88 65.6433 377.496 cv
63.8946 377.111 62.3605 377.33 62.2167 377.984 cv
cp
.10074 .122683 .381842 .00283818 cmyk
f
75.8709 378.701 mo
75.8546 379.199 76.9228 379.639 78.2567 379.682 cv
79.5906 379.726 80.6851 379.356 80.7014 378.857 cv
80.7176 378.358 79.6494 377.919 78.3155 377.875 cv
76.9816 377.832 75.8871 378.202 75.8709 378.701 cv
cp
.14963 .202853 .480629 .020325 cmyk
f
51.7178 372.255 mo
51.4495 372.676 52.1445 373.598 53.2701 374.315 cv
54.3957 375.032 55.5257 375.272 55.794 374.851 cv
56.0623 374.43 55.3673 373.508 54.2417 372.791 cv
53.1161 372.073 51.9861 371.834 51.7178 372.255 cv
cp
f
65.5131 369.374 mo
65.4328 369.721 66.1207 370.177 67.0497 370.392 cv
67.9787 370.606 68.7968 370.498 68.8771 370.151 cv
68.9574 369.803 68.2694 369.348 67.3405 369.133 cv
66.4115 368.918 65.5934 369.026 65.5131 369.374 cv
cp
.049958 .110201 .290196 0 cmyk
f
56.1707 366.7 mo
55.91 367.259 56.9102 368.277 58.4048 368.974 cv
59.8993 369.671 61.3222 369.783 61.583 369.224 cv
61.8437 368.664 60.8435 367.646 59.3489 366.949 cv
57.8544 366.252 56.4315 366.141 56.1707 366.7 cv
cp
f
54.1407 362.403 mo
53.8981 362.739 54.4302 363.537 55.3292 364.186 cv
56.2282 364.834 57.1536 365.087 57.3962 364.751 cv
57.6388 364.415 57.1067 363.616 56.2077 362.968 cv
55.3087 362.319 54.3833 362.066 54.1407 362.403 cv
cp
f
77.9418 371.237 mo
77.9127 371.921 79.3714 372.538 81.1999 372.616 cv
83.0284 372.694 84.5343 372.203 84.5633 371.519 cv
84.5924 370.835 83.1337 370.217 81.3052 370.139 cv
79.4767 370.061 77.9708 370.553 77.9418 371.237 cv
cp
f
62.7402 134.174 mo
54.0906 134.367 38.8988 137.115 35.7646 149.902 cv
33.0568 160.949 31.1364 171.33 44.4979 178.665 cv
57.8595 186 65.9076 184.112 78.9875 180.475 cv
91.7018 176.939 102.362 172.492 99.9202 160.669 cv
98.2093 152.386 86.2258 133.652 62.7402 134.174 cv
cp
.249821 .575769 .596551 .163027 cmyk
f
99.125 169.02 mo
100.043 166.283 99.3407 161.662 97.3161 158.648 cv
91.8639 150.531 80.2032 147.699 70.8024 148.268 cv
61.0944 148.856 51.1836 152.556 43.6357 158.76 cv
40.224 161.564 36.645 165.029 37.1052 169.872 cv
37.2282 171.168 37.5668 172.497 38.081 173.778 cv
39.6617 175.521 41.7529 177.158 44.498 178.665 cv
57.8595 186 65.0949 185.208 78.1748 181.57 cv
87.3221 179.026 96.2184 174.915 99.125 169.02 cv
cp
.283787 .621637 .671962 .245548 cmyk
f
83.8492 179.024 mo
87.2437 176.802 90.3654 174.247 92.0451 170.815 cv
95.9217 162.895 82.8558 158.131 77.2089 157.359 cv
69.2167 156.266 59.8601 157.417 52.7855 161.497 cv
48.2902 164.089 43.542 168.264 44.7783 174.052 cv
45.1496 175.79 46.1386 178.266 47.567 180.228 cv
59.1592 185.685 65.1952 185.242 77.2418 181.892 cv
78.9064 181.429 83.8492 179.024 83.8492 179.024 cv
cp
.307805 .686091 .715785 .318273 cmyk
f
78.4904 163.258 mo
58.6894 163.521 li
55.1673 164.581 52.1971 166.663 50.8864 169.021 cv
48.414 173.469 53.0241 179.615 58.5121 181.988 cv
69.2591 186.636 82.3961 179.482 84.1071 176.666 cv
86.474 172.771 85.7902 165.564 78.4904 163.258 cv
cp
.331975 .735256 .749508 .416602 cmyk
f
78.4904 163.258 mo
77.1543 162.289 72.9473 163.238 73.245 163.232 cv
58.6894 163.521 li
57.1109 163.996 55.6551 164.684 54.3981 165.503 cv
52.5832 169.278 55.3214 178.766 61.8109 180.357 cv
68.3063 183.326 71.1341 181.598 76.1642 179.589 cv
85.749 176.01 84.0788 165.406 78.4904 163.258 cv
cp
.413672 .767819 .834775 .646693 cmyk
f
54.9941 165.906 mo
54.9941 165.906 60.6743 179.109 60.5693 193.545 cv
60.4642 207.982 65.5347 207.941 73.2677 207.766 cv
83.2839 207.54 78.6626 195.193 76.9379 191.167 cv
75.4484 187.69 72.0509 176.582 76.6655 166.14 cv
77.1468 164.474 74.59 162.848 68.1325 162.12 cv
62.9287 161.533 54.1521 164.648 54.9941 165.906 cv
cp
.0775158 .107179 .218662 .000488289 cmyk
f
74.6514 173.23 mo
75.3765 170.476 77.661 165.73 78.4904 163.258 cv
78.4904 163.258 77.6799 162.355 68.0951 161.941 cv
58.6907 161.535 54.3421 165.527 54.3421 165.527 cv
54.6388 165.97 56.3564 169.876 56.6546 170.441 cv
58.3121 174.59 73.5175 177.303 74.6514 173.23 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
60.487 190.135 mo
60.5459 191.261 60.5776 192.398 60.5693 193.545 cv
60.4642 207.982 65.5347 207.941 73.2677 207.766 cv
78.5828 207.646 83.8146 205.691 76.9379 191.167 cv
77.3233 197.857 60.8912 199.318 60.487 190.135 cv
cp
f
60.6785 197.286 mo
61.4546 207.971 66.271 207.924 73.2677 207.766 cv
77.4828 207.671 81.6741 206.637 79.8012 198.972 cv
79.6022 205.212 62.6796 211.44 60.6785 197.286 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
70.5246 143.891 mo
72.2681 144.365 71.1478 142.599 71.6706 141.663 cv
73.4454 138.486 75.5302 144.703 77.8909 143.868 cv
78.2646 143.736 78.2093 143.218 78.9159 143.176 cv
79.7592 143.126 79.8613 143.881 80.4945 144.083 cv
81.4421 144.386 82.055 144.193 83.0494 144.511 cv
84.1053 144.849 85.1917 145.877 86.2751 146.267 cv
90.3948 147.751 93.9391 151.399 96.6478 154.774 cv
97.9483 156.395 98.9668 158.139 99.7545 159.968 cv
98.6525 155.682 96.4735 151.719 93.5379 148.417 cv
92.105 146.805 90.4878 145.322 88.7375 144.06 cv
88.0132 143.537 87.1803 142.857 86.332 142.544 cv
85.3524 142.182 85.1015 142.504 84.5043 142.464 cv
82.9925 142.365 82.9565 140.283 81.4417 140.029 cv
82.7478 143.349 75.7114 136.613 75.64 136.618 cv
75.177 136.649 74.7052 137.634 74.1357 137.817 cv
73.7726 137.933 73.5126 137.119 73.1901 137.16 cv
72.8747 137.2 72.6695 137.954 72.4915 137.934 cv
71.0112 137.77 70.2856 135.234 69.619 137.847 cv
68.7224 137.319 66.0554 134.748 64.9613 135.623 cv
64.3203 136.137 65.1787 137.025 64.0595 137.202 cv
63.6541 137.265 62.7131 136.372 62.3498 136.239 cv
62.4643 136.846 62.2388 137.333 62.0825 137.786 cv
61.326 137.436 59.517 135.461 58.775 135.582 cv
57.3206 135.821 59.1035 137.8 57.7959 138.531 cv
56.9056 139.029 56.4889 137.378 55.8775 137.671 cv
55.4284 137.887 55.9089 139.312 55.8443 139.808 cv
54.9041 139.481 52.6986 137.479 51.8948 137.518 cv
50.3039 137.596 51.8391 138.992 51.5306 139.872 cv
50.9548 141.514 50.9817 139.594 50.052 140.044 cv
49.2685 140.423 50.3204 141.815 48.9505 141.112 cv
48.6975 140.982 48.7333 139.784 48.2243 139.551 cv
47.1481 139.059 46.6152 145.249 45.1301 143.158 cv
44.6342 142.46 45.609 139.998 44.2138 140.968 cv
43.1133 141.733 43.7242 144.572 42.8968 145.716 cv
42.522 145.06 42.5857 144.015 42.5224 143.188 cv
42.2849 143.428 39.5027 146.895 40.3533 147.043 cv
39.9088 146.966 39.2136 147.11 38.766 147.052 cv
38.7356 147.742 38.8138 149.108 38.1606 149.548 cv
37.2637 150.154 37.2718 149.128 37.5268 148.45 cv
37.2611 145.945 34.6472 154.529 34.3254 156.353 cv
33.669 160.073 33.4102 163.982 34.6013 167.627 cv
33.614 164.604 34.3906 158.946 36.3741 156.434 cv
36.5252 156.243 36.819 156.325 36.8865 156.233 cv
37.0963 155.948 37.2132 155.654 37.4714 155.234 cv
37.9851 154.398 37.4851 153.507 38.8799 153.362 cv
39.1199 154.014 39.3237 154.677 39.8116 155.03 cv
40.032 154.334 39.989 153.538 40.1012 152.804 cv
41.4477 153.152 40.4175 154.997 41.6345 155.381 cv
42.0243 154.499 41.3998 152.322 42.7383 152.293 cv
42.9681 151.34 42.5125 148.098 44.3742 149.505 cv
45.0392 148.079 45.5522 146.905 47.265 147.264 cv
48.7912 147.583 48.0448 148.342 49.1453 149.527 cv
51.5418 152.11 49.8034 147.047 50.1489 146.222 cv
50.7837 144.707 51.3357 146.253 51.7453 145.932 cv
52.4204 145.403 52.1223 144.118 52.7271 143.71 cv
53.2278 143.372 53.8727 143.915 54.399 143.724 cv
55.0575 143.484 55.4512 142.299 56.0307 142.209 cv
57.5958 141.968 58.5893 143.969 60.3633 143.584 cv
60.1251 141.036 62.6782 144.204 63.2406 144.165 cv
62.4732 142.442 63.8562 141.088 65.3819 140.621 cv
65.8501 140.477 65.7444 141.289 66.3579 140.725 cv
66.5219 140.574 66.4575 139.887 66.7627 139.887 cv
68.5252 139.889 68.9373 143.448 70.4998 143.884 cv
70.5246 143.891 li
cp
.196658 .519463 .516747 .082002 cmyk
f
76.9749 167.079 mo
77.5848 165.623 78.1558 164.255 78.4904 163.258 cv
78.4904 163.258 77.6799 162.355 68.0951 161.941 cv
60.9252 161.632 56.0669 163.878 54.3981 165.503 cv
64.8966 161.111 76.9749 167.079 76.9749 167.079 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
395.754 96.6236 mo
394.5 91.7454 392.548 74.8806 392.548 74.8806 cv
383.072 72.904 li
380.682 79.8802 375.823 98.0174 381.259 99.8293 cv
384.186 102.896 387.531 100.387 388.367 99.8293 cv
390.597 101.084 397.009 101.502 395.754 96.6236 cv
cp
.0775158 .107179 .218662 .000488289 cmyk
f
391.517 97.2228 mo
391.342 97.1642 391.168 97.0852 390.998 96.9847 cv
389.677 96.2021 389.206 94.7097 389.091 93.2611 cv
389.001 92.1326 388.839 89.9562 389.632 89.0833 cv
391.275 87.2765 392.281 90.5614 392.772 91.5853 cv
393.332 92.7558 394.137 93.9658 394.167 95.3054 cv
394.2 96.8365 393.019 97.7256 391.517 97.2228 cv
cp
395.754 96.6236 mo
394.5 91.7454 392.548 74.8806 392.548 74.8806 cv
383.072 72.904 li
382.274 75.2355 381.2 78.8149 380.326 82.6136 cv
382.67 84.8148 390.331 88.3068 387.962 93.4698 cv
384.425 101.178 379.155 94.6205 378.789 94.0624 cv
378.85 97.0398 379.537 99.2553 381.259 99.8293 cv
384.186 102.896 387.531 100.387 388.367 99.8293 cv
390.597 101.084 397.009 101.502 395.754 96.6236 cv
cp
.142947 .161105 .316838 .0089723 cmyk
f
393.972 86.0599 mo
393.189 80.4149 392.548 74.8806 392.548 74.8806 cv
383.072 72.904 li
382.338 75.0469 381.372 78.2447 380.542 81.6973 cv
392.73 90.9186 394.175 87.5248 393.972 86.0599 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
395.754 96.6236 mo
395.731 96.5296 li
396.212 100.917 390.236 100.974 387.777 97.1544 cv
387.766 97.1422 li
388.13 101.145 382.097 101.145 381.849 98.9136 cv
381.498 99.0222 381.095 98.9876 380.681 98.7245 cv
380.062 98.3302 379.605 97.8377 379.215 97.2956 cv
379.596 98.5863 380.248 99.4923 381.259 99.8293 cv
384.186 102.896 387.531 100.387 388.367 99.8293 cv
390.597 101.084 397.009 101.502 395.754 96.6236 cv
cp
f
387.94 81.522 mo
381.3 82.7362 381.048 81.2282 379.409 79.1791 cv
375.417 78.8262 373.263 74.2067 373.654 72.8177 cv
372.361 70.3323 370.189 65.7479 371.349 61.3634 cv
371 59.8018 371.447 58.4459 371.682 57.109 cv
371.974 55.4454 373.248 53.7465 373.248 53.7465 cv
373.607 51.2494 374.652 48.5339 376.01 48.253 cv
376.572 47.1021 376.01 47.2073 377.6 45.0905 cv
378.417 44.0025 378.823 42.8815 379.818 42.6658 cv
380.005 41.6514 380.522 40.2009 381.66 39.7318 cv
382.558 39.3613 383.245 38.0596 383.85 37.3805 cv
383.832 36.7189 384.72 36.16 385.577 35.596 cv
386.159 35.2133 386.644 34.6228 387.606 34.3943 cv
387.778 34.1134 387.871 33.4579 389.073 32.9585 cv
389.967 32.2091 391.031 32.2556 391.258 32.2718 cv
393.035 32.5912 393.425 32.3275 393.658 32.2926 cv
395.768 31.9753 396.092 34.4424 396.892 35.1591 cv
397.911 36.0728 397.298 37.2347 397.721 38.6342 cv
398.452 40.0751 397.859 40.5277 398.296 40.6214 cv
399.233 41.1208 399.308 43.9815 399.42 44.3357 cv
399.919 45.1941 399.982 46.8484 399.982 46.8484 cv
401.25 48.4958 402.323 53.8089 402.151 55.9626 cv
403.306 57.1955 403.926 59.5014 404.18 61.1284 cv
404.275 61.7374 403.696 62.4038 403.983 62.9763 cv
405.273 65.5566 405.849 67.3233 405.275 70.6764 cv
403.622 76.1753 402.949 74.7734 401.987 75.9026 cv
400.565 77.8039 399.519 79.1062 398.233 78.9633 cv
397.943 79.5978 394.989 81.1622 393.432 81.4471 cv
391.98 81.7126 388.777 81.7423 387.94 81.522 cv
cp
.114656 .167941 .259129 .00588998 cmyk
f
380.695 62.6071 mo
380.794 64.5779 380.893 65.6126 379.809 67.5834 cv
379.116 68.8421 378.823 70.244 379.07 70.3425 cv
379.316 70.4411 385.031 70.2933 384.933 67.6327 cv
384.834 64.9721 382.765 63.0013 380.695 62.6071 cv
cp
.443458 .702693 .821744 .685634 cmyk
f
378.743 76.3192 mo
378.396 76.1063 378.111 75.6574 377.929 74.899 cv
377.491 73.0696 378.544 71.271 380.095 70.8759 cv
380.58 70.7524 383.358 70.1776 383.652 70.738 cv
384.236 71.8779 380.595 77.4548 378.743 76.3192 cv
cp
f
379.513 55.8078 mo
379.246 57.2422 380.301 59.6509 380.449 60.7841 cv
380.597 61.9173 380.942 61.6217 381.73 62.1637 cv
382.518 62.7057 384.07 64.0578 384.44 63.3462 cv
385.721 60.8827 380.03 53.037 379.513 55.8078 cv
cp
f
382.341 77.3046 mo
381.392 75.5692 383.565 72.3292 385.181 71.6883 cv
387.168 70.8999 388.745 71.9034 389.293 73.4807 cv
389.704 74.6646 387.682 77.2818 386.995 78.0847 cv
385.698 79.5994 384.276 78.9117 382.849 77.8756 cv
382.627 77.7139 382.46 77.521 382.341 77.3046 cv
cp
f
385.719 67.4856 mo
386.124 69.1379 383.411 70.9761 386.168 70.6154 cv
388.925 70.2548 395.061 65.6554 392.277 64.7163 cv
386.229 62.6758 384.771 63.6232 385.719 67.4856 cv
cp
f
385.381 60.9302 mo
385.188 62.557 385.295 63.7746 387.493 62.9127 cv
389.691 62.0507 391.673 64.7659 392.923 64.1625 cv
394.173 63.5592 392.966 56.3187 390.725 58.215 cv
388.484 60.1113 385.597 59.1201 385.381 60.9302 cv
cp
f
383.226 52.1813 mo
382.596 53.4417 381.443 54.8111 381.788 55.3283 cv
382.412 56.2634 384.519 60.2837 385.08 59.7666 cv
385.64 59.2494 389.734 58.7753 389.045 57.3531 cv
388.751 56.7479 387.019 55.1982 385.467 55.7154 cv
383.387 56.4088 383.845 50.9434 383.226 52.1813 cv
cp
f
388.926 70.7566 mo
388.878 71.5761 390.155 72.487 390.201 73.3066 cv
390.246 74.1262 391.248 76.4485 392.978 76.5396 cv
394.709 76.6306 397.623 70.62 395.619 68.2522 cv
393.616 65.8844 394.071 65.3263 393.297 66.6585 cv
391.339 70.0281 388.971 69.9825 388.926 70.7566 cv
cp
f
389.745 74.9914 mo
388.291 76.5846 385.813 79.9409 389.473 80.2307 cv
390.568 80.3174 391.645 80.0211 392.659 79.6518 cv
393.615 79.3038 395.126 78.1673 393.069 77.5413 cv
389.928 76.5851 390.404 74.2703 389.745 74.9914 cv
cp
f
384.6 49.4918 mo
384.436 50.4426 383.689 51.2221 384.145 52.1328 cv
384.6 53.0435 384.19 55.4114 386.285 54.956 cv
388.379 54.5007 385.237 45.8035 384.6 49.4918 cv
cp
f
394.89 76.0394 mo
394.437 76.7796 393.781 78.7808 395.311 79.0862 cv
398.925 79.8002 398.206 70.6306 394.89 76.0394 cv
cp
f
387.059 48.6267 mo
385.593 49.0837 387.59 51.89 387.666 52.9525 cv
387.742 54.015 387.315 54.7218 388.856 56.038 cv
390.398 57.3542 391.46 57.6578 392.371 56.7471 cv
393.282 55.8364 396.103 45.8069 387.059 48.6267 cv
cp
f
402.648 61.0347 mo
402.258 61.292 400.265 61.4105 400.073 60.805 cv
399.881 60.1954 398.48 58.226 398.025 57.1646 cv
397.276 55.4175 399.77 53.3359 399.06 51.1724 cv
400.614 51.1078 400.564 56.0869 400.766 57.0764 cv
401.122 58.8151 401.824 59.5672 402.648 61.0347 cv
cp
f
384.097 39.6226 mo
383.625 40.4382 382.936 41.9238 383.882 41.6349 cv
384.348 41.4924 384.598 40.7895 384.929 40.4707 cv
385.34 40.0741 385.898 39.8249 386.405 39.5775 cv
386.968 39.3029 387.552 38.9558 387.68 38.2889 cv
387.778 37.7764 387.564 37.1681 386.993 37.0848 cv
385.986 36.9379 384.936 38.4819 384.396 39.1544 cv
384.338 39.2275 384.225 39.4002 384.097 39.6226 cv
cp
f
389.22 43.9852 mo
388.978 45.3782 385.807 48.0575 386.66 48.1144 cv
387.514 48.1713 390.872 46.5776 392.921 48.3421 cv
394.97 50.1065 390.359 37.4396 389.22 43.9852 cv
cp
f
389.98 37.6559 mo
389.187 38.0049 387.601 37.9925 387.917 36.7577 cv
388.077 36.132 389.26 35.6854 389.778 35.4749 cv
390.201 35.3031 391.175 34.6585 391.624 34.921 cv
392.611 35.4984 390.621 37.321 390.08 37.6074 cv
389.98 37.6559 li
cp
f
393.877 34.5966 mo
393.756 34.4666 393.618 34.3787 393.462 34.3665 cv
392.977 34.329 392.669 35.039 392.437 35.362 cv
392.043 35.9119 391.655 36.457 392.347 36.8894 cv
392.907 37.2391 393.691 37.5762 394.355 37.6084 cv
395.616 37.6696 394.855 36.5921 394.54 35.888 cv
394.405 35.5846 394.199 34.9421 393.877 34.5966 cv
cp
f
383.537 39.447 mo
384.021 38.5482 385.565 38.0283 385.585 36.9062 cv
384.193 37.0395 381.389 40.0233 381.275 41.5205 cv
381.191 42.6184 382.077 42.518 382.7 41.9202 cv
383.247 41.3945 383.172 40.1257 383.537 39.447 cv
cp
f
388.433 35.5537 mo
387.974 35.9749 387.56 36.3722 386.967 36.5932 cv
386.74 36.6777 385.811 36.9775 386.012 36.4183 cv
386.212 35.8586 387.186 35.5887 387.615 35.2062 cv
388.078 34.792 388.348 34.3869 388.72 33.9108 cv
389.333 33.1269 390.939 33.2634 389.976 34.3255 cv
389.539 34.808 388.913 35.1127 388.433 35.5537 cv
cp
f
384.873 36.8526 mo
385.477 36.4774 386.084 35.7865 386.474 35.5134 cv
386.816 35.2734 387.432 35.0405 387.49 34.5711 cv
386.763 34.7123 386.288 35.2673 385.715 35.6914 cv
385.179 36.0875 384.219 36.3819 383.99 37.0854 cv
384.265 37.1503 384.568 37.0414 384.873 36.8526 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
392.935 33.1826 mo
392.413 33.0811 390.353 32.9583 390.618 33.9791 cv
390.761 34.5273 391.731 34.7627 392.207 34.6721 cv
392.615 34.5945 393.116 34.1238 393.324 33.7712 cv
393.599 33.3062 393.451 33.2829 392.935 33.1826 cv
cp
.443458 .702693 .821744 .685634 cmyk
f
389.9 33.1065 mo
389.936 33.1047 li
390.483 33.1173 390.735 33.1198 391.282 32.8781 cv
391.487 32.7872 393.073 33.2099 393.035 32.5471 cv
393.033 32.5508 391.976 32.59 391.207 32.3554 cv
390.841 32.2436 389.577 32.6141 389.327 32.9322 cv
389.026 33.3154 389.68 33.1273 389.9 33.1065 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
387.861 34.4036 mo
387.841 34.5767 388.981 33.4027 388.966 33.303 cv
389.176 32.7589 387.779 33.8466 387.861 34.4036 cv
cp
f
382.634 43.9758 mo
382.327 44.6282 380.972 45.1264 380.5 45.8757 cv
380.02 46.6381 379.396 49.0515 378.421 49.2637 cv
376.662 49.6469 378.354 46.3787 378.666 45.8747 cv
379.193 45.0203 379.453 43.9179 380.183 43.1965 cv
380.851 42.5366 383.274 42.6115 382.634 43.9758 cv
cp
.443458 .702693 .821744 .685634 cmyk
f
377.602 50.4244 mo
378.105 51.3829 378.056 51.9097 377.437 52.9545 cv
377.038 53.6275 375.944 55.7613 375.115 55.8661 cv
373.811 56.0309 374.99 52.4771 375.165 51.7852 cv
375.253 51.4384 376.197 47.6735 376.967 48.4435 cv
377.235 48.7114 377.37 49.9814 377.602 50.4244 cv
cp
f
379.255 43.3854 mo
379.336 43.1947 379.759 42.7836 379.359 42.859 cv
378.82 42.8769 378.494 43.9425 378.208 44.3153 cv
377.737 44.9278 377.323 45.5794 376.941 46.2505 cv
376.724 46.6325 376.128 47.9708 377.141 47.4982 cv
377.695 47.24 377.87 46.5986 378.011 46.0603 cv
378.191 45.3754 378.456 44.8483 378.795 44.2236 cv
378.913 44.0067 379.125 43.6889 379.255 43.3854 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
380.717 42.043 mo
380.952 41.6023 381.114 41.0955 381.301 40.6472 cv
381.395 40.4217 381.511 40.2409 381.554 39.9967 cv
381.125 40.1243 380.477 41.2415 380.276 41.684 cv
380.085 42.1032 379.999 43.1291 380.536 42.344 cv
380.601 42.2485 380.661 42.1476 380.717 42.043 cv
cp
f
375.143 58.8537 mo
375.261 60.4215 374.705 61.9017 374.191 63.3715 cv
373.788 64.5254 373.267 65.6845 373.033 66.8806 cv
371.895 66.4618 372.284 62.6987 372.482 61.656 cv
372.717 60.4172 373.312 59.4334 373.385 58.1725 cv
373.458 56.9234 373.077 55.7014 373.953 54.6378 cv
374.486 55.6799 374.941 57.3371 375.105 58.5013 cv
375.122 58.6193 375.134 58.7367 375.143 58.8537 cv
cp
.443458 .702693 .821744 .685634 cmyk
f
375.383 49.7613 mo
375.552 49.3248 375.735 48.8968 375.798 48.4597 cv
375.227 48.7725 374.349 50.0842 373.577 52.7941 cv
373.461 53.2022 373.503 53.614 373.737 53.9644 cv
374.634 52.4966 374.912 50.977 375.383 49.7613 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
371.467 60.6254 mo
371.603 59.8513 371.622 59.2109 371.698 58.6149 cv
371.902 57.0003 372.696 55.2543 372.937 54.6483 cv
373.551 54.576 372.587 61.1076 371.696 60.9022 cv
371.598 60.8173 371.447 60.7376 371.467 60.6254 cv
cp
f
371.615 65.3767 mo
371.465 64.5419 371.751 63.5838 371.284 62.9003 cv
370.656 64.7405 372.285 69.2659 373.212 71.3604 cv
373.553 72.1324 373.713 72.9641 374.686 73.1161 cv
374.73 72.1574 374.293 69.7271 373.794 68.904 cv
373.029 67.6425 371.922 67.0779 371.615 65.3767 cv
cp
.443458 .702693 .821744 .685634 cmyk
f
404.032 66.8791 mo
404.383 65.5515 404.135 64.1458 403.473 62.9485 cv
403.195 62.4473 403.185 62.0499 402.619 61.7789 cv
402.454 61.6996 401.266 61.7213 401.281 61.7699 cv
401.549 62.6785 402.045 63.6212 402.009 64.6012 cv
401.963 65.8592 401.648 66.2644 401.949 67.5027 cv
402.078 68.0316 402.182 70.2341 402.864 70.1999 cv
403.49 70.1685 403.892 67.4083 404.032 66.8791 cv
cp
f
398.101 44.4299 mo
397.85 44.0057 396.959 43.0788 396.539 43.5872 cv
396.233 43.9578 396.878 45.28 396.968 45.6976 cv
397.11 46.3563 396.883 46.8567 396.9 47.4411 cv
396.927 48.3367 397.895 49.624 398.612 50.2355 cv
398.995 50.5629 399.721 50.9211 400.191 51.1252 cv
400.292 50.0025 399.802 48.7935 399.365 47.7804 cv
398.896 46.6887 398.712 45.4626 398.101 44.4299 cv
cp
f
395.436 36.0265 mo
395.052 36.1569 395.52 37.1576 395.44 37.4874 cv
395.351 37.8509 394.974 38.0792 394.942 38.467 cv
394.907 38.8878 395.288 39.2964 395.412 39.6844 cv
395.712 40.6403 395.872 41.2946 396.505 42.1036 cv
396.799 42.4805 397.116 42.9422 397.535 43.1567 cv
398.132 40.7987 397.173 39.4548 396.376 37.2456 cv
396.265 36.9376 396.101 36.163 395.726 36.0472 cv
395.598 36.0076 395.503 36.0035 395.436 36.0265 cv
cp
f
396.271 35.7179 mo
396.126 35.653 395.562 34.3917 395.38 34.1738 cv
394.961 33.6733 394.438 33.1176 393.828 32.9169 cv
393.771 33.4261 393.929 33.8914 394.137 34.3583 cv
394.512 35.2016 394.73 35.2379 395.397 35.4582 cv
395.697 35.5572 395.988 35.591 396.271 35.7179 cv
cp
f
396.349 34.7335 mo
396.17 34.633 395.72 33.467 395.473 33.2025 cv
395.046 32.7478 394.5 32.2173 393.831 32.3078 cv
393.883 33.0212 394.733 32.854 395.196 33.2191 cv
395.717 33.6314 395.785 34.4171 396.349 34.7335 cv
cp
.230777 .360174 .518303 .105592 cmyk
f
397.418 37.8505 mo
397.357 37.3366 397.475 36.7846 397.345 36.2792 cv
397.333 36.2331 396.752 34.9736 396.65 35.2907 cv
396.309 36.3554 397.052 38.004 397.425 39.0238 cv
397.567 39.4113 397.662 39.7825 397.943 40.086 cv
398.023 39.3316 397.506 38.5941 397.418 37.8505 cv
cp
f
399.521 46.6034 mo
399.793 45.7015 399.412 45.23 399.169 44.432 cv
398.858 43.4085 398.913 42.3062 398.625 41.2709 cv
398.488 41.2709 li
398.227 41.9527 398.158 42.9774 398.289 43.689 cv
398.409 44.3403 398.86 45.0578 399.1 45.6926 cv
399.225 46.0233 399.315 46.3182 399.521 46.6034 cv
cp
f
400.761 48.9662 mo
400.513 48.1147 400.276 47.4748 400.152 47.57 cv
400.034 47.57 li
399.829 48.2215 400.376 48.8907 400.582 49.477 cv
400.85 50.2386 401.047 51.1167 401.024 51.9262 cv
400.981 53.4965 400.724 54.619 401.798 55.9065 cv
402.066 54.8003 401.591 53.6648 401.592 52.5505 cv
401.592 52.3076 401.164 50.3553 400.761 48.9662 cv
cp
f
403.829 61.6662 mo
404.089 60.5969 402.566 55.0244 401.567 56.6086 cv
400.866 57.7214 402.59 59.464 403.012 60.4176 cv
403.235 60.9234 403.311 61.4883 403.829 61.6662 cv
cp
f
405.104 67.0199 mo
405.474 69.2768 404.193 73.3779 403.29 74.286 cv
403.21 74.3665 403.092 74.3619 402.979 74.3405 cv
403.981 72.551 403.311 71.8021 403.959 69.8569 cv
404.23 69.0435 404.619 68.4403 404.704 67.5479 cv
404.753 67.0317 404.742 66.5163 404.809 66.0024 cv
404.937 66.2514 405.036 66.602 405.104 67.0199 cv
cp
f
383.051 81.6153 mo
381.192 81.4246 379.781 79.8522 379.784 78.023 cv
379.788 76.212 380.42 76.7197 381.645 77.8437 cv
385.161 81.0703 388.453 79.3866 387.742 80.9944 cv
387.449 81.6572 383.637 81.6755 383.051 81.6153 cv
cp
.443458 .702693 .821744 .685634 cmyk
f
376.806 73.4707 mo
376.948 73.4628 li
378.418 73.2114 378.683 68.2241 378.678 67.2239 cv
378.667 64.7066 376.706 61.722 375.994 61.8785 cv
374.933 62.112 374.158 64.6543 374.022 65.602 cv
373.79 67.2071 374.302 69.0547 374.841 70.5569 cv
375.09 71.2533 375.866 73.4146 376.806 73.4707 cv
cp
f
379.195 65.5804 mo
378.464 63.9316 377.494 62.0788 376.394 60.9783 cv
375.293 59.8778 376.088 55.7707 377.294 54.4753 cv
379.995 51.5739 378.16 56.2232 379.095 58.6772 cv
380.696 62.8791 379.975 67.3398 379.195 65.5804 cv
cp
f
378.661 52.7953 mo
378.365 51.3362 380.521 45.5464 382.21 45.3529 cv
383.543 45.2002 384.029 48.4356 383.962 49.4457 cv
383.837 51.3326 379.455 56.7076 378.661 52.7953 cv
cp
f
401.358 68.0546 mo
402.341 69.3294 399.721 73.376 398.353 73.7854 cv
395.437 74.6572 397.071 69.1542 397.759 69.3451 cv
399.374 69.7931 400.287 69.0493 401.358 68.0546 cv
cp
f
400.059 62.2875 mo
401.863 62.9282 401.371 65.617 400.823 67.0225 cv
399.859 69.4933 398.832 69.0474 396.848 68.0544 cv
395.634 67.447 394.897 66.1096 394.193 64.7916 cv
393.474 63.4449 399.317 62.0241 400.059 62.2875 cv
cp
f
399.125 60.4657 mo
400.036 62.2871 396.09 62.2112 395.027 62.7425 cv
393.965 63.2737 393.358 58.872 393.13 58.189 cv
392.902 57.506 393.427 55.6332 393.965 54.015 cv
394.443 52.5793 398.215 58.6443 399.125 60.4657 cv
cp
f
383.725 46.617 mo
383.399 45.6751 383.395 44.4519 383.558 43.8992 cv
383.985 42.4482 385.479 43.0517 386.578 43.139 cv
387.292 43.1957 388.893 43.4625 388.311 44.5286 cv
387.9 45.2806 387.381 45.9833 386.788 46.6007 cv
386.399 47.0058 385.693 47.8475 385.07 47.8598 cv
384.396 47.8732 383.969 47.3244 383.725 46.617 cv
cp
f
397.999 50.4852 mo
398.615 51.8022 398.678 53.9861 397.737 55.1722 cv
396.491 56.7434 396.03 54.455 394.969 53.4636 cv
394.117 52.6672 394.287 51.9841 393.946 50.4481 cv
393.604 48.9113 393.658 49.2424 394.401 48.3421 cv
395.405 47.1267 397.594 49.6205 397.999 50.4852 cv
cp
f
393.255 42.3945 mo
394.368 42.0007 396.37 41.0104 395.971 43.8054 cv
395.817 44.879 396.914 46.111 396.295 46.9762 cv
394.589 49.3559 393.362 45.4942 392.865 44.3578 cv
392.469 43.4539 392.213 43.0493 392.582 42.7296 cv
392.716 42.6133 392.933 42.5083 393.255 42.3945 cv
cp
f
386.093 40.3556 mo
386.976 39.9006 387.754 39.5856 388.499 38.8884 cv
389.433 38.0138 390.201 38.306 390.567 39.5073 cv
391.114 41.3071 389.904 41.3999 388.995 42.5843 cv
388.506 43.2224 387.182 43.0363 386.534 42.8221 cv
386.087 42.6742 385.042 42.2916 384.96 41.7768 cv
384.929 41.5822 384.991 41.3874 385.105 41.2053 cv
385.339 40.8325 385.788 40.5127 386.093 40.3556 cv
cp
f
391.97 37.5002 mo
392.769 37.4988 393.376 37.8197 393.961 38.351 cv
394.532 38.8702 395.273 39.8818 395.208 40.7015 cv
395.104 42.0266 393.736 41.5879 392.867 41.8469 cv
391.423 42.277 391.146 42.0005 391.269 41.4782 cv
391.392 40.956 391.146 39.8809 390.716 38.8979 cv
390.31 37.9702 390.944 37.5784 391.721 37.5109 cv
391.97 37.5002 li
cp
f
373.907 74.1059 mo
373.859 73.9301 375.28 73.5741 376.063 73.7521 cv
377.318 74.0373 377.375 75.8627 379.249 78.9343 cv
377.962 79.1033 376.008 77.3721 374.839 75.7922 cv
374.373 75.1628 374.032 74.5575 373.907 74.1059 cv
cp
f
398.523 76.718 mo
398.663 75.7539 398.128 75.2866 398.696 74.4226 cv
399.138 73.7501 400.034 73.5285 400.593 72.9774 cv
400.97 72.6058 401.138 71.9987 401.545 71.6422 cv
403.214 70.1797 402.769 72.5286 402.401 73.578 cv
401.714 75.5422 400.354 77.7536 398.344 78.5166 cv
398.315 78.3649 398.306 78.2131 398.312 78.0606 cv
398.327 77.6234 398.454 77.1804 398.523 76.718 cv
cp
f
397.468 79.1303 mo
396.757 78.9843 396.111 79.5531 395.422 79.5731 cv
394.938 79.5871 394.428 79.4234 393.948 79.5035 cv
393.4 79.5951 392.904 80.028 392.361 80.1995 cv
391.548 80.4566 390.741 80.4799 389.903 80.5616 cv
389.602 80.5907 388.617 80.5168 388.87 81.1353 cv
389.013 81.4867 389.655 81.455 389.952 81.4627 cv
391.066 81.4914 392.166 81.3037 393.268 81.1651 cv
393.589 81.1247 393.911 81.0611 394.227 80.9757 cv
394.815 80.8174 398.134 79.2599 397.468 79.1303 cv
cp
f
399.516 53.7022 mo
399.144 56.2356 399.327 58.0621 400.701 60.2772 cv
400.902 60.6008 401.105 60.9202 401.301 61.2406 cv
401.867 61.2529 402.455 61.1623 402.648 61.0346 cv
401.824 59.5672 401.122 58.8151 400.766 57.0764 cv
400.573 56.1321 400.608 51.5591 399.261 51.1993 cv
399.58 51.9474 399.655 52.7483 399.516 53.7022 cv
cp
.222202 .466835 .527855 .113649 cmyk
f
382.925 39.9795 mo
383.452 38.8615 384.423 38.0466 385.387 37.3128 cv
385.53 37.2326 li
385.562 37.129 385.583 37.0214 385.585 36.9062 cv
384.193 37.0395 381.389 40.0232 381.275 41.5205 cv
381.202 42.4781 381.867 42.5238 382.451 42.1232 cv
382.526 41.3922 382.6 40.6694 382.925 39.9795 cv
cp
f
386.967 36.5932 mo
386.996 36.5794 li
387.472 36.0749 388.015 35.6426 388.59 35.2258 cv
388.708 35.1403 388.825 35.0513 388.943 34.9626 cv
389.056 34.8392 li
389.326 34.5407 389.63 34.4022 389.932 34.3669 cv
389.976 34.3255 li
390.939 33.2634 389.333 33.1269 388.72 33.9108 cv
388.348 34.387 388.078 34.792 387.615 35.2062 cv
387.186 35.5887 386.212 35.8586 386.012 36.4183 cv
385.811 36.9775 386.74 36.6777 386.967 36.5932 cv
cp
f
392.935 33.1826 mo
392.413 33.0811 390.353 32.9583 390.618 33.9791 cv
390.732 34.1954 li
390.908 34.1453 li
391.554 33.8575 392.279 33.8963 392.768 34.3812 cv
393 34.1997 393.208 33.968 393.324 33.7712 cv
393.599 33.3062 393.451 33.2828 392.935 33.1826 cv
cp
f
378.338 49.2725 mo
378.377 49.1797 378.418 49.0875 378.458 48.9948 cv
378.639 48.1551 378.849 47.3237 379.186 46.5269 cv
379.493 45.7996 379.875 45.0259 380.446 44.4613 cv
380.981 43.9318 381.624 43.4829 382.076 42.8763 cv
381.45 42.6976 380.552 42.832 380.183 43.1965 cv
379.453 43.9179 379.193 45.0203 378.666 45.8747 cv
378.36 46.3696 376.731 49.5214 378.338 49.2725 cv
cp
f
374.98 55.8592 mo
375.736 54.0714 377.184 52.5936 377.573 50.6796 cv
377.632 50.488 li
377.602 50.4243 li
377.37 49.9814 377.235 48.7114 376.967 48.4435 cv
376.197 47.6735 375.253 51.4384 375.165 51.7852 cv
374.997 52.4501 373.908 55.7482 374.98 55.8592 cv
cp
f
373.363 61.9481 mo
373.787 60.8996 374.61 59.7087 374.607 58.5614 cv
374.605 57.7085 374.542 56.8607 374.504 56.0099 cv
374.338 55.506 374.152 55.0275 373.953 54.6378 cv
373.077 55.7014 373.458 56.9234 373.385 58.1725 cv
373.312 59.4334 372.717 60.4172 372.482 61.656 cv
372.284 62.6987 371.895 66.4618 373.033 66.8806 cv
373.047 66.8158 li
372.811 65.161 372.757 63.4464 373.363 61.9481 cv
cp
f
373.546 70.6416 mo
373.295 69.3323 372.617 68.2157 372.286 66.9754 cv
371.984 66.5444 371.737 66.0501 371.615 65.3767 cv
371.465 64.5419 371.751 63.5838 371.284 62.9003 cv
370.656 64.7405 372.285 69.2658 373.212 71.3604 cv
373.489 71.9867 373.654 72.6459 374.222 72.956 cv
373.949 72.199 373.698 71.4357 373.546 70.6416 cv
cp
f
403.473 62.9485 mo
403.195 62.4472 403.185 62.0499 402.619 61.7789 cv
402.526 61.7346 402.115 61.7218 401.772 61.7277 cv
401.858 61.8769 401.924 62.0508 401.954 62.2638 cv
401.976 62.4672 li
402.318 63.192 402.553 63.9558 402.561 64.8183 cv
402.577 66.6603 402.436 68.3608 402.726 70.1704 cv
402.864 70.1999 li
403.49 70.1685 403.892 67.4083 404.032 66.8791 cv
404.383 65.5515 404.135 64.1458 403.473 62.9485 cv
cp
f
399.365 47.7804 mo
398.896 46.6887 398.712 45.4626 398.101 44.4299 cv
397.85 44.0057 396.959 43.0788 396.539 43.5872 cv
396.49 43.6474 396.472 43.7386 396.466 43.8409 cv
396.78 44.4565 397.091 45.0937 397.277 45.7506 cv
397.497 46.5273 397.57 47.3168 397.944 48.0432 cv
398.376 48.8803 398.759 49.6622 399.01 50.5179 cv
399.389 50.754 399.855 50.9792 400.191 51.1252 cv
400.292 50.0025 399.802 48.7935 399.365 47.7804 cv
cp
f
396.376 37.2456 mo
396.265 36.9376 396.101 36.163 395.726 36.0472 cv
395.598 36.0076 395.503 36.0035 395.436 36.0265 cv
395.052 36.1569 395.52 37.1576 395.44 37.4874 cv
395.407 37.5799 li
395.681 38.5846 395.607 39.6234 395.9 40.646 cv
395.987 40.949 396.064 41.2516 396.132 41.5545 cv
396.236 41.733 396.356 41.9139 396.505 42.1035 cv
396.799 42.4805 397.116 42.9422 397.535 43.1567 cv
398.132 40.7987 397.173 39.4548 396.376 37.2456 cv
cp
f
383.894 40.5635 mo
384.88 39.3626 386.383 38.598 387.651 37.6911 cv
387.559 37.3868 387.344 37.1361 386.993 37.0848 cv
385.986 36.9378 384.936 38.4819 384.396 39.1544 cv
384.338 39.2275 384.225 39.4001 384.097 39.6226 cv
383.813 40.1143 383.452 40.8474 383.415 41.2905 cv
383.55 41.0398 383.704 40.7954 383.894 40.5635 cv
cp
f
388.885 36.8921 mo
389.334 36.6938 389.892 36.5708 390.285 36.2652 cv
390.784 35.8771 391.267 35.5159 391.893 35.3707 cv
391.891 35.1883 391.813 35.0316 391.624 34.921 cv
391.175 34.6585 390.201 35.3031 389.778 35.4749 cv
389.26 35.6854 388.077 36.132 387.917 36.7577 cv
387.841 37.052 387.876 37.2751 387.981 37.4422 cv
388.246 37.2297 388.542 37.0433 388.885 36.8921 cv
cp
f
392.818 35.1266 mo
393.58 35.8722 394.218 36.6914 394.758 37.5733 cv
395.417 37.3844 394.812 36.4972 394.54 35.888 cv
394.405 35.5846 394.199 34.9421 393.877 34.5966 cv
393.756 34.4666 393.618 34.3786 393.462 34.3665 cv
393.12 34.3401 392.867 34.6851 392.665 35.0044 cv
392.818 35.1266 li
cp
f
394.468 34.5574 mo
394.708 34.8038 394.915 35.0762 395.106 35.3602 cv
395.194 35.3909 395.288 35.422 395.397 35.4582 cv
395.697 35.5572 395.988 35.591 396.271 35.7179 cv
396.126 35.6529 395.562 34.3916 395.38 34.1738 cv
394.961 33.6733 394.438 33.1176 393.828 32.9169 cv
393.774 33.4044 393.918 33.8516 394.112 34.2985 cv
394.24 34.3673 394.363 34.4488 394.468 34.5574 cv
cp
f
379.978 79.1718 mo
380.422 80.4718 381.598 81.4663 383.051 81.6153 cv
383.632 81.675 387.38 81.6566 387.729 81.01 cv
384.987 81.4085 381.544 81.2148 379.978 79.1718 cv
cp
.26215 .554681 .613275 .185946 cmyk
f
375.616 70.961 mo
375.644 69.733 375.398 68.671 375.076 67.4914 cv
374.484 65.3263 375.923 64.0773 376.425 62.1935 cv
376.471 62.0732 li
376.285 61.9253 376.12 61.8509 375.994 61.8785 cv
374.933 62.112 374.158 64.6542 374.022 65.602 cv
373.79 67.2071 374.302 69.0547 374.841 70.5569 cv
374.999 70.9975 375.367 72.0235 375.855 72.7327 cv
375.721 72.1531 375.603 71.5712 375.616 70.961 cv
cp
f
376.704 59.8121 mo
376.821 58.7924 377.154 57.8281 377.524 56.8754 cv
377.747 56.0055 378.038 55.14 378.31 54.2135 cv
378.385 53.9604 378.504 53.7583 378.65 53.5973 cv
378.443 53.4483 378.043 53.6707 377.294 54.4753 cv
376.088 55.7707 375.293 59.8778 376.394 60.9783 cv
376.479 61.0639 376.564 61.1558 376.648 61.2503 cv
376.635 60.7744 376.648 60.2959 376.704 59.8121 cv
cp
f
379.732 50.5919 mo
380.418 49.5107 380.592 48.2354 381.231 47.1214 cv
381.6 46.4778 382.322 46.086 382.875 45.5897 cv
382.682 45.4158 382.461 45.3242 382.21 45.3529 cv
380.521 45.5464 378.365 51.3362 378.661 52.7953 cv
378.743 53.2029 378.867 53.5046 379.019 53.725 cv
378.96 52.656 379.083 51.6161 379.732 50.5919 cv
cp
f
401.358 68.0546 mo
400.829 68.546 400.338 68.9754 399.783 69.2309 cv
399.689 69.4955 li
399.239 70.5731 398.167 71.8196 398.057 72.9717 cv
398.022 73.3413 397.884 73.6418 397.685 73.8733 cv
397.875 73.8874 398.095 73.8624 398.353 73.7854 cv
399.721 73.3761 402.341 69.3294 401.358 68.0546 cv
cp
f
400.059 62.2875 mo
399.812 62.2001 399.004 62.2988 398.061 62.5178 cv
398.206 63.0739 398.273 63.6711 398.238 64.3319 cv
398.191 65.2126 399.41 66.0042 399.573 66.9689 cv
399.687 67.6445 399.499 68.2519 399.221 68.8367 cv
399.845 68.7622 400.342 68.256 400.823 67.0225 cv
401.371 65.617 401.863 62.9282 400.059 62.2875 cv
cp
f
399.125 60.4657 mo
398.478 59.1709 396.385 55.7334 395.057 54.3688 cv
395.014 55.4054 394.988 56.4404 395.111 57.4701 cv
395.337 59.3469 396.972 60.4268 397.656 62.1298 cv
398.738 61.8572 399.605 61.4243 399.125 60.4657 cv
cp
f
384.456 43.9633 mo
384.852 43.6182 385.294 43.326 385.724 43.0195 cv
384.813 42.8791 383.881 42.802 383.558 43.8992 cv
383.46 44.2312 383.424 44.8061 383.481 45.4157 cv
383.68 44.8801 383.97 44.3885 384.456 43.9633 cv
cp
f
397.999 50.4852 mo
397.664 49.7709 396.114 47.9508 395.019 48.0221 cv
395.449 48.8113 395.848 49.6127 396.027 50.5064 cv
396.275 51.7398 395.73 52.9031 395.67 54.1213 cv
395.64 54.3184 li
396.292 55.323 396.787 56.3711 397.737 55.1722 cv
398.678 53.986 398.615 51.8022 397.999 50.4852 cv
cp
f
395.971 43.8054 mo
396.311 41.4223 394.907 41.7912 393.796 42.1958 cv
394.143 42.721 394.379 43.3142 394.486 43.9984 cv
394.657 45.0889 394.619 46.343 395.208 47.3099 cv
395.291 47.4473 395.343 47.5826 395.381 47.7164 cv
395.668 47.6518 395.973 47.4256 396.295 46.9762 cv
396.914 46.111 395.817 44.879 395.971 43.8054 cv
cp
f
386.167 42.6898 mo
386.373 42.5258 386.571 42.353 386.75 42.1591 cv
387.018 41.8691 387.318 41.7266 387.617 41.6889 cv
387.668 41.6302 li
387.76 41.4545 387.86 41.2828 387.981 41.1201 cv
388.646 40.2264 389.572 39.8293 390.507 39.3312 cv
390.121 38.2806 389.385 38.0587 388.499 38.8884 cv
387.754 39.5856 386.976 39.9006 386.093 40.3556 cv
385.788 40.5127 385.339 40.8325 385.105 41.2052 cv
384.991 41.3874 384.929 41.5822 384.96 41.7768 cv
385.024 42.1784 385.671 42.4978 386.167 42.6898 cv
cp
f
393.961 38.351 mo
393.376 37.8197 392.769 37.4988 391.97 37.5002 cv
391.721 37.5109 li
391.584 37.5228 391.455 37.5488 391.332 37.582 cv
392.711 38.4074 393.53 40.2536 393.855 41.7095 cv
393.857 41.7274 li
394.52 41.6818 395.139 41.5757 395.208 40.7015 cv
395.273 39.8818 394.532 38.8702 393.961 38.351 cv
cp
f
376.2 76.538 mo
375.786 75.8693 375.544 75.2573 375.45 74.4772 cv
375.42 74.2277 375.473 73.9664 375.549 73.7041 cv
374.782 73.7063 373.868 73.9643 373.907 74.1059 cv
374.032 74.5575 374.373 75.1628 374.839 75.7922 cv
375.672 76.9183 376.904 78.1177 378.009 78.6546 cv
377.36 77.9878 376.693 77.334 376.2 76.538 cv
cp
f
402.395 71.182 mo
402.112 72.1806 401.597 73.0735 400.883 73.9407 cv
400.329 74.6138 399.749 75.2086 399.462 76.0474 cv
399.185 76.8598 398.856 77.5218 398.313 78.1712 cv
398.314 78.2865 398.322 78.4016 398.344 78.5165 cv
400.354 77.7536 401.714 75.5422 402.401 73.578 cv
402.682 72.7748 403.005 71.2162 402.395 71.182 cv
cp
f
395.917 79.4792 mo
393.808 80.4942 391.521 80.9532 389.036 80.9877 cv
388.832 80.9703 li
388.87 81.1353 li
389.013 81.4867 389.655 81.455 389.952 81.4627 cv
391.066 81.4914 392.166 81.3037 393.268 81.165 cv
393.589 81.1247 393.911 81.0611 394.227 80.9757 cv
394.815 80.8174 398.134 79.2599 397.468 79.1303 cv
396.929 79.0196 396.428 79.3188 395.917 79.4792 cv
cp
f
379.536 70.3621 mo
379.69 69.7839 379.892 69.2144 380.166 68.6556 cv
381.121 66.7063 381.504 64.7971 380.948 62.6673 cv
380.695 62.6071 li
380.794 64.5779 380.893 65.6126 379.809 67.5834 cv
379.116 68.842 378.823 70.244 379.07 70.3425 cv
379.108 70.3578 379.278 70.3671 379.536 70.3621 cv
cp
.31107 .640223 .691768 .319036 cmyk
f
378.694 74.8308 mo
378.343 74.1298 378.121 73.424 378.119 72.6504 cv
377.83 73.3198 377.739 74.1063 377.929 74.899 cv
378.111 75.6574 378.396 76.1063 378.743 76.3192 cv
379.1 76.5379 379.523 76.5059 379.97 76.3062 cv
379.44 75.9336 378.994 75.4293 378.694 74.8308 cv
cp
f
380.542 61.2408 mo
380.615 60.7676 380.644 60.2858 380.637 59.8076 cv
380.622 58.673 380.147 57.5708 380.268 56.4483 cv
380.311 56.0589 380.463 55.7262 380.68 55.4698 cv
380.094 55.0861 379.642 55.1155 379.513 55.8078 cv
379.246 57.2422 380.301 59.6509 380.449 60.7841 cv
380.474 60.9737 380.505 61.1206 380.542 61.2408 cv
cp
f
385.386 78.0337 mo
384.215 77.9871 383.16 77.7132 382.282 77.1619 cv
382.341 77.3046 li
382.46 77.521 382.626 77.7139 382.849 77.8756 cv
384.276 78.9117 385.698 79.5994 386.995 78.0847 cv
387.162 77.8846 li
386.639 78.0096 386.056 78.0604 385.386 78.0337 cv
cp
f
381.98 55.6331 mo
382.454 54.7843 383.065 54.0046 383.717 53.291 cv
383.561 52.3622 383.493 51.6472 383.226 52.1813 cv
382.596 53.4417 381.443 54.8111 381.788 55.3283 cv
381.842 55.4083 381.907 55.5126 381.98 55.6331 cv
cp
f
395.619 68.2522 mo
395.539 68.1547 li
395.872 70.0908 395.654 72.2744 395.178 73.9251 cv
394.858 75.032 394.163 75.8691 393.279 76.4966 cv
395.02 75.9673 397.511 70.4877 395.619 68.2522 cv
cp
f
391.134 79.356 mo
389.965 79.6486 388.697 79.8216 387.668 79.3288 cv
387.874 79.8071 388.417 80.1471 389.473 80.2307 cv
390.568 80.3174 391.645 80.0211 392.659 79.6518 cv
393.38 79.3894 394.414 78.6791 393.999 78.077 cv
393.172 78.7343 392.037 79.1301 391.134 79.356 cv
cp
f
384.264 52.475 mo
384.354 52.1973 384.462 51.926 384.592 51.6601 cv
384.694 50.7141 385.051 49.6876 385.785 49.1707 cv
385.303 48.4126 384.812 48.2629 384.6 49.4918 cv
384.436 50.4426 383.689 51.2222 384.145 52.1329 cv
384.193 52.2306 384.23 52.3491 384.264 52.475 cv
cp
f
397.303 76.6717 mo
396.581 77.6658 395.57 78.0301 394.361 77.9804 cv
394.399 78.5063 394.651 78.9544 395.311 79.0862 cv
397.116 79.4428 397.84 77.3343 397.7 75.8077 cv
397.61 76.1207 397.488 76.4173 397.303 76.6717 cv
cp
f
389.22 43.9852 mo
388.978 45.3781 385.807 48.0575 386.66 48.1144 cv
386.75 48.1204 386.873 48.1051 387.014 48.0804 cv
388.547 47.8114 388.81 44.9244 389.856 44.0566 cv
391.792 42.449 392.727 46.3459 393.143 47.9081 cv
393.199 48.1213 393.21 48.3197 393.19 48.5035 cv
394.494 48.8255 390.299 37.7837 389.22 43.9852 cv
cp
f
388.982 355.228 mo
393.846 354.605 li
395.519 380.745 394.783 403.965 391.345 417.769 cv
390.918 419.483 387.932 420.158 388.198 417.325 cv
389.393 404.591 394.101 381.2 388.982 355.228 cv
cp
.051606 .00192264 .216526 0 cmyk
f
389.859 360.553 mo
389.571 358.645 388.957 356.27 388.798 354.819 cv
393.73 354.054 li
393.82 354.75 394.143 356.675 394.059 358.674 cv
394.017 359.661 389.958 361.203 389.859 360.553 cv
cp
.045716 .0845045 .309361 0 cmyk
f
391.624 357.943 mo
387.832 358.21 386.348 357.323 386.256 356.021 cv
386.102 353.835 387.3 350.537 391.226 350.26 cv
395.523 349.957 396.748 353.793 396.848 355.204 cv
396.947 356.615 395.044 357.702 391.624 357.943 cv
cp
f
394.766 351.241 mo
394.915 351.483 395.022 351.747 395.071 352.033 cv
395.355 353.705 393.672 355.433 391.311 355.891 cv
388.996 356.341 386.638 355.704 386.544 353.789 cv
386.291 354.558 386.208 355.343 386.256 356.021 cv
386.348 357.323 387.832 358.21 391.624 357.943 cv
395.044 357.702 396.947 356.615 396.848 355.204 cv
396.784 354.302 396.259 352.41 394.766 351.241 cv
cp
.088777 .183658 .522454 .00521859 cmyk
f
392.327 351.389 mo
392.504 352.105 391.631 352.98 390.378 353.344 cv
389.124 353.708 387.964 353.423 387.787 352.707 cv
387.61 351.991 388.483 351.115 389.737 350.751 cv
390.99 350.388 392.15 350.673 392.327 351.389 cv
cp
.0167239 0 .16669 0 cmyk
f
373.837 371.307 mo
369.444 372.28 li
376.116 395.371 379.878 407.867 387.133 418.718 cv
388.033 420.066 390.822 419.721 389.712 417.358 cv
384.727 406.733 377.482 395.323 373.837 371.307 cv
cp
.051606 .00192264 .216526 0 cmyk
f
374.641 375.922 mo
374.298 374.185 374.09 371.943 373.776 370.641 cv
369.281 371.512 li
369.419 372.141 369.738 373.903 370.431 375.604 cv
370.774 376.443 374.758 376.514 374.641 375.922 cv
cp
.045716 .0845045 .309361 0 cmyk
f
378.618 362.797 mo
374.137 363.202 li
377.816 386.955 383.075 407.614 388.889 419.301 cv
389.611 420.753 392.421 420.766 391.621 418.28 cv
388.029 407.108 379.177 387.082 378.618 362.797 cv
cp
.051606 .00192264 .216526 0 cmyk
f
378.829 367.477 mo
378.709 365.71 378.789 363.46 378.643 362.129 cv
374.073 362.42 li
374.131 363.061 374.222 364.85 374.694 366.625 cv
374.927 367.501 378.869 368.078 378.829 367.477 cv
cp
.121218 .176028 .438117 .0108644 cmyk
f
376.681 365.763 mo
373.195 365.904 371.858 365.049 371.809 363.853 cv
371.728 361.843 372.918 358.851 376.526 358.705 cv
380.476 358.544 381.494 362.097 381.547 363.394 cv
381.6 364.69 379.824 365.635 376.681 365.763 cv
cp
.045716 .0845045 .309361 0 cmyk
f
379.746 359.701 mo
379.877 359.927 379.967 360.172 380.004 360.436 cv
380.219 361.978 378.628 363.516 376.449 363.872 cv
374.314 364.221 372.169 363.572 372.135 361.813 cv
371.882 362.511 371.784 363.229 371.809 363.853 cv
371.858 365.049 373.195 365.904 376.681 365.762 cv
379.824 365.635 381.6 364.69 381.547 363.394 cv
381.513 362.565 381.083 360.815 379.746 359.701 cv
cp
.088777 .183658 .522454 .00521859 cmyk
f
377.505 359.77 mo
377.648 360.432 376.823 361.211 375.663 361.51 cv
374.504 361.81 373.448 361.516 373.305 360.855 cv
373.162 360.193 373.987 359.414 375.147 359.115 cv
376.306 358.815 377.362 359.109 377.505 359.77 cv
cp
.0167239 0 .16669 0 cmyk
f
372.292 374.496 mo
368.853 375.08 367.418 374.402 367.218 373.221 cv
366.881 371.238 367.68 368.119 371.241 367.515 cv
375.138 366.853 376.6 370.247 376.818 371.526 cv
377.035 372.806 375.394 373.969 372.292 374.496 cv
cp
.045716 .0845045 .309361 0 cmyk
f
374.562 368.094 mo
374.72 368.301 374.841 368.533 374.911 368.789 cv
375.32 370.291 373.938 372.02 371.822 372.65 cv
369.749 373.268 367.538 372.897 367.281 371.157 cv
367.118 371.882 367.113 372.606 367.218 373.221 cv
367.418 374.402 368.853 375.08 372.292 374.496 cv
375.394 373.969 377.035 372.806 376.818 371.526 cv
376.679 370.709 376.029 369.028 374.562 368.094 cv
cp
.088777 .183658 .522454 .00521859 cmyk
f
372.347 368.447 mo
372.573 369.085 371.854 369.963 370.742 370.408 cv
369.63 370.852 368.545 370.695 368.319 370.057 cv
368.094 369.419 368.812 368.542 369.925 368.097 cv
371.037 367.652 372.122 367.809 372.347 368.447 cv
cp
.0167239 0 .16669 0 cmyk
f
382.495 368.329 mo
378.006 368.626 li
381.106 392.461 382.934 405.382 388.462 417.207 cv
389.149 418.675 391.957 418.756 391.218 416.252 cv
387.898 404.996 382.464 392.621 382.495 368.329 cv
cp
f
382.592 373.013 mo
382.516 371.243 382.65 368.996 382.536 367.662 cv
377.96 367.843 li
378.003 368.485 378.051 370.275 378.479 372.061 cv
378.69 372.943 382.618 373.616 382.592 373.013 cv
cp
.045716 .0845045 .309361 0 cmyk
f
388.51 360.64 mo
384.019 360.363 li
384.06 384.399 386.132 405.616 390.111 418.049 cv
390.605 419.592 393.379 420.031 392.966 417.453 cv
391.105 405.865 385.386 384.73 388.51 360.64 cv
cp
.051606 .00192264 .216526 0 cmyk
f
388.009 365.298 mo
388.159 363.534 388.578 361.322 388.636 359.984 cv
384.074 359.58 li
384.034 360.223 383.854 362.005 384.051 363.831 cv
384.149 364.732 387.959 365.899 388.009 365.298 cv
cp
.045716 .0845045 .309361 0 cmyk
f
386.145 363.279 mo
382.678 362.891 381.486 361.844 381.619 360.654 cv
381.843 358.655 383.472 355.878 387.061 356.279 cv
390.989 356.718 391.458 360.384 391.314 361.674 cv
391.17 362.963 389.272 363.628 386.145 363.279 cv
cp
f
390.093 357.752 mo
390.188 357.995 390.24 358.25 390.237 358.517 cv
390.216 360.073 388.41 361.353 386.203 361.375 cv
384.04 361.397 382.017 360.431 382.25 358.687 cv
381.894 359.339 381.689 360.034 381.619 360.654 cv
381.486 361.844 382.678 362.891 386.145 363.279 cv
389.272 363.628 391.17 362.963 391.314 361.674 cv
391.406 360.849 391.246 359.055 390.093 357.752 cv
cp
.088777 .183658 .522454 .00521859 cmyk
f
387.867 357.48 mo
387.908 358.156 386.975 358.801 385.784 358.922 cv
384.592 359.042 383.592 358.592 383.551 357.917 cv
383.511 357.241 384.443 356.596 385.635 356.475 cv
386.827 356.355 387.826 356.805 387.867 357.48 cv
cp
.0167239 0 .16669 0 cmyk
f
380.486 371.247 mo
376.998 371.304 375.682 370.417 375.663 369.22 cv
375.63 367.209 376.892 364.246 380.503 364.188 cv
384.455 364.123 385.387 367.7 385.408 368.997 cv
385.43 370.295 383.631 371.196 380.486 371.247 cv
cp
.045716 .0845045 .309361 0 cmyk
f
383.698 365.262 mo
383.823 365.491 383.907 365.738 383.938 366.003 cv
384.115 367.55 382.487 369.049 380.301 369.352 cv
378.158 369.648 376.029 368.948 376.038 367.189 cv
375.767 367.88 375.652 368.596 375.663 369.22 cv
375.682 370.417 376.998 371.304 380.486 371.247 cv
383.631 371.196 385.43 370.295 385.408 368.997 cv
385.395 368.168 385.007 366.408 383.698 365.262 cv
cp
.088777 .183658 .522454 .00521859 cmyk
f
381.456 365.277 mo
381.582 365.942 380.739 366.701 379.572 366.972 cv
378.406 367.243 377.357 366.924 377.231 366.259 cv
377.104 365.594 377.947 364.835 379.114 364.564 cv
380.281 364.293 381.329 364.612 381.456 365.277 cv
cp
.0167239 0 .16669 0 cmyk
f
370.469 387.159 mo
367.43 388.514 li
375.681 404.257 380.255 412.754 387.117 419.543 cv
387.969 420.386 389.938 419.724 388.785 418.176 cv
383.6 411.216 376.663 404.021 370.469 387.159 cv
cp
f
369.837 389.692 mo
368.066 390.378 367.163 390.007 366.843 389.182 cv
366.305 387.795 366.185 385.509 368.018 384.799 cv
370.024 384.021 371.427 386.326 371.774 387.22 cv
372.121 388.115 371.434 389.073 369.837 389.692 cv
cp
.045716 .0845045 .309361 0 cmyk
f
369.793 385.36 mo
369.927 385.795 369.419 386.365 368.658 386.632 cv
367.898 386.899 367.173 386.763 367.039 386.327 cv
366.906 385.892 367.414 385.322 368.175 385.055 cv
368.935 384.788 369.66 384.924 369.793 385.36 cv
cp
.0167239 0 .16669 0 cmyk
f
405.7 366.074 mo
410.547 366.818 li
404.942 392.404 401.744 406.261 394.631 418.58 cv
393.748 420.11 390.692 419.934 391.729 417.285 cv
396.391 405.375 403.453 392.45 405.7 366.074 cv
cp
f
405.155 371.15 mo
405.404 369.236 405.47 366.784 405.718 365.346 cv
410.669 365.972 li
410.563 366.665 410.343 368.604 409.71 370.503 cv
409.398 371.44 405.07 371.802 405.155 371.15 cv
cp
.045716 .0845045 .309361 0 cmyk
f
399.892 357.162 mo
404.794 357.282 li
402.492 383.374 398.25 406.215 392.763 419.339 cv
392.081 420.969 389.028 421.184 389.719 418.424 cv
392.827 406.018 401.021 383.609 399.892 357.162 cv
cp
f
399.998 362.266 mo
400.002 360.336 399.754 357.895 399.817 356.437 cv
404.808 356.427 li
404.791 357.129 404.819 359.08 404.434 361.044 cv
404.243 362.013 399.997 362.923 399.998 362.266 cv
cp
.121218 .176028 .438117 .0108644 cmyk
f
401.91 360.248 mo
398.11 360.153 396.717 359.128 396.75 357.823 cv
396.805 355.632 398.313 352.464 402.247 352.563 cv
406.553 352.671 407.407 356.607 407.371 358.02 cv
407.336 359.434 405.337 360.334 401.91 360.248 cv
cp
.045716 .0845045 .309361 0 cmyk
f
405.677 353.877 mo
405.803 354.132 405.884 354.405 405.905 354.694 cv
406.029 356.386 404.188 357.945 401.794 358.176 cv
399.447 358.403 397.161 357.544 397.25 355.629 cv
396.924 356.37 396.767 357.144 396.75 357.823 cv
396.717 359.128 398.11 360.153 401.91 360.248 cv
405.337 360.334 407.336 359.434 407.371 358.02 cv
407.394 357.116 407.051 355.183 405.677 353.877 cv
cp
.088777 .183658 .522454 .00521859 cmyk
f
403.235 353.791 mo
403.343 354.521 402.391 355.309 401.108 355.552 cv
399.826 355.795 398.698 355.4 398.59 354.67 cv
398.483 353.941 399.435 353.152 400.718 352.91 cv
402 352.667 403.127 353.062 403.235 353.791 cv
cp
.0167239 0 .16669 0 cmyk
f
407.577 368.868 mo
404.304 368.426 403.199 367.409 403.35 366.285 cv
403.605 364.399 405.207 361.806 408.595 362.263 cv
412.303 362.764 412.667 366.243 412.503 367.461 cv
412.339 368.678 410.528 369.266 407.577 368.868 cv
cp
.045716 .0845045 .309361 0 cmyk
f
411.432 363.722 mo
411.517 363.954 411.561 364.198 411.552 364.449 cv
411.498 365.922 409.761 367.094 407.672 367.067 cv
405.625 367.041 403.731 366.083 403.99 364.438 cv
403.638 365.047 403.429 365.7 403.35 366.285 cv
403.199 367.409 404.304 368.426 407.577 368.868 cv
410.528 369.266 412.339 368.678 412.503 367.461 cv
412.608 366.682 412.495 364.98 411.432 363.722 cv
cp
.088777 .183658 .522454 .00521859 cmyk
f
409.332 363.418 mo
409.356 364.058 408.459 364.648 407.328 364.737 cv
406.198 364.825 405.262 364.377 405.238 363.737 cv
405.214 363.097 406.111 362.506 407.241 362.418 cv
408.372 362.33 409.308 362.777 409.332 363.418 cv
cp
.0167239 0 .16669 0 cmyk
f
396.072 363.455 mo
400.975 363.457 li
399.307 389.596 399.262 405.052 394.096 418.305 cv
393.454 419.951 389.388 418.966 390.012 416.19 cv
392.818 403.712 397.843 389.867 396.072 363.455 cv
cp
.051606 .00192264 .216526 0 cmyk
f
396.302 368.555 mo
396.258 366.625 395.952 364.191 395.98 362.733 cv
400.968 362.602 li
400.969 363.303 401.044 365.253 400.706 367.226 cv
400.539 368.199 396.316 369.212 396.302 368.555 cv
cp
.045716 .0845045 .309361 0 cmyk
f
398.458 366.161 mo
394.984 366.363 393.635 365.534 393.566 364.341 cv
393.449 362.338 394.584 359.333 398.181 359.123 cv
402.117 358.894 403.195 362.42 403.271 363.712 cv
403.346 365.005 401.591 365.978 398.458 366.161 cv
cp
f
401.41 360.061 mo
401.544 360.284 401.638 360.527 401.68 360.789 cv
401.921 362.324 400.361 363.886 398.194 364.279 cv
396.071 364.664 393.919 364.055 393.855 362.301 cv
393.614 363.002 393.53 363.72 393.566 364.341 cv
393.635 365.534 394.984 366.363 398.458 366.16 cv
401.591 365.978 403.346 365.005 403.271 363.712 cv
403.223 362.886 402.763 361.148 401.41 360.061 cv
cp
.088777 .183658 .522454 .00521859 cmyk
f
399.176 360.169 mo
399.33 360.827 398.521 361.618 397.369 361.937 cv
396.217 362.256 395.159 361.982 395.005 361.324 cv
394.851 360.667 395.66 359.875 396.812 359.556 cv
397.963 359.237 399.022 359.512 399.176 360.169 cv
cp
.0167239 0 .16669 0 cmyk
f
394.229 371.337 mo
389.98 370.713 li
388.089 393.578 386.662 408.113 389.448 420.258 cv
389.793 421.766 394.348 421.591 394.162 419.106 cv
393.322 407.935 389.324 394 394.229 371.337 cv
cp
f
393.379 375.728 mo
393.663 374.061 394.239 371.991 394.401 370.723 cv
390.095 369.973 li
390.005 370.581 389.691 372.261 389.732 374.014 cv
389.752 374.879 393.283 376.295 393.379 375.728 cv
cp
.045716 .0845045 .309361 0 cmyk
f
391.768 373.657 mo
388.502 373.01 387.452 371.918 387.674 370.797 cv
388.047 368.913 389.819 366.402 393.201 367.072 cv
396.902 367.806 397.054 371.33 396.814 372.545 cv
396.573 373.76 394.714 374.241 391.768 373.657 cv
cp
f
395.967 368.717 mo
396.038 368.955 396.067 369.203 396.042 369.456 cv
395.897 370.935 394.077 372.007 391.976 371.851 cv
389.916 371.698 388.07 370.617 388.432 368.977 cv
388.04 369.568 387.79 370.212 387.674 370.797 cv
387.452 371.918 388.502 373.01 391.768 373.657 cv
394.714 374.241 396.573 373.76 396.814 372.545 cv
396.968 371.768 396.959 370.048 395.967 368.717 cv
cp
.088777 .183658 .522454 .00521859 cmyk
f
393.872 368.28 mo
393.856 368.926 392.917 369.465 391.774 369.484 cv
390.631 369.503 389.716 368.994 389.731 368.348 cv
389.747 367.703 390.686 367.164 391.829 367.145 cv
392.973 367.126 393.887 367.634 393.872 368.28 cv
cp
.0167239 0 .16669 0 cmyk
f
185.747 408.811 mo
185.375 402.029 177.958 373.916 179.641 369.631 cv
164.3 368.403 li
162.118 376.082 157.823 415.293 172.312 419.552 cv
179.595 421.693 186.136 415.913 185.747 408.811 cv
cp
.045716 .0845045 .309361 0 cmyk
f
180.562 381.158 mo
179.591 375.663 179.044 371.15 179.641 369.631 cv
164.3 368.403 li
163.925 369.722 163.489 371.974 163.095 374.816 cv
167.069 379.424 174.043 381.253 180.562 381.158 cv
cp
.088777 .183658 .522454 .00521859 cmyk
f
188.463 354.804 mo
144.748 365.793 li
149.252 370.693 153.985 366.377 164.446 370.856 cv
166.631 371.534 178.646 371.749 185.196 369.226 cv
193.691 365.955 202.431 370.911 206.475 366.718 cv
195.08 357.377 188.463 354.804 188.463 354.804 cv
cp
f
186.324 360.02 mo
183.637 361.041 181.97 363.022 180.338 365.303 cv
179.105 367.026 177.538 369.523 175.373 370.105 cv
178.284 367.086 179.777 362.768 183.512 360.496 cv
180.806 361.969 178.721 363.085 176.929 365.722 cv
175.81 367.368 174.785 369.317 172.835 370.054 cv
173.857 369.25 174.386 368.172 174.972 367.011 cv
175.74 365.49 176.77 364.258 177.69 362.867 cv
176.001 363.796 174.718 365.235 173.677 366.836 cv
173.04 367.815 172.444 369.132 171.358 369.626 cv
171.644 369.065 171.845 368.444 171.773 367.789 cv
171.23 368.61 170.671 369.809 169.785 370.249 cv
169.959 368.675 170.385 367.19 169.932 365.547 cv
169.71 366.962 169.176 369.447 167.916 370.258 cv
167.428 369.011 168.247 366.285 167.067 365.441 cv
166.774 367.112 167.244 368.911 166.953 370.585 cv
165.986 369.101 166.463 366.011 165.101 365.192 cv
165.104 365.192 li
165.104 366.76 165.269 368.987 165.966 370.381 cv
164.874 369.49 164.224 368.195 163.429 367.026 cv
163.705 368.184 164.195 369.528 165.039 370.355 cv
162.858 369.313 160.604 366.394 159.52 364.334 cv
159.522 364.335 li
160.089 366.732 161.646 368.885 163.753 370.163 cv
161.41 369.583 159.972 367.573 158.044 366.311 cv
158.962 367.365 159.806 368.754 161.128 369.391 cv
158.864 368.301 156.898 366.352 154.665 365.111 cv
155.533 366.425 157.907 368.39 159.413 368.826 cv
158.253 368.349 157.015 368.105 155.824 367.718 cv
154.629 367.329 153.649 366.654 152.575 366.064 cv
153.375 366.986 154.385 367.713 155.476 368.254 cv
155.433 368.241 li
153.271 367.919 151.672 367.503 150.335 365.595 cv
150.635 366.546 151.083 367.36 151.745 368.099 cv
150.561 367.906 149.742 366.565 149.037 365.707 cv
149.039 365.707 li
149.217 366.532 149.759 367.408 150.303 368.055 cv
149.191 367.775 148.283 367.102 147.281 366.579 cv
147.757 367.223 148.406 367.751 149.179 367.966 cv
148.415 367.832 147.693 367.637 146.974 367.147 cv
146.305 366.692 145.649 365.557 144.757 365.815 cv
146.927 368.035 149.467 368.387 152.443 368.486 cv
156.777 368.629 160.339 369.596 164.453 370.858 cv
166.657 371.535 178.653 371.746 185.196 369.226 cv
193.691 365.955 202.431 370.911 206.475 366.718 cv
205.598 365.998 201.324 361.665 200.05 362.82 cv
199.808 363.04 200.083 363.418 199.974 363.674 cv
199.686 364.348 199.429 364.874 198.887 365.404 cv
197.91 366.359 196.786 366.953 195.462 367.043 cv
194.457 367.111 193.44 366.984 192.434 367.007 cv
191.472 367.029 190.519 367.427 189.587 367.384 cv
191.268 366.148 193.976 365.28 194.475 362.961 cv
193.188 364.46 191.066 366.028 189.211 366.672 cv
188.063 367.07 186.858 367.302 185.685 367.622 cv
184.508 367.943 183.58 368.574 182.47 368.958 cv
182.991 368.396 183.584 367.892 184.203 367.439 cv
185.605 366.411 187.244 365.76 188.708 364.812 cv
190.087 363.919 191.823 361.747 193.418 361.524 cv
192.359 361.854 191.301 361.842 190.299 362.395 cv
188.281 363.508 186.474 365.223 184.634 366.6 cv
183.313 367.588 181.753 368.335 180.553 369.475 cv
181.194 368.147 182.225 367.024 183.148 365.89 cv
184.688 363.995 186.819 361.093 189.269 360.427 cv
188.344 360.866 187.339 360.932 186.426 361.397 cv
184.451 362.402 182.979 364.623 181.682 366.372 cv
180.842 367.504 179.651 369.493 178.094 369.637 cv
181.399 366.888 182.329 362.197 186.324 360.02 cv
cp
.045716 .0845045 .309361 0 cmyk
f
202.596 352.577 mo
200.152 350.814 197.115 350.151 193.888 349.949 cv
187.127 349.526 180.753 352.052 174.182 353.14 cv
168.955 354.005 133.155 347.349 141.817 363.194 cv
145.091 369.182 155.427 365.09 160.74 366.551 cv
167.045 368.289 170.04 369.427 175.895 365.355 cv
182.896 360.485 189.257 360.455 196.668 364.588 cv
199.032 365.907 205.212 368.942 207.567 366.084 cv
209.931 363.215 206.664 357.123 204.878 354.798 cv
204.198 353.912 203.431 353.18 202.596 352.577 cv
cp
.0816663 .884215 .899657 .0106203 cmyk
f
147.204 354.662 mo
148.153 355.15 149.134 355.561 150.156 355.858 cv
154.594 357.147 159.175 356.568 163.647 355.718 cv
166.56 355.165 170.868 354.197 174.928 353.01 cv
172.468 353.103 170.149 353.057 168.032 352.966 cv
155.113 357.623 151.594 355.837 147.204 354.662 cv
cp
.185702 .894804 .915587 .0831617 cmyk
f
193.516 361.735 mo
188.771 360.586 183.73 360.078 178.971 361.517 cv
175.233 362.647 171.36 366.201 167.199 364.925 cv
166.243 364.632 165.045 363.91 164.026 363.976 cv
162.925 364.047 161.847 364.331 160.763 364.515 cv
158.664 364.87 156.896 364.293 154.831 364.151 cv
151.439 363.918 148.37 364.319 145.066 363.17 cv
143.459 362.612 141.902 361.912 140.788 360.79 cv
141.008 361.529 141.342 362.326 141.817 363.194 cv
145.091 369.182 155.427 365.09 160.74 366.551 cv
167.045 368.289 170.04 369.427 175.895 365.355 cv
182.896 360.485 189.257 360.455 196.668 364.588 cv
199.032 365.907 205.212 368.942 207.567 366.084 cv
208.417 365.053 208.537 363.605 208.262 362.065 cv
204.723 364.974 198.036 362.831 193.516 361.735 cv
cp
f
153.378 357.96 mo
152.948 357.902 152.52 357.819 152.093 357.707 cv
149.601 357.056 144.623 352.955 142.39 355.939 cv
141.319 357.371 141.971 358.931 143.459 359.752 cv
146.367 361.356 150.444 360.967 153.607 360.98 cv
155.484 360.988 158.666 361.729 160.391 361.396 cv
162.061 361.073 162.859 359.833 164.425 359.273 cv
166.899 358.388 168.177 360.192 170.611 359.889 cv
171.603 359.766 175.395 358.913 176.343 358.482 cv
178.46 357.519 177.413 356.085 178.795 354.971 cv
180.037 353.972 182.199 354.504 183.788 354.296 cv
183.141 351.451 180.089 352.963 178.266 353.473 cv
174.129 354.632 170.495 356.274 166.103 356.51 cv
161.92 356.734 157.58 358.526 153.378 357.96 cv
cp
0 .782864 .680568 9.15541e-005 cmyk
f
202.852 354.216 mo
202.013 353.268 201.093 352.498 200.526 352.231 cv
197.196 350.666 192.739 350.584 189.184 351.273 cv
187.647 351.57 186.309 351.293 185.541 352.945 cv
187.979 353.459 190.489 353.115 192.729 354.203 cv
193.809 354.729 193.874 355.743 195.31 356.03 cv
196.444 356.256 197.513 354.934 198.713 355.509 cv
199.815 356.036 202.514 362.238 204.584 358.666 cv
205.236 357.54 204.138 355.668 202.852 354.216 cv
cp
f
154.605 359.803 mo
153.001 358.971 147.071 355.919 145.193 356.255 cv
142.372 356.758 144.243 358.689 146.156 359.4 cv
148.612 360.312 152.015 359.795 154.605 359.803 cv
cp
0 .653284 .465858 0 cmyk
f
204.252 357.484 mo
203.858 357.349 201.732 353.381 200.21 352.659 cv
198.264 351.736 195.086 351.199 193.227 352.599 cv
194.774 353.946 197.284 353.546 199.213 354.216 cv
201.319 354.947 202.358 356.834 204.252 357.484 cv
cp
f
185.507 406.64 mo
182.804 418.359 169.432 418.08 165.491 412.883 cv
167.069 416.231 169.277 418.66 172.312 419.552 cv
179.595 421.693 186.136 415.913 185.747 408.811 cv
185.715 408.234 185.63 407.497 185.507 406.64 cv
cp
.088777 .183658 .522454 .00521859 cmyk
f
171.709 388.332 mo
165.504 385.131 162.431 380.714 162.331 382.018 cv
161.788 389.145 161.743 397.658 163.057 404.811 cv
164.327 409.934 174.975 409.589 176.85 405.442 cv
180.301 397.804 178.686 391.93 171.709 388.332 cv
cp
.03122 .0769055 .240787 0 cmyk
f
77.6602 281.451 mo
52.4069 284.414 li
52.4069 293.434 53.8242 309.152 57.3029 313.147 cv
60.7817 317.141 74.568 317.27 76.243 311.472 cv
77.918 305.674 76.243 282.482 77.6602 281.451 cv
.107454 .133852 .215213 .00311284 cmyk
f
57.303 313.147 mo
60.7817 317.141 74.568 317.27 76.243 311.472 cv
76.7044 309.875 76.9111 306.956 76.9986 303.546 cv
75.091 313.372 63.7196 315.453 57.303 313.147 cv
cp
.1561 .224277 .310918 .0218509 cmyk
f
77.0535 286.777 mo
77.0536 286.776 77.0536 286.776 77.0536 286.776 cv
77.0536 286.776 77.0535 286.777 77.0535 286.777 cv
77.0569 286.595 mo
77.0569 286.593 li
77.0569 286.594 77.0569 286.594 77.0569 286.595 cv
77.0574 286.565 mo
77.0574 286.565 77.0574 286.564 77.0575 286.563 cv
77.0574 286.564 77.0574 286.565 77.0574 286.565 cv
77.0579 286.539 mo
77.058 286.536 77.058 286.533 77.0581 286.53 cv
77.058 286.533 77.058 286.536 77.0579 286.539 cv
77.0583 286.522 mo
77.0584 286.516 77.0585 286.508 77.0587 286.501 cv
77.0585 286.508 77.0584 286.515 77.0583 286.522 cv
77.0589 286.489 mo
77.0589 286.488 li
77.0589 286.489 li
77.0592 286.474 mo
77.0592 286.474 li
77.0592 286.474 77.0592 286.474 77.0592 286.474 cv
77.0602 286.429 mo
77.0602 286.429 li
77.0602 286.429 77.0602 286.429 77.0602 286.429 cv
77.0604 286.418 mo
77.0604 286.416 77.0605 286.413 77.0605 286.411 cv
77.0605 286.413 77.0604 286.416 77.0604 286.418 cv
77.0607 286.404 mo
77.0611 286.386 77.0614 286.367 77.0618 286.349 cv
77.0615 286.367 77.061 286.386 77.0607 286.404 cv
77.0619 286.346 mo
77.0627 286.308 77.0636 286.27 77.0644 286.231 cv
77.0636 286.269 77.0627 286.308 77.0619 286.346 cv
77.0646 286.223 mo
77.0647 286.221 77.0647 286.219 77.0648 286.217 cv
77.0647 286.219 77.0647 286.221 77.0646 286.223 cv
77.0648 286.214 mo
77.0649 286.21 77.065 286.206 77.0651 286.202 cv
77.065 286.206 77.0649 286.21 77.0648 286.214 cv
77.0652 286.197 mo
77.0654 286.188 77.0656 286.18 77.0658 286.171 cv
77.0656 286.179 77.0654 286.188 77.0652 286.197 cv
77.0659 286.169 mo
77.0663 286.151 77.0667 286.132 77.0672 286.114 cv
77.0667 286.132 77.0663 286.151 77.0659 286.169 cv
77.0673 286.108 mo
77.1245 283.739 77.2618 282.043 77.5668 281.558 cv
77.2618 282.043 77.1245 283.74 77.0673 286.108 cv
52.4069 284.516 mo
52.4069 284.513 52.4069 284.511 52.4069 284.509 cv
52.4069 284.511 52.4069 284.513 52.4069 284.516 cv
52.4069 284.481 mo
52.4069 284.48 52.4069 284.479 52.4069 284.478 cv
52.4069 284.479 52.4069 284.48 52.4069 284.481 cv
52.4069 284.455 mo
52.4069 284.451 52.4069 284.447 52.4069 284.443 cv
52.4069 284.448 52.4069 284.451 52.4069 284.455 cv
77.567 281.557 mo
77.5675 281.556 77.5681 281.555 77.5687 281.555 cv
77.5681 281.556 77.5675 281.556 77.567 281.557 cv
77.5689 281.554 mo
77.5694 281.553 77.57 281.552 77.5706 281.552 cv
77.57 281.552 77.5694 281.553 77.5689 281.554 cv
77.5707 281.551 mo
77.572 281.549 77.5732 281.548 77.5744 281.546 cv
77.5732 281.548 77.572 281.549 77.5707 281.551 cv
77.5745 281.546 mo
77.5751 281.545 77.5757 281.544 77.5763 281.543 cv
77.5757 281.544 77.5751 281.545 77.5745 281.546 cv
77.5764 281.543 mo
77.577 281.542 77.5776 281.541 77.5781 281.54 cv
77.5775 281.541 77.577 281.542 77.5764 281.543 cv
77.5784 281.54 mo
77.5796 281.538 77.5808 281.536 77.5821 281.534 cv
77.5809 281.536 77.5796 281.538 77.5784 281.54 cv
77.5821 281.534 mo
77.5834 281.533 77.5846 281.531 77.5859 281.529 cv
77.5846 281.531 77.5834 281.533 77.5821 281.534 cv
77.586 281.529 mo
77.5873 281.527 77.5885 281.525 77.5898 281.524 cv
77.5885 281.525 77.5872 281.527 77.586 281.529 cv
77.5898 281.524 mo
77.5911 281.522 77.5923 281.52 77.5935 281.519 cv
77.5923 281.52 77.5911 281.522 77.5898 281.524 cv
77.5938 281.518 mo
77.5944 281.518 77.5949 281.517 77.5955 281.516 cv
77.5949 281.517 77.5944 281.518 77.5938 281.518 cv
77.5957 281.516 mo
77.5962 281.515 77.5968 281.514 77.5973 281.514 cv
77.5967 281.514 77.5963 281.515 77.5957 281.516 cv
77.5977 281.513 mo
77.5982 281.513 77.5989 281.512 77.5995 281.511 cv
77.5989 281.512 77.5982 281.513 77.5977 281.513 cv
77.5996 281.511 mo
77.6002 281.51 77.6008 281.509 77.6013 281.509 cv
77.6007 281.509 77.6002 281.51 77.5996 281.511 cv
77.6016 281.508 mo
77.6021 281.508 77.6027 281.507 77.6033 281.506 cv
77.6027 281.507 77.6022 281.508 77.6016 281.508 cv
77.6035 281.506 mo
77.604 281.505 77.6046 281.505 77.6051 281.504 cv
77.6046 281.505 77.6041 281.505 77.6035 281.506 cv
77.6055 281.504 mo
77.6061 281.503 77.6066 281.502 77.6072 281.502 cv
77.6067 281.502 77.606 281.503 77.6055 281.504 cv
77.6075 281.501 mo
77.608 281.501 77.6086 281.5 77.6092 281.499 cv
77.6086 281.5 77.608 281.5 77.6075 281.501 cv
77.6094 281.499 mo
77.61 281.498 77.6106 281.497 77.6112 281.497 cv
77.6106 281.498 77.6101 281.498 77.6094 281.499 cv
77.6114 281.497 mo
77.6119 281.496 77.6124 281.495 77.6129 281.495 cv
77.6124 281.495 77.612 281.496 77.6114 281.497 cv
77.6134 281.494 mo
77.614 281.494 77.6145 281.493 77.6151 281.492 cv
77.6145 281.493 77.614 281.494 77.6134 281.494 cv
77.6154 281.492 mo
77.616 281.491 77.6165 281.491 77.617 281.49 cv
77.6165 281.491 77.616 281.491 77.6154 281.492 cv
77.6174 281.49 mo
77.618 281.489 77.6186 281.489 77.6192 281.488 cv
77.6186 281.489 77.618 281.489 77.6174 281.49 cv
77.6194 281.488 mo
77.62 281.487 77.6206 281.486 77.6213 281.486 cv
77.6206 281.486 77.62 281.487 77.6194 281.488 cv
77.6214 281.486 mo
77.6219 281.485 77.6226 281.484 77.6232 281.484 cv
77.6226 281.484 77.6219 281.485 77.6214 281.486 cv
77.6234 281.483 mo
77.624 281.483 77.6245 281.482 77.6251 281.482 cv
77.6245 281.482 77.624 281.483 77.6234 281.483 cv
77.6254 281.481 mo
77.6261 281.481 77.6266 281.48 77.6272 281.48 cv
77.6266 281.48 77.626 281.481 77.6254 281.481 cv
77.6274 281.479 mo
77.628 281.479 77.6286 281.478 77.6291 281.478 cv
77.6285 281.478 77.628 281.479 77.6274 281.479 cv
77.6294 281.477 mo
77.6299 281.477 77.6304 281.476 77.6309 281.476 cv
77.6304 281.476 77.6299 281.477 77.6294 281.477 cv
77.6315 281.475 mo
77.6318 281.475 77.6324 281.474 77.6327 281.474 cv
77.6323 281.475 77.6319 281.475 77.6315 281.475 cv
77.6335 281.473 mo
77.6339 281.473 77.6344 281.473 77.6348 281.472 cv
77.6344 281.473 77.6339 281.473 77.6335 281.473 cv
77.6356 281.471 mo
77.6359 281.471 77.6363 281.471 77.6367 281.47 cv
77.6363 281.471 77.6359 281.471 77.6356 281.471 cv
77.6376 281.47 mo
77.638 281.469 77.6386 281.469 77.639 281.468 cv
77.6385 281.469 77.6381 281.469 77.6376 281.47 cv
77.6396 281.468 mo
77.64 281.467 77.6405 281.467 77.6408 281.467 cv
77.6404 281.467 77.64 281.467 77.6396 281.468 cv
77.6417 281.466 mo
77.6421 281.466 77.6425 281.465 77.6429 281.465 cv
77.6425 281.465 77.6421 281.466 77.6417 281.466 cv
77.6437 281.464 mo
77.6442 281.464 77.6448 281.463 77.6453 281.463 cv
77.6447 281.463 77.6443 281.464 77.6437 281.464 cv
77.6457 281.462 mo
77.6463 281.462 77.6469 281.461 77.6474 281.461 cv
77.6468 281.461 77.6463 281.462 77.6457 281.462 cv
77.6478 281.461 mo
77.6484 281.46 77.6491 281.46 77.6497 281.459 cv
77.6491 281.46 77.6485 281.46 77.6478 281.461 cv
77.6499 281.459 mo
77.6505 281.458 77.6511 281.458 77.6517 281.457 cv
77.6511 281.458 77.6505 281.458 77.6499 281.459 cv
77.6519 281.457 mo
77.6547 281.455 77.6575 281.453 77.6602 281.451 cv
77.6602 281.451 li
77.6575 281.453 77.6547 281.455 77.6519 281.457 cv
.391791 .368933 .413977 .187503 cmyk
f
75.3202 294.824 mo
67.2684 294.824 59.402 293.384 52.5116 289.023 cv
52.4428 287.411 52.4085 285.887 52.4069 284.516 cv
52.4069 284.513 52.4069 284.511 52.4069 284.509 cv
52.4069 284.5 52.4069 284.491 52.4069 284.481 cv
52.4069 284.48 52.4069 284.479 52.4069 284.478 cv
52.4069 284.471 52.4069 284.463 52.4069 284.455 cv
52.4069 284.451 52.4069 284.448 52.4069 284.443 cv
52.4069 284.434 52.4069 284.424 52.4069 284.414 cv
52.4069 284.414 li
77.6602 281.451 li
77.6575 281.453 77.6547 281.455 77.6519 281.457 cv
77.6518 281.457 77.6518 281.457 77.6517 281.457 cv
77.6511 281.458 77.6505 281.458 77.6499 281.459 cv
77.6498 281.459 77.6497 281.459 77.6497 281.459 cv
77.6491 281.46 77.6484 281.46 77.6478 281.461 cv
77.6477 281.461 77.6475 281.461 77.6474 281.461 cv
77.6469 281.461 77.6463 281.462 77.6457 281.462 cv
77.6456 281.462 77.6454 281.463 77.6453 281.463 cv
77.6448 281.463 77.6442 281.464 77.6437 281.464 cv
77.6435 281.464 77.6432 281.465 77.6429 281.465 cv
77.6425 281.465 77.6421 281.466 77.6417 281.466 cv
77.6414 281.466 77.6411 281.466 77.6408 281.467 cv
77.6405 281.467 77.64 281.467 77.6396 281.468 cv
77.6394 281.468 77.6392 281.468 77.639 281.468 cv
77.6386 281.469 77.638 281.469 77.6376 281.47 cv
77.6373 281.47 77.637 281.47 77.6367 281.47 cv
77.6363 281.471 77.6359 281.471 77.6356 281.471 cv
77.6353 281.472 77.635 281.472 77.6348 281.472 cv
77.6344 281.473 77.6339 281.473 77.6335 281.473 cv
77.6332 281.474 77.633 281.474 77.6327 281.474 cv
77.6324 281.474 77.6318 281.475 77.6315 281.475 cv
77.6313 281.475 77.6311 281.476 77.6309 281.476 cv
77.6304 281.476 77.6299 281.477 77.6294 281.477 cv
77.6293 281.477 77.6292 281.478 77.6291 281.478 cv
77.6286 281.478 77.628 281.479 77.6274 281.479 cv
77.6274 281.479 77.6273 281.479 77.6272 281.48 cv
77.6266 281.48 77.6261 281.481 77.6254 281.481 cv
77.6253 281.481 77.6252 281.482 77.6251 281.482 cv
77.6245 281.482 77.624 281.483 77.6234 281.483 cv
77.6233 281.484 77.6232 281.484 77.6232 281.484 cv
77.6226 281.484 77.6219 281.485 77.6214 281.486 cv
77.6213 281.486 li
77.6206 281.486 77.62 281.487 77.6194 281.488 cv
77.6193 281.488 77.6192 281.488 77.6192 281.488 cv
77.6186 281.489 77.618 281.489 77.6174 281.49 cv
77.6173 281.49 77.6171 281.49 77.617 281.49 cv
77.6165 281.491 77.616 281.491 77.6154 281.492 cv
77.6153 281.492 77.6152 281.492 77.6151 281.492 cv
77.6145 281.493 77.614 281.494 77.6134 281.494 cv
77.6133 281.494 77.6131 281.495 77.6129 281.495 cv
77.6124 281.495 77.6119 281.496 77.6114 281.497 cv
77.6114 281.497 77.6112 281.497 77.6112 281.497 cv
77.6106 281.497 77.61 281.498 77.6094 281.499 cv
77.6094 281.499 77.6093 281.499 77.6092 281.499 cv
77.6086 281.5 77.608 281.501 77.6075 281.501 cv
77.6074 281.501 77.6073 281.501 77.6072 281.502 cv
77.6066 281.502 77.6061 281.503 77.6055 281.504 cv
77.6054 281.504 77.6053 281.504 77.6051 281.504 cv
77.6046 281.505 77.604 281.505 77.6035 281.506 cv
77.6035 281.506 77.6034 281.506 77.6033 281.506 cv
77.6027 281.507 77.6021 281.508 77.6016 281.508 cv
77.6015 281.508 77.6014 281.509 77.6013 281.509 cv
77.6008 281.509 77.6002 281.51 77.5996 281.511 cv
77.5995 281.511 77.5995 281.511 77.5995 281.511 cv
77.5989 281.512 77.5982 281.513 77.5977 281.513 cv
77.5975 281.513 77.5974 281.514 77.5973 281.514 cv
77.5968 281.514 77.5962 281.515 77.5957 281.516 cv
77.5957 281.516 77.5956 281.516 77.5955 281.516 cv
77.5949 281.517 77.5944 281.518 77.5938 281.518 cv
77.5937 281.518 77.5936 281.519 77.5935 281.519 cv
77.5923 281.52 77.5911 281.522 77.5898 281.524 cv
77.5898 281.524 77.5898 281.524 77.5898 281.524 cv
77.5885 281.525 77.5873 281.527 77.586 281.529 cv
77.586 281.529 77.5859 281.529 77.5859 281.529 cv
77.5846 281.531 77.5834 281.533 77.5821 281.534 cv
77.5821 281.534 li
77.5808 281.536 77.5796 281.538 77.5784 281.54 cv
77.5782 281.54 77.5782 281.54 77.5781 281.54 cv
77.5776 281.541 77.577 281.542 77.5764 281.543 cv
77.5764 281.543 77.5764 281.543 77.5763 281.543 cv
77.5757 281.544 77.5751 281.545 77.5745 281.546 cv
77.5744 281.546 li
77.5732 281.548 77.572 281.549 77.5707 281.551 cv
77.5707 281.551 77.5706 281.552 77.5706 281.552 cv
77.57 281.552 77.5694 281.553 77.5689 281.554 cv
77.5688 281.554 77.5687 281.554 77.5687 281.555 cv
77.5681 281.555 77.5675 281.556 77.567 281.557 cv
77.5669 281.557 77.5668 281.557 77.5668 281.558 cv
77.2618 282.043 77.1245 283.739 77.0673 286.108 cv
77.0673 286.11 77.0672 286.112 77.0672 286.114 cv
77.0667 286.132 77.0663 286.151 77.0659 286.169 cv
77.0659 286.17 77.0658 286.17 77.0658 286.171 cv
77.0656 286.18 77.0654 286.188 77.0652 286.197 cv
77.0652 286.198 77.0652 286.2 77.0651 286.202 cv
77.065 286.206 77.0649 286.21 77.0648 286.214 cv
77.0648 286.215 77.0648 286.216 77.0648 286.217 cv
77.0647 286.219 77.0647 286.221 77.0646 286.223 cv
77.0646 286.226 77.0645 286.228 77.0644 286.231 cv
77.0636 286.27 77.0627 286.308 77.0619 286.346 cv
77.0619 286.347 77.0619 286.348 77.0618 286.349 cv
77.0614 286.367 77.0611 286.386 77.0607 286.404 cv
77.0606 286.407 77.0606 286.409 77.0605 286.411 cv
77.0605 286.413 77.0604 286.416 77.0604 286.418 cv
77.0603 286.422 77.0602 286.425 77.0602 286.429 cv
77.0602 286.429 li
77.0598 286.444 77.0595 286.459 77.0592 286.474 cv
77.0592 286.474 li
77.0591 286.479 77.059 286.484 77.0589 286.488 cv
77.0589 286.489 li
77.0588 286.493 77.0588 286.497 77.0587 286.501 cv
77.0585 286.508 77.0584 286.516 77.0583 286.522 cv
77.0582 286.525 77.0582 286.528 77.0581 286.53 cv
77.058 286.533 77.058 286.536 77.0579 286.539 cv
77.0578 286.547 77.0576 286.555 77.0575 286.563 cv
77.0574 286.564 77.0574 286.565 77.0574 286.565 cv
77.0572 286.575 77.0571 286.584 77.0569 286.593 cv
77.0569 286.595 li
77.0557 286.655 77.0546 286.715 77.0536 286.776 cv
77.0536 286.776 77.0536 286.776 77.0535 286.777 cv
77.0138 289.065 77.0349 291.879 77.0489 294.803 cv
76.4717 294.817 75.8958 294.824 75.3202 294.824 cv
.131716 .183078 .261814 .00927749 cmyk
f
49.7012 279.905 mo
48.9281 283.641 47.8974 287.378 51.2473 287.507 cv
54.5972 287.635 60.2827 285.184 64.7922 287.245 cv
69.3017 289.307 74.7101 288.409 79.7218 288.409 cv
81.5256 288.409 84.1024 278.616 84.1024 278.616 cv
49.7012 279.905 li
cp
.107454 .133852 .215213 .00311284 cmyk
f
79.7149 287.573 mo
78.1334 287.428 76.7088 287.594 75.1592 287.594 cv
73.308 287.594 72.1689 286.588 71.4253 285.241 cv
69.775 287.187 67.57 288.421 65.1839 286.667 cv
63.2685 285.258 60.7823 286.164 58.6378 285.426 cv
57.8376 285.151 57.2228 284.595 56.6997 283.941 cv
54.8273 285.978 52.6122 287.421 49.6743 286.966 cv
50.0348 287.283 50.5382 287.479 51.2473 287.507 cv
54.5972 287.635 60.2827 285.184 64.7922 287.245 cv
69.3018 289.307 74.7101 288.409 79.7218 288.409 cv
80.049 288.409 80.4017 288.083 80.7597 287.556 cv
80.4251 287.595 80.0794 287.607 79.7149 287.573 cv
cp
.1561 .224277 .310918 .0218509 cmyk
f
52.8984 294.927 mo
53.1748 298.049 53.5732 301.215 54.1056 304.05 cv
55.6103 311.988 66.0913 312.137 68.3933 309.451 cv
76.0045 300.571 52.7843 293.638 52.8984 294.927 cv
cp
.0588998 .089662 .115541 0 cmyk
f
75.7929 288.102 mo
74.8945 288.102 71.3718 288.891 71.545 288.314 cv
71.7686 287.568 71.9152 286.808 71.5326 286.115 cv
72.0046 288.028 67.3467 288.885 64.9743 287.134 cv
62.8313 285.552 58.7515 286.363 56.7641 286.438 cv
55.9185 286.47 56.6275 285.432 56.4784 284.513 cv
55.8698 287.916 50.1476 287.297 50.471 287.39 cv
50.6978 287.455 50.9551 287.495 51.2473 287.507 cv
54.5972 287.635 60.2827 285.184 64.7922 287.245 cv
69.3018 289.307 74.7101 288.409 79.7218 288.409 cv
79.9141 288.409 80.1152 288.296 80.321 288.097 cv
79.4944 288.562 77.3425 288.102 75.7929 288.102 cv
cp
.221927 .287022 .37705 .0664683 cmyk
f
59.1217 282.77 mo
63.1421 283.358 67.0653 283.286 71.1083 283.431 cv
74.6391 283.557 78.7282 283.496 81.9383 285.216 cv
83.3246 282.343 84.1024 278.616 84.1024 278.616 cv
49.7012 279.905 li
49.526 280.751 49.3397 281.596 49.1921 282.4 cv
52.4571 282.169 55.9439 282.305 59.1217 282.77 cv
cp
f
63.9005 281.838 mo
50.3665 281.902 35.8126 284.157 36.1991 274.236 cv
36.5856 264.315 38.2606 250.915 59.1333 249.498 cv
80.006 248.081 91.0866 256.069 95.0807 263.284 cv
99.0749 270.499 100.492 288.151 89.2827 285.703 cv
78.0733 283.255 76.9135 281.776 63.9005 281.838 cv
cp
.107454 .133852 .215213 .00311284 cmyk
f
58.3879 268.752 mo
91.414 264.516 82.6093 252.855 78.84 251.456 cv
73.5595 249.802 66.9955 248.953 58.9779 249.498 cv
47.199 250.298 41.5372 254.914 38.7675 260.567 cv
37.185 264.952 42.3909 270.804 58.3879 268.752 cv
cp
.0588998 .089662 .115541 0 cmyk
f
94.9253 263.284 mo
93.9526 261.527 92.5558 259.724 90.7032 258.022 cv
90.6328 258.191 90.4422 258.355 90.4947 258.529 cv
95.183 274.107 41.3901 284.293 36.0437 274.236 cv
35.6572 284.157 50.2112 281.902 63.7452 281.837 cv
76.7581 281.776 77.918 283.255 89.1274 285.703 cv
100.337 288.151 98.9195 270.499 94.9253 263.284 cv
cp
.1561 .224277 .310918 .0218509 cmyk
f
68.0196 252.524 mo
68.1834 253.99 64.7807 255.574 60.4194 256.061 cv
56.0582 256.548 52.3899 255.754 52.2261 254.288 cv
52.0623 252.821 55.4651 251.237 59.8263 250.75 cv
64.1876 250.263 67.8558 251.057 68.0196 252.524 cv
cp
.028809 .0531624 .066865 0 cmyk
f
55.6785 256.088 mo
55.804 257.212 53.1965 258.426 49.8545 258.799 cv
46.5125 259.172 43.7016 258.563 43.5761 257.44 cv
43.4506 256.316 46.058 255.102 49.4 254.729 cv
52.742 254.356 55.553 254.964 55.6785 256.088 cv
cp
f
67.7942 267.293 mo
67.8862 268.117 65.9756 269.006 63.5266 269.28 cv
61.0776 269.553 59.0178 269.107 58.9257 268.284 cv
58.8337 267.46 60.7443 266.571 63.1933 266.297 cv
65.6423 266.024 67.7021 266.47 67.7942 267.293 cv
cp
.0588998 .089662 .115541 0 cmyk
f
61.4775 267.616 mo
61.4553 269.061 57.9535 270.179 53.6559 270.113 cv
49.3584 270.047 45.8925 268.822 45.9146 267.376 cv
45.9367 265.931 49.4386 264.813 53.7361 264.879 cv
58.0337 264.945 61.4996 266.171 61.4775 267.616 cv
cp
f
61.9749 271.106 mo
61.996 271.519 61.0162 271.905 59.7865 271.968 cv
58.5569 272.031 57.5429 271.746 57.5219 271.333 cv
57.5008 270.919 58.4806 270.533 59.7102 270.47 cv
60.9399 270.408 61.9538 270.692 61.9749 271.106 cv
cp
f
69.7928 266.086 mo
69.9176 266.657 68.6407 267.421 66.9408 267.792 cv
65.241 268.163 63.7619 268 63.6371 267.429 cv
63.5124 266.857 64.7893 266.093 66.4891 265.722 cv
68.1889 265.351 69.6681 265.514 69.7928 266.086 cv
cp
.107454 .133852 .215213 .00311284 cmyk
f
77.5207 264.597 mo
77.6977 265.154 76.4968 266.033 74.8383 266.559 cv
73.1798 267.086 71.6917 267.06 71.5146 266.502 cv
71.3376 265.944 72.5385 265.066 74.197 264.539 cv
75.8555 264.013 77.3436 264.039 77.5207 264.597 cv
cp
.0588998 .089662 .115541 0 cmyk
f
84.851 271.44 mo
85.0134 272.421 82.7814 273.607 79.8657 274.09 cv
76.9499 274.572 74.4545 274.169 74.2921 273.188 cv
74.1296 272.207 76.3616 271.021 79.2774 270.539 cv
82.1931 270.056 84.6885 270.46 84.851 271.44 cv
cp
.1561 .224277 .310918 .0218509 cmyk
f
56.2429 279.494 mo
56.1738 280.779 53.0201 281.654 49.1987 281.449 cv
45.3774 281.243 42.3356 280.034 42.4046 278.749 cv
42.4736 277.463 45.6274 276.588 49.4487 276.794 cv
53.2701 277 56.3119 278.209 56.2429 279.494 cv
cp
f
67.5949 276.528 mo
67.6348 277.252 65.9234 277.934 63.7724 278.052 cv
61.6214 278.17 59.8453 277.68 59.8055 276.956 cv
59.7656 276.233 61.477 275.55 63.628 275.432 cv
65.779 275.314 67.5551 275.805 67.5949 276.528 cv
cp
f
83.8002 271.541 mo
83.9115 272.08 82.7042 272.784 81.1036 273.115 cv
79.5031 273.446 78.1154 273.278 78.0041 272.739 cv
77.8928 272.201 79.1001 271.496 80.7007 271.165 cv
82.3013 270.835 83.689 271.003 83.8002 271.541 cv
cp
.107454 .133852 .215213 .00311284 cmyk
f
92.2054 267.47 mo
92.4087 268.454 90.2031 269.741 87.2789 270.345 cv
84.3548 270.949 81.8195 270.642 81.6162 269.658 cv
81.4129 268.674 83.6185 267.387 86.5427 266.783 cv
89.4668 266.178 92.0021 266.486 92.2054 267.47 cv
cp
f
64.4398 277.541 mo
64.4842 278.325 62.6315 279.067 60.3017 279.199 cv
57.9719 279.331 56.0472 278.803 56.0028 278.019 cv
55.9585 277.235 57.8112 276.493 60.141 276.361 cv
62.4708 276.229 64.3955 276.757 64.4398 277.541 cv
cp
f
46.1536 278.444 mo
46.0301 279.157 44.2094 279.438 42.0868 279.071 cv
39.9643 278.704 38.3438 277.827 38.4673 277.113 cv
38.5908 276.399 40.4115 276.118 42.534 276.486 cv
44.6566 276.853 46.2771 277.729 46.1536 278.444 cv
cp
.1561 .224277 .310918 .0218509 cmyk
f
58.7314 268.769 mo
58.7263 269.137 57.8355 269.423 56.7416 269.408 cv
55.6477 269.393 54.765 269.083 54.7701 268.715 cv
54.7751 268.347 55.666 268.061 56.7599 268.076 cv
57.8538 268.091 58.7365 268.401 58.7314 268.769 cv
cp
.107454 .133852 .215213 .00311284 cmyk
f
193.429 266.779 mo
193.429 266.779 162.583 262.991 144.869 262.824 cv
144.335 264.14 143.817 265.442 143.291 266.684 cv
142.736 267.996 142.189 269.31 141.642 270.625 cv
157.622 280.213 159.017 298.389 155.668 306.453 cv
150.821 318.121 179.568 315.46 177.029 305.376 cv
174.502 295.338 174.169 276.847 193.429 266.779 cv
cp
f
144.383 264.023 mo
144.018 264.929 143.657 265.821 143.291 266.684 cv
142.584 268.354 141.888 270.027 141.193 271.702 cv
147.491 275.151 154.185 280.164 156.337 286.153 cv
155.778 283.91 151.43 273.582 146.994 269.628 cv
155.495 274.586 161.936 293.417 162.255 299.431 cv
162.235 290.891 156.619 277.335 153.76 269.704 cv
154.509 270.647 158.176 275.489 160.888 285.481 cv
160.5 277.43 158.304 270.654 157.16 268.267 cv
164.081 276.145 163.644 290.867 165.15 300.44 cv
165.094 290.634 163.691 279.357 164.446 269.926 cv
165.934 273.609 166.14 280.588 166.584 284.859 cv
167.424 279.904 167.462 277.052 169.505 271.813 cv
167.911 281.579 167.322 291.069 167.415 301.487 cv
168.428 289.73 169.621 282.443 173.521 273.185 cv
172.469 278.448 170.937 282.842 171.243 291.459 cv
172.125 285.883 173.927 279.421 178.152 274.825 cv
175.302 281.858 170.556 291.717 173.779 302.957 cv
172.902 288.287 179.115 274.115 193.926 268.1 cv
194.13 267.99 li
194.13 267.99 162.342 264.134 144.383 264.023 cv
cp
.1561 .224277 .310918 .0218509 cmyk
f
142.533 268.496 mo
142.219 269.246 141.903 269.996 141.591 270.747 cv
146.495 272.937 151.458 277.405 154.396 282.07 cv
150.095 274.239 145.387 270.56 142.533 268.496 cv
cp
.304448 .354803 .4159 .147341 cmyk
f
170.909 257.919 mo
162.779 257.23 153.545 258.401 146.113 260.239 cv
145.941 260.51 145.77 260.782 145.597 261.053 cv
144.846 262.842 144.149 264.631 143.44 266.325 cv
150.818 268.92 154.118 274.121 158.087 283.209 cv
154.706 273.639 153.229 270.802 148.723 263.472 cv
149.899 263.729 154.261 264.603 158.626 276.936 cv
157.807 271.563 154.37 263.85 153.227 261.463 cv
155.972 263.109 161.646 267.77 163.511 280.669 cv
163.375 276.667 162.136 265.496 163.183 259.85 cv
165.462 264.087 165.776 273.074 166.795 278.992 cv
167.173 268.063 169.296 269.357 171.823 264.769 cv
170.777 270.439 168.451 279.423 168.057 289.365 cv
168.615 282.855 172.252 271.427 174.015 268.865 cv
174 268.76 175.683 267.578 175.693 267.688 cv
174.352 273.486 172.533 279.762 172.003 284.728 cv
174.646 273.334 181 271.15 180.941 271.26 cv
177.667 276.66 174.567 283.867 173.363 295.548 cv
176.145 279.282 179.103 273.898 193.914 267.883 cv
194.119 267.773 li
194.119 267.773 184.56 259.075 170.909 257.919 cv
cp
f
175.271 304.181 mo
174.616 299.01 174.821 296.026 175.279 290.49 cv
174.455 294.608 173.71 299.259 175.271 304.181 cv
cp
f
172.699 303.331 mo
169.928 293.68 172.528 284.379 176.091 278.324 cv
174.461 282.318 170.798 290.49 172.699 303.331 cv
cp
f
170.706 305.62 mo
168.47 297.445 170.489 287.038 171.172 281.94 cv
170.042 286.669 166.663 297.409 170.706 305.62 cv
cp
f
166.13 303.547 mo
166.648 298.937 166.483 286.674 165.39 279.538 cv
164.956 284.841 166.13 303.547 166.13 303.547 cv
cp
f
162.884 305.987 mo
165.828 295.77 161.309 276.543 161.931 279.134 cv
163.668 294.654 162.884 305.987 162.884 305.987 cv
cp
f
160.846 303.593 mo
161.697 296.813 159.667 290.564 156.511 283.828 cv
160.452 293.487 160.846 303.593 160.846 303.593 cv
cp
f
159.246 301.418 mo
159.932 295.996 158.129 289.881 156.676 286.974 cv
158.478 293.87 159.246 301.418 159.246 301.418 cv
cp
f
162.592 295.703 mo
162.592 295.703 162.624 274.765 151.654 257.116 cv
162.757 266.771 163.076 292.386 162.592 295.703 cv
cp
f
175.839 256.855 mo
175.839 256.855 166.915 269.166 167.017 296.706 cv
165.923 288.896 167.286 262.684 175.839 256.855 cv
cp
f
181.634 258.235 mo
181.634 258.235 171.534 269.759 168.907 297.216 cv
168.592 289.34 172.546 263.33 181.634 258.235 cv
cp
f
185.118 267.991 mo
185.118 267.991 173.113 278.76 172.965 297.49 cv
172.176 285.416 178.301 270.673 185.118 267.991 cv
cp
f
146.689 259.329 mo
146.682 259.341 li
154.549 269.557 161.68 291.394 161.68 291.394 cv
161.443 288.895 156.047 268.112 146.689 259.329 cv
cp
f
143.75 265.58 mo
143.652 265.817 143.555 266.051 143.457 266.284 cv
156.59 277.076 161.162 295.585 161.162 295.585 cv
160.952 293.361 155.643 273.721 143.75 265.58 cv
cp
f
165.185 260.326 mo
162.057 265.5 164.753 287.699 165.388 295.75 cv
163.713 269.558 165.185 260.326 165.185 260.326 cv
cp
f
179.064 266.711 mo
175.452 264.859 li
175.452 264.859 175.452 257.973 175.385 257.773 cv
175.319 257.572 182.806 261.182 182.806 261.182 cv
179.064 266.711 li
cp
f
157.87 270.608 mo
158.093 265.081 li
158.093 265.081 151.207 265.081 151.007 265.014 cv
150.806 264.947 154.416 272.434 154.416 272.434 cv
157.87 270.608 li
cp
f
185.814 254.497 mo
176.322 257.84 168.166 248.079 153.458 256.904 cv
153.458 256.904 137.013 248.079 130.595 257.171 cv
128.327 260.384 126.183 264.391 133.002 266.664 cv
139.82 268.937 139.553 276.558 151.319 273.349 cv
152.362 273.065 153.394 272.757 154.416 272.434 cv
154.988 271.555 155.398 270.271 154.806 268.602 cv
155.642 269.466 156.421 270.64 156.987 271.589 cv
165.016 268.854 172.181 265.642 177.377 266.323 cv
178.269 264.593 179.266 261.517 177.007 258.897 cv
178.794 260.314 180.065 263.319 179.064 266.711 cv
179.361 266.813 179.651 266.928 179.931 267.065 cv
186.215 270.14 193.569 271.21 195.842 266.263 cv
198.115 261.316 195.307 251.154 185.814 254.497 cv
cp
.107454 .133852 .215213 .00311284 cmyk
f
137.882 257.621 mo
135.871 259.483 139.743 259.706 142.35 261.084 cv
145.873 262.946 150.753 258.076 153.458 256.904 cv
153.458 256.904 145.292 252.036 137.882 257.621 cv
cp
.1561 .224277 .310918 .0218509 cmyk
f
187.913 258.478 mo
193.768 261.637 187.09 254.048 185.814 254.497 cv
183.814 255.201 181.872 255.322 179.916 255.159 cv
182.608 256.232 185.576 257.217 187.913 258.478 cv
cp
f
147.958 257.738 mo
147.124 257.913 146.204 256.508 145.824 256.395 cv
146.582 258.207 145.561 258.4 145.134 258.644 cv
144.818 258.825 143.159 258.515 142.461 256.466 cv
142.194 258.004 143.825 258.938 143.464 259.14 cv
142.762 259.534 138.717 260.812 137.439 258.704 cv
138.063 260.547 140.624 260.895 142.137 261.373 cv
145.937 262.573 150.83 258.041 153.536 256.868 cv
153.536 256.868 151.843 256.543 150.422 257.018 cv
150.373 257.034 149.804 256.69 149.488 256.5 cv
149.467 257.153 148.425 257.64 147.958 257.738 cv
cp
.221927 .287022 .37705 .0664683 cmyk
f
188.637 258.844 mo
188.66 257.762 188.081 256.582 187.112 255.782 cv
186.354 257.712 185.074 255.347 179.916 255.159 cv
182.608 256.232 186.143 257.719 188.637 258.844 cv
cp
f
168.166 265.795 mo
157.981 269.234 157.479 266.355 155.23 266.697 cv
153.771 266.919 153.018 269.911 151.386 271.076 cv
148.343 273.249 143.065 273.689 141.793 271.31 cv
136.678 261.75 132.612 266.042 130.027 264.491 cv
127.913 263.223 128.939 261.388 128.817 260.232 cv
127.85 262.648 128.244 265.078 133.002 266.664 cv
139.82 268.937 139.553 276.558 151.319 273.349 cv
152.362 273.065 153.394 272.757 154.416 272.434 cv
154.988 271.555 155.398 270.271 154.806 268.602 cv
155.642 269.466 156.421 270.64 156.987 271.589 cv
165.016 268.854 172.181 265.642 177.377 266.323 cv
178.062 264.994 179.76 261.032 177.007 258.897 cv
177.124 261.984 173.313 264.057 168.166 265.795 cv
cp
.1561 .224277 .310918 .0218509 cmyk
f
189.959 266.397 mo
182.204 265.995 180.402 259.351 177.007 258.897 cv
179.536 261.907 179.728 264.463 179.064 266.711 cv
179.361 266.813 179.651 266.928 179.931 267.065 cv
186.215 270.14 193.569 271.21 195.842 266.263 cv
196.425 264.993 196.671 263.38 196.559 261.74 cv
196.044 265.773 193.011 266.554 189.959 266.397 cv
cp
f
132.169 261.513 mo
132.748 261.734 133.344 261.862 133.828 261.868 cv
134.937 261.882 135.38 262.114 136.387 262.424 cv
137.251 262.69 138.275 262.153 138.976 262.465 cv
139.51 262.703 139.818 263.75 140.473 264.095 cv
140.946 264.344 141.741 264.235 142.291 264.504 cv
143.691 265.188 144.08 266.552 145.802 265.627 cv
146.698 265.146 146.985 264.062 148.143 263.866 cv
149.181 263.69 149.936 264.52 150.934 264.477 cv
152.399 264.413 152.697 262.841 153.967 262.332 cv
155.296 261.801 156.909 262.187 158.281 262.294 cv
159.933 262.424 160.905 261.29 162.459 261.211 cv
164.521 261.106 165.383 262.048 167.422 261.039 cv
168.759 260.377 170.126 260.4 171.504 259.706 cv
172.419 259.246 173.777 259.04 174.24 258.011 cv
174.939 256.461 173.308 255.335 172.033 254.925 cv
169.731 254.185 166.703 254.277 164.316 254.629 cv
163.574 254.738 163.794 254.921 162.854 254.777 cv
161.018 254.496 160.014 255.084 158.436 256.043 cv
157.108 256.851 155.417 257.651 154.222 258.542 cv
153.736 258.904 153.575 259.63 153.197 259.909 cv
152.292 260.579 150.876 260.234 149.856 260.73 cv
148.643 261.318 147.823 262.59 146.666 263.293 cv
143.449 265.246 133.301 261.4 137.039 257.002 cv
137.465 256.501 141.333 254.353 141.284 253.954 cv
141.171 253.041 136.616 253.789 135.906 254 cv
134.143 254.522 128.052 258.199 130.552 260.551 cv
130.978 260.952 131.565 261.283 132.169 261.513 cv
cp
.0588998 .089662 .115541 0 cmyk
f
191.233 257.497 mo
191.802 258.251 192.188 259.034 191.463 259.822 cv
190.479 260.893 184.865 258.278 183.528 257.794 cv
182.44 257.4 177.886 255.086 176.81 256.334 cv
175.448 257.918 181.61 258.174 181.941 258.285 cv
182.503 258.474 182.864 259.15 183.471 259.382 cv
184.038 259.598 184.662 259.324 185.279 259.601 cv
186.596 260.193 186.801 261.069 188.388 261.242 cv
190.133 261.434 189.717 261.405 191.19 262.412 cv
192.825 263.531 194.399 262.951 195.022 261.122 cv
195.737 259.023 194.571 256.71 192.853 255.482 cv
192.307 255.092 190.965 253.951 190.259 254.604 cv
189.317 255.475 190.449 256.459 191.233 257.497 cv
cp
.028809 .0531624 .066865 0 cmyk
f
136.015 257.387 mo
135.685 257.821 135.509 258.328 135.631 258.98 cv
135.747 259.602 136.56 260.282 135.794 260.652 cv
134.771 261.145 132.748 259.744 132.451 258.8 cv
131.725 256.49 135.064 254.4 137.037 254.548 cv
139.479 254.732 136.546 256.688 136.015 257.387 cv
cp
f
159.025 258.568 mo
158.882 258.588 li
157.452 258.847 156.62 260.428 155.119 260.688 cv
155.171 260.436 155.349 260.247 155.544 260.047 cv
155.759 259.826 156.313 259.917 156.577 259.695 cv
156.794 259.513 156.687 259.207 156.854 259.038 cv
158.001 257.878 159.122 257.461 160.642 256.906 cv
163.969 255.691 167.558 255.343 171.043 256.028 cv
174.202 256.648 171.995 258.162 170.024 258.491 cv
168.731 258.707 167.267 258.919 165.954 258.839 cv
164.833 258.77 163.728 258.265 162.592 258.32 cv
161.918 258.352 161.402 258.982 160.805 259.013 cv
160.104 259.048 159.777 258.501 159.025 258.568 cv
cp
f
139.466 260.555 mo
140.371 260.929 141.384 261.135 142.137 261.373 cv
145.937 262.573 150.83 258.041 153.536 256.868 cv
153.536 256.868 151.989 256.764 146.814 259.982 cv
143.977 261.746 139.505 260.469 139.466 260.555 cv
cp
.304448 .354803 .4159 .147341 cmyk
f
188.637 258.844 mo
188.642 258.595 188.615 258.34 188.559 258.085 cv
187.513 258.444 184.514 256.427 179.916 255.159 cv
182.608 256.232 186.143 257.719 188.637 258.844 cv
cp
f
176.059 299.998 mo
170.567 311.659 154.411 313.454 155.373 307.296 cv
152.24 317.981 179.505 315.209 177.029 305.376 cv
176.847 304.65 176.213 300.806 176.059 299.998 cv
cp
.1561 .224277 .310918 .0218509 cmyk
f
195.6 278.155 mo
178.654 282.343 li
178.549 285.481 li
183.675 285.377 187.089 289.987 187.86 292.595 cv
189.22 297.198 187.492 303.302 177.58 304.278 cv
167.669 305.254 173.946 321.051 188.279 314.355 cv
202.611 307.66 204.093 298.29 206.796 293.641 cv
209.411 289.143 213.333 284.05 216.778 281.314 cv
195.6 278.155 li
cp
.107454 .133852 .215213 .00311284 cmyk
f
188.103 292.322 mo
188.444 293.392 188.635 294.75 188.587 295.868 cv
189.17 292.16 188.304 289.316 186.874 285.91 cv
186.872 285.915 li
188.803 287.843 189.093 290.756 189.306 293.258 cv
189.713 290.669 190.102 287.54 189.073 285.096 cv
190.312 288.017 191.286 293.342 190.618 296.545 cv
192.32 293.682 192.013 287.585 191.565 283.413 cv
192.92 287.807 192.541 292.868 192.54 292.804 cv
193.293 289.872 193.68 287.519 193.551 284.425 cv
194.389 288.454 194.021 292.088 192.796 296.296 cv
195.376 292.132 195.591 284.959 197.194 279.525 cv
197.164 284.24 196.499 292.203 194.705 296.548 cv
196.13 294.159 196.517 292.129 197.709 289.195 cv
198.341 287.642 199.548 284.341 200.514 283.071 cv
201.706 287.165 197.22 295.045 196.323 297.286 cv
199.611 292.741 200.485 287.875 202.706 284.849 cv
202.637 287.105 202.945 285.959 202.254 288.099 cv
201.55 290.281 198.999 295.803 197.838 297.737 cv
200.901 294.095 202.48 288.422 205.02 286.106 cv
204.326 289.261 202.964 292.677 200.191 296.964 cv
204.614 291.28 205.179 287.717 206.134 286.225 cv
205.635 289.418 203.447 293.579 200.546 298.06 cv
205.059 294.159 206.442 290.737 208.218 286.81 cv
208.086 288.093 204.586 295.317 201.158 299.349 cv
204.06 297.931 207.837 291.074 210.025 288.705 cv
211.06 287.584 215.062 281.058 216.778 281.314 cv
195.6 278.155 li
178.654 282.343 li
178.55 285.481 li
182.861 285.394 186.845 288.368 188.103 292.322 cv
cp
.1561 .224277 .310918 .0218509 cmyk
f
195.6 278.155 mo
178.654 282.343 li
178.845 285.387 li
183.452 284.399 185.829 288.191 187.956 290.998 cv
187.316 289.39 184.674 284.407 182.28 282.533 cv
190.145 283.517 190.184 292.014 189.665 294.745 cv
191.121 289.803 189.73 284.957 186.095 281.501 cv
186.096 281.413 188.88 281.399 188.877 281.501 cv
192.827 285.764 192.054 293.522 191.929 295.862 cv
192.661 293.704 192.871 285.54 191.121 281.007 cv
189.938 277.943 192.345 281.198 193.589 280.244 cv
196.192 285.315 195.653 289.743 193.908 296.286 cv
197 288.412 196.541 286.092 196.866 279.078 cv
197.909 280.368 199.533 278.656 199.334 281.86 cv
199.128 285.17 197.693 291.488 195.878 295.996 cv
198.84 290.791 199.864 285.418 201.309 280.289 cv
203.586 283.49 199.479 293.039 197.09 297.612 cv
202.348 289.027 202.941 284.017 204.54 280.244 cv
205.751 285.226 200.845 293.314 199.573 296.423 cv
202.55 292.327 206.07 284.555 207.277 281.725 cv
207.816 285.63 206.987 287.698 201.219 296.849 cv
208.489 287.694 208.219 284.792 210.149 281.501 cv
211.033 287.38 208.508 289.518 202.759 298.147 cv
207.417 292.603 208.907 289.893 211.635 285.263 cv
212.59 283.64 214.566 280.984 216.778 281.314 cv
195.6 278.155 li
cp
.304448 .354803 .4159 .147341 cmyk
f
184.569 283.168 mo
187.078 281.742 li
187.078 281.742 186.868 276.852 186.91 276.707 cv
186.951 276.563 181.743 279.355 181.743 279.355 cv
184.569 283.168 li
cp
.229984 .257206 .302678 .0479744 cmyk
f
199.742 285.29 mo
199.415 281.371 li
199.415 281.371 204.306 281.161 204.446 281.107 cv
204.586 281.053 202.251 286.482 202.251 286.482 cv
199.742 285.29 li
cp
f
179.403 274.699 mo
186.247 276.783 193.374 268.07 204.09 273.889 cv
204.09 273.889 211.592 266.83 218.704 274.914 cv
220.551 277.013 222.058 279.908 217.285 281.73 cv
212.511 283.552 212.933 288.957 204.478 287.037 cv
203.729 286.867 202.986 286.679 202.251 286.482 cv
201.818 285.875 201.487 284.975 201.857 283.772 cv
201.289 284.411 200.772 285.268 200.399 285.96 cv
194.613 284.262 189.426 282.199 185.756 282.841 cv
185.07 281.639 184.268 279.486 185.793 277.555 cv
184.566 278.616 183.755 280.789 184.569 283.168 cv
184.362 283.25 184.159 283.34 183.964 283.446 cv
179.595 285.822 174.404 286.806 172.639 283.362 cv
170.874 279.917 172.558 272.614 179.403 274.699 cv
cp
.056733 .0739147 .119722 0 cmyk
f
213.543 275.456 mo
215.028 276.717 212.284 276.994 210.475 278.052 cv
208.029 279.482 206.047 274.639 204.09 273.889 cv
204.09 273.889 208.109 271.715 213.543 275.456 cv
cp
.10071 .145205 .20502 .00241093 cmyk
f
178.034 277.59 mo
173.971 280.013 178.483 274.419 179.403 274.699 cv
180.845 275.138 182.228 275.164 183.612 274.99 cv
181.733 275.833 179.655 276.623 178.034 277.59 cv
cp
f
206.346 275.885 mo
205.57 275.01 204.832 274.174 204.09 273.889 cv
204.926 273.743 208.295 273.23 207.826 274.901 cv
208.458 275.154 209.447 275.01 209.861 275.393 cv
210.565 276.044 210.397 276.783 211.526 277.06 cv
212.348 277.262 213.451 277.011 213.89 276.211 cv
213.503 277.54 211.694 277.865 210.634 278.25 cv
208.982 278.852 207.614 277.316 206.346 275.885 cv
cp
.156558 .203616 .26862 .0173037 cmyk
f
177.531 277.873 mo
177.481 277.105 177.856 276.249 178.52 275.651 cv
179.118 276.999 179.955 275.28 183.612 274.99 cv
181.733 275.833 179.268 276.997 177.531 277.873 cv
cp
f
192.283 282.185 mo
199.621 284.317 199.89 282.257 201.498 282.432 cv
202.541 282.545 203.167 284.646 204.362 285.424 cv
206.589 286.875 210.351 287.027 211.182 285.298 cv
214.523 278.352 217.543 281.276 219.331 280.096 cv
220.794 279.131 220.009 277.859 220.061 277.034 cv
220.821 278.72 220.615 280.458 217.285 281.73 cv
212.511 283.552 212.933 288.957 204.478 287.037 cv
203.729 286.867 202.986 286.679 202.251 286.482 cv
201.818 285.875 201.487 284.975 201.857 283.772 cv
201.289 284.411 200.772 285.268 200.399 285.96 cv
194.613 284.262 189.426 282.199 185.756 282.841 cv
185.229 281.918 183.902 279.156 185.793 277.555 cv
185.804 279.752 188.573 281.108 192.283 282.185 cv
cp
.10071 .145205 .20502 .00241093 cmyk
f
176.822 283.277 mo
182.317 282.756 183.395 277.982 185.793 277.555 cv
184.088 279.77 184.03 281.592 184.569 283.168 cv
184.362 283.25 184.159 283.34 183.964 283.446 cv
179.595 285.822 174.404 286.806 172.639 283.362 cv
172.186 282.478 171.962 281.339 171.992 280.171 cv
172.481 283.02 174.659 283.482 176.822 283.277 cv
cp
f
206.881 279.398 mo
206.713 279.608 206.362 279.754 205.755 279.804 cv
203.999 279.947 202.222 279.936 200.564 279.246 cv
198.319 278.31 196.769 278.027 194.275 278.204 cv
192.714 278.315 189.327 278.943 187.997 277.838 cv
185.991 276.171 188.904 274.268 190.174 273.795 cv
192.633 272.88 195.194 272.519 197.817 272.58 cv
199.278 272.614 200.802 273.431 202.12 274.014 cv
203.137 274.463 204.075 274.871 204.696 275.807 cv
205.281 276.687 207.551 278.559 206.881 279.398 cv
cp
.0218509 .0319829 .0393072 0 cmyk
f
218.433 276.949 mo
217.947 278.588 215.296 279.012 213.817 279.953 cv
212.369 280.875 211.136 282.945 209.403 283.323 cv
206.4 283.978 208.284 279.819 209.806 279.089 cv
211.119 278.459 213.221 278.818 214.219 277.616 cv
215.634 275.912 213.597 273.923 212.007 273.447 cv
211.43 273.274 210.855 273.381 210.589 272.682 cv
209.954 271.017 211.92 271.525 212.728 271.615 cv
214.607 271.824 217.488 273.398 218.237 275.195 cv
218.534 275.908 218.573 276.479 218.433 276.949 cv
cp
f
175.646 276.995 mo
175.264 277.548 175.014 278.115 175.553 278.654 cv
176.285 279.384 180.192 277.355 181.127 276.971 cv
181.888 276.658 185.052 274.875 185.854 275.729 cv
186.87 276.813 182.501 277.182 182.269 277.272 cv
181.876 277.423 181.64 277.914 181.216 278.097 cv
180.82 278.268 180.368 278.092 179.938 278.308 cv
179.021 278.768 178.902 279.397 177.781 279.568 cv
176.547 279.757 176.841 279.724 175.826 280.485 cv
174.699 281.329 173.563 280.965 173.065 279.685 cv
172.493 278.216 173.251 276.538 174.434 275.613 cv
174.809 275.32 175.728 274.468 176.249 274.91 cv
176.945 275.501 176.171 276.234 175.646 276.995 cv
cp
f
214.862 275.233 mo
215.109 275.531 215.25 275.885 215.183 276.353 cv
215.119 276.798 214.563 277.306 215.118 277.545 cv
215.859 277.864 217.253 276.807 217.436 276.128 cv
217.881 274.465 215.446 273.082 214.049 273.248 cv
212.32 273.453 214.463 274.752 214.862 275.233 cv
cp
0 0 0 0 cmyk
f
198.507 276.528 mo
198.849 276.465 199.189 276.425 199.523 276.448 cv
200.707 276.532 201.591 277.622 202.714 277.984 cv
205.787 278.975 203.632 276.522 202.552 275.498 cv
201.667 274.658 199.48 273.75 198.254 273.923 cv
197.523 274.025 197.238 274.26 196.546 274.164 cv
195.652 274.04 195.194 273.835 194.214 274.058 cv
193.039 274.324 190.712 274.273 189.961 275.377 cv
188.597 277.382 192.595 277.286 193.641 277.177 cv
194.683 277.068 195.584 276.878 196.599 276.858 cv
197.221 276.847 197.867 276.647 198.507 276.528 cv
cp
f
212.507 277.588 mo
211.876 277.881 211.162 278.058 210.634 278.25 cv
207.972 279.219 206.047 274.639 204.09 273.889 cv
204.09 273.889 205.744 272.878 208.174 276.464 cv
209.106 277.84 212.476 277.528 212.507 277.588 cv
cp
.229984 .257206 .302678 .0479744 cmyk
f
177.531 277.873 mo
177.519 277.695 177.53 277.513 177.563 277.331 cv
178.316 277.554 180.385 276.03 183.612 274.99 cv
181.733 275.833 179.268 276.997 177.531 277.873 cv
cp
f
188.608 310.492 mo
184.253 311.464 175.36 311.126 173.667 306.135 cv
170.298 310.374 176.625 319.799 188.279 314.355 cv
198.632 309.519 202.279 303.288 204.525 298.448 cv
199.143 306.729 195.501 308.953 188.608 310.492 cv
cp
.1561 .224277 .310918 .0218509 cmyk
f
290.638 412.455 mo
288.895 404.615 286.935 354.303 286.935 354.303 cv
277.134 354.739 li
277.134 354.739 277.352 400.912 277.57 412.673 cv
277.788 424.434 292.38 420.296 290.638 412.455 cv
cp
.0588998 .089662 .115541 0 cmyk
f
282.627 387.414 mo
283.223 387.547 283.594 387.983 284.269 388.008 cv
286.091 388.076 286.868 387.409 288.583 388.621 cv
287.641 372.432 286.935 354.303 286.935 354.303 cv
277.134 354.739 li
277.134 354.739 277.212 371.201 277.321 386.97 cv
278.047 387.201 278.936 387.543 279.653 387.707 cv
280.193 387.829 281.81 387.231 282.627 387.414 cv
cp
.1561 .224277 .310918 .0218509 cmyk
f
290.012 408.022 mo
289.343 409.714 288.45 411.292 287.259 412.608 cv
285.872 414.14 283.836 415.416 281.693 415.347 cv
280.01 415.293 278.732 414.427 277.601 413.341 cv
278.352 424.269 292.346 420.143 290.638 412.455 cv
290.431 411.525 290.221 409.995 290.012 408.022 cv
cp
.107454 .133852 .215213 .00311284 cmyk
f
288.166 366.045 mo
276.059 364.471 li
276.059 364.471 275.211 384.932 274.485 386.264 cv
273.758 387.596 276.906 385.417 278.723 386.143 cv
280.539 386.87 280.781 386.627 281.749 386.143 cv
282.718 385.659 284.05 387.838 285.018 386.627 cv
285.987 385.417 288.53 387.959 289.377 386.627 cv
290.225 385.296 287.803 368.95 288.166 366.045 cv
cp
.0588998 .089662 .115541 0 cmyk
f
288.593 373.273 mo
288.275 369.991 288.033 367.112 288.166 366.045 cv
276.059 364.471 li
276.059 364.471 275.931 367.563 275.731 371.422 cv
278.456 372.816 287.296 373.55 288.593 373.273 cv
cp
.1561 .224277 .310918 .0218509 cmyk
f
274.485 386.264 mo
273.758 387.596 276.906 385.417 278.723 386.143 cv
280.539 386.87 280.781 386.627 281.749 386.143 cv
282.718 385.659 284.05 387.838 285.018 386.627 cv
285.987 385.417 288.53 387.959 289.377 386.627 cv
287.651 386.819 286.485 385.429 285.453 386.088 cv
283.334 387.443 282.576 384.711 281.326 386.031 cv
280.525 386.876 278.66 385.233 277.99 385.44 cv
275.628 386.17 274.906 386.651 274.485 386.264 cv
cp
.107454 .133852 .215213 .00311284 cmyk
f
261.491 370.024 mo
250.165 370.508 252.391 364.766 258.199 360.119 cv
264.007 355.472 271.654 349.761 283.368 349.761 cv
295.081 349.761 302.564 354.844 308.15 359.828 cv
317.152 367.863 311.415 370.09 306.697 370.09 cv
293.145 370.09 261.491 370.024 261.491 370.024 cv
cp
.0816663 .884215 .899657 .0106203 cmyk
f
253.856 365.064 mo
253.05 366.797 253.003 367.957 254.52 369.315 cv
257.124 371.647 271.428 370.093 284.917 370.066 cv
296.922 370.043 307.446 370.506 310.244 369.595 cv
313.038 368.686 315.458 366.266 308.404 360.057 cv
312.264 367.379 295.468 363.604 276.688 366.121 cv
253.401 369.242 253.856 365.064 253.856 365.064 cv
cp
.185702 .894804 .915587 .0831617 cmyk
f
263.198 356.339 mo
268.306 352.814 274.738 349.431 283.368 349.761 cv
301.083 350.439 300.212 357.844 289.539 359.441 cv
251.056 365.201 261.378 357.595 263.198 356.339 cv
cp
0 .782864 .680568 9.15541e-005 cmyk
f
282.918 351.403 mo
283.212 352.569 280.142 354.35 276.06 355.382 cv
271.978 356.413 268.43 356.304 268.136 355.138 cv
267.841 353.971 270.911 352.19 274.993 351.158 cv
279.075 350.127 282.623 350.236 282.918 351.403 cv
cp
0 .653284 .465858 0 cmyk
f
289.905 352.368 mo
289.951 353.09 287.939 353.806 285.411 353.966 cv
282.884 354.127 280.798 353.672 280.752 352.949 cv
280.706 352.227 282.718 351.512 285.245 351.351 cv
287.773 351.191 289.859 351.646 289.905 352.368 cv
cp
f
312.499 364.797 mo
312.627 365.052 311.652 366.01 311.473 366.186 cv
311.145 366.511 310.966 367.027 310.64 367.303 cv
310.303 367.588 309.835 367.326 309.483 367.48 cv
309.175 367.615 309.181 367.922 308.771 367.961 cv
308.391 367.997 308.063 367.741 307.691 367.731 cv
307.431 367.724 307.184 367.862 306.924 367.893 cv
306.318 367.965 305.926 367.97 305.46 368.205 cv
304.911 368.483 304.481 368.279 303.932 368.408 cv
303.315 368.553 303.044 369.247 302.379 368.722 cv
301.996 368.419 302.155 368.195 301.52 368.115 cv
300.788 368.023 299.702 368 299.004 368.246 cv
298.87 368.294 298.791 368.472 298.679 368.503 cv
298.299 368.608 297.977 368.428 297.599 368.471 cv
297.122 368.525 297.114 368.815 296.762 369.017 cv
296.283 369.293 296.021 369.073 295.638 368.78 cv
294.654 368.03 293.225 368.275 292.165 368.801 cv
291.56 369.102 291.466 368.966 290.803 368.837 cv
290.18 368.716 290.241 368.929 289.805 369.151 cv
289.072 369.523 288.63 368.927 287.974 368.746 cv
287.268 368.552 286.305 368.749 285.629 368.974 cv
285.02 369.177 284.547 369.272 283.896 369.269 cv
283.305 369.266 282.626 369.096 282.058 369.27 cv
281.38 369.478 281.156 369.65 280.407 369.474 cv
278.507 369.03 276.674 369.711 274.79 369.904 cv
274.304 369.954 273.92 370.085 273.413 369.955 cv
272.341 369.681 271.299 369.248 270.21 369.724 cv
269.421 370.069 268.727 369.742 267.927 369.957 cv
267.438 370.087 267.392 370.158 266.868 369.992 cv
265.813 369.657 265.015 369.855 263.936 369.903 cv
263.469 369.923 263.24 369.737 262.793 369.91 cv
262.662 369.961 262.672 370.151 262.513 370.194 cv
262.292 370.254 262.108 370.108 261.906 370.07 cv
261.331 369.962 260.816 369.664 260.231 369.597 cv
259.67 369.533 259.116 369.691 258.555 369.631 cv
258.364 369.611 257.989 369.595 257.789 369.524 cv
257.509 369.424 257.365 369.16 257.069 369.069 cv
256.785 368.981 256.385 369.039 256.092 369.063 cv
256 369.071 255.987 369.28 255.863 369.269 cv
255.753 369.259 255.693 369.123 255.6 369.113 cv
255.342 368.892 li
255.241 368.852 255.123 369.012 255.103 369.003 cv
254.749 368.834 254.53 368.491 254.213 368.274 cv
254.015 368.139 253.506 368.058 253.419 367.792 cv
253.585 368.299 253.937 368.793 254.52 369.315 cv
257.124 371.647 271.428 370.093 284.917 370.066 cv
296.922 370.043 307.446 370.506 310.244 369.595 cv
312.174 368.967 313.925 367.618 312.499 364.797 cv
cp
.219852 .557244 1 .123323 cmyk
f
270.027 361.097 mo
270.472 360.956 270.885 360.679 271.188 360.341 cv
271.036 360.019 270.546 358.996 270.038 359.278 cv
269.625 359.507 270.084 359.998 269.938 360.301 cv
269.844 360.495 269.296 360.53 269.271 360.752 cv
269.247 360.971 269.813 361.164 270.027 361.097 cv
cp
0 .0558785 .0533761 0 cmyk
f
291.821 352.283 mo
292.083 352.669 292.467 352.986 292.877 353.18 cv
293.142 352.943 293.983 352.18 293.567 351.775 cv
293.229 351.444 292.89 352.024 292.558 351.97 cv
292.345 351.936 292.155 351.421 291.935 351.461 cv
291.718 351.5 291.695 352.097 291.821 352.283 cv
cp
f
284.487 354.131 mo
284.499 354.21 li
284.913 354.001 285.156 354.263 285.527 354.14 cv
285.612 354.111 286.952 354.322 286.044 353.583 cv
285.483 353.127 284.409 353.397 284.487 354.131 cv
cp
f
276.446 351.475 mo
276.543 351.371 276.586 351.274 276.511 351.267 cv
277.125 351.328 277.726 351.162 277.812 350.516 cv
277.343 350.479 275.562 350.617 275.648 351.383 cv
275.725 351.988 276.226 351.711 276.446 351.475 cv
cp
f
266.035 358.043 mo
266.172 358.041 266.303 358.022 266.437 357.97 cv
266.392 357.337 265.796 357.121 265.814 357.909 cv
265.823 358.033 li
266.035 358.043 li
cp
f
259.837 360.1 mo
260.02 360.071 260.217 359.996 260.308 360.04 cv
260.703 360.232 260.403 361.267 260.806 361.369 cv
261.107 361.444 261.198 360.892 261.384 360.746 cv
261.587 360.586 261.975 360.909 261.926 360.456 cv
261.911 360.321 261.024 359.46 260.881 359.397 cv
260.662 359.301 259.385 359.592 259.465 359.927 cv
259.51 360.114 259.667 360.127 259.837 360.1 cv
cp
f
306.757 364.228 mo
306.601 364.326 306.448 364.471 306.347 364.466 cv
305.908 364.444 305.782 363.373 305.371 363.436 cv
305.064 363.483 305.195 364.028 305.081 364.235 cv
304.956 364.461 304.473 364.314 304.694 364.712 cv
304.76 364.831 305.913 365.279 306.069 365.281 cv
306.309 365.285 307.372 364.519 307.168 364.242 cv
307.053 364.087 306.904 364.137 306.757 364.228 cv
cp
f
273.739 365.296 mo
273.34 365.328 272.471 365.378 272.386 365.443 cv
271.771 365.905 273.073 367.148 273.59 367.114 cv
274.633 367.043 274.446 365.739 275.551 365.438 cv
275.516 365.294 275.422 365.205 275.297 365.126 cv
274.795 364.811 274.382 365.208 273.912 365.279 cv
273.739 365.296 li
cp
f
300.182 367.032 mo
299.998 366.936 299.602 366.72 299.547 366.724 cv
299.149 366.759 299.381 367.663 299.618 367.79 cv
300.096 368.046 300.372 367.42 300.94 367.592 cv
300.914 367.385 li
300.779 367.108 300.489 367.17 300.263 367.072 cv
300.182 367.032 li
cp
f
299.135 361.667 mo
299.288 361.429 299.342 361.156 299.148 360.919 cv
298.775 360.465 298.14 360.81 297.903 361.207 cv
298.189 361.452 298.368 361.889 298.457 362.242 cv
298.67 362.156 298.964 361.933 299.135 361.667 cv
cp
f
281.794 368.691 mo
281.94 368.772 282.104 368.811 282.251 368.738 cv
282.668 368.531 282.439 367.797 282.049 367.67 cv
281.254 367.414 280.209 368.192 280.313 369.038 cv
280.769 368.832 280.97 368.462 281.382 368.267 cv
281.343 368.285 281.541 368.551 281.794 368.691 cv
cp
f
283.776 361.255 mo
283.645 361.25 283.513 361.263 283.378 361.315 cv
281.994 361.84 283.249 363.351 284.587 362.553 cv
285.312 362.12 286.047 359.98 284.704 360.513 cv
284.937 361.255 li
284.544 361.439 284.164 361.269 283.776 361.255 cv
cp
f
263.416 365.005 mo
263.601 365.128 263.88 365.232 264.267 365.31 cv
267.215 365.901 264.289 363.493 264.364 363.46 cv
263.272 363.943 262.775 364.582 263.416 365.005 cv
cp
f
293.778 358.132 mo
293.858 358.121 293.979 358.142 294.147 358.203 cv
295.43 358.67 294.166 359.083 294.199 359.118 cv
293.72 358.607 293.5 358.173 293.778 358.132 cv
cp
f
264.37 368.413 mo
264.45 368.401 264.571 368.422 264.74 368.483 cv
266.022 368.95 264.758 369.363 264.791 369.398 cv
264.312 368.888 264.092 368.453 264.37 368.413 cv
cp
f
269.985 352.93 mo
269.616 353.091 268.513 353.912 268.534 353.916 cv
269.246 354.056 271.108 354.247 270.052 352.906 cv
269.985 352.93 li
cp
f
302.491 358.966 mo
302.863 359.122 304.218 359.352 304.207 359.333 cv
303.816 358.723 302.667 357.244 302.428 358.934 cv
302.491 358.966 li
cp
f
254.639 365.875 mo
254.538 366.053 254.48 366.236 254.532 366.357 cv
254.694 366.736 254.884 366.202 255.072 366.152 cv
255.43 366.057 255.807 366.411 256.167 366.353 cv
256.409 366.313 256.952 365.636 256.584 365.51 cv
256.204 365.377 255.525 365.145 255.122 365.345 cv
254.984 365.413 254.773 365.64 254.639 365.875 cv
cp
f
299.158 354.579 mo
299.007 354.718 298.896 354.874 298.908 355.005 cv
298.946 355.415 299.291 354.966 299.486 354.976 cv
299.855 354.996 300.105 355.448 300.465 355.504 cv
300.708 355.541 301.433 355.063 301.122 354.83 cv
300.8 354.586 300.226 354.157 299.781 354.223 cv
299.628 354.246 299.358 354.397 299.158 354.579 cv
cp
f
276.605 356.065 mo
276.548 356.12 276.493 356.192 276.434 356.285 cv
276.314 356.473 276.118 357.096 276.453 357.189 cv
276.661 357.247 276.998 356.665 277.224 356.593 cv
277.803 356.407 279.738 357.736 279.042 355.925 cv
278.684 355.926 278.456 356.204 278.146 356.254 cv
277.789 356.31 277.718 356.173 277.367 356.04 cv
276.996 355.899 276.797 355.878 276.605 356.065 cv
cp
f
293.505 364.518 mo
293.36 364.435 li
292.786 364.162 292.001 365.17 292.04 365.766 cv
292.087 366.441 292.792 367.077 293.502 366.292 cv
293.225 366.116 293.02 365.685 292.802 365.501 cv
292.985 365.655 294.143 364.969 293.505 364.518 cv
cp
f
290.541 92.3158 mo
292.726 73.3215 288.201 62.0452 286.3 53.9222 cv
285.498 50.6291 290.384 49.7888 290.384 49.7888 cv
275.628 50.1774 li
278.102 51.8057 278.943 51.4696 280.287 54.8314 cv
280.742 55.9676 289.869 81.3898 280.624 91.4753 cv
270.56 102.454 294.743 106.267 290.541 92.3158 cv
cp
.045716 .0845045 .309361 0 cmyk
f
279.388 52.9911 mo
280.037 53.2953 280.697 53.5689 281.396 53.7341 cv
282.291 53.9452 285.274 53.2065 286.047 60.1862 cv
287.881 60.2639 287.507 58.7161 287.547 58.7153 cv
287.521 58.608 286.324 54.0285 286.3 53.9223 cv
285.498 50.6291 290.384 49.7888 290.384 49.7888 cv
275.628 50.1774 li
277.516 51.42 278.453 51.5203 279.388 52.9911 cv
cp
.088777 .183658 .522454 .00521859 cmyk
f
282.386 61.6258 mo
282.673 62.7429 282.961 63.9518 283.23 65.2251 cv
285.337 67.2536 287.233 63.6619 288.936 64.1592 cv
288.569 62.4651 288.464 62.1671 288.076 60.677 cv
286.202 61.1275 284.312 61.4741 282.386 61.6258 cv
cp
f
281.944 60.014 mo
281.944 60.014 278.453 63.0632 278.553 63.6619 cv
282.644 64.9589 285.637 64.0609 286.734 63.2628 cv
287.832 62.4646 291.124 62.6642 291.922 62.1653 cv
292.72 61.6665 287.547 58.7153 287.547 58.7153 cv
287.547 58.7153 286.233 61.7536 281.944 60.014 cv
cp
.0167239 0 .16669 0 cmyk
f
290.541 92.3158 mo
290.448 94.2248 279.82 94.0561 280.798 91.2875 cv
277.121 94.1405 292.515 95.6165 290.541 92.3158 cv
cp
.088777 .183658 .522454 .00521859 cmyk
f
280.234 92.2387 mo
280.498 94.2011 290.008 95.0476 290.679 93.091 cv
291.026 94.9496 280.327 95.9118 280.234 92.2387 cv
cp
.0167239 0 .16669 0 cmyk
f
278.158 96.6633 mo
278.376 103.112 293.333 103.72 290.731 93.0192 cv
290.149 96.7982 282.08 102.065 278.158 96.6633 cv
cp
.088777 .183658 .522454 .00521859 cmyk
f
288.739 63.3075 mo
288.501 63.2706 li
287.642 63.0493 287.064 63.6682 287.138 64.3742 cv
287.223 65.1917 293.727 82.6378 286.077 93.9586 cv
287.391 94.0685 289.908 93.7603 290.677 92.8088 cv
290.634 92.6462 290.591 92.4834 290.541 92.3158 cv
291.995 79.6761 290.477 70.4569 288.739 63.3075 cv
cp
f
293.027 34.1867 mo
261.258 45.9375 li
262.569 49.8076 273.106 50.2226 277.885 50.6154 cv
279.964 50.6185 286.49 50.3286 291.745 49.2141 cv
297.433 48.0078 302.846 46.5301 305.723 42.5126 cv
297.616 34.8411 293.027 34.1867 293.027 34.1867 cv
cp
.169131 .321721 .624353 .0469978 cmyk
f
304.486 41.3607 mo
304.257 42.1825 304.51 42.0793 304.09 42.8229 cv
302.606 45.4493 295.562 48.1025 295.562 48.1025 cv
303.306 44.6566 302.127 41.3364 302.388 40.394 cv
301.918 40.3017 301.515 40.3554 301.27 40.6575 cv
301.097 40.8704 301.197 46.4102 292.338 48.7694 cv
300.37 44.8458 300.579 40.4796 300.193 40.9884 cv
299.498 41.9069 293.042 48.3619 289.633 49.3252 cv
293.561 46.3981 298.436 42.1653 297.719 42.2488 cv
297.035 42.3286 291.412 47.1762 288.744 49.177 cv
291.115 45.5088 296.012 45.1547 297.304 41.1326 cv
296.388 42.5582 294.878 44.0986 293.559 44.7929 cv
292.742 45.2223 291.885 45.5059 291.051 45.8665 cv
290.213 46.2282 288.682 48.8738 287.892 49.2882 cv
288.262 48.7507 289.556 46.24 289.996 45.7943 cv
290.994 44.7846 292.159 44.0976 293.201 43.155 cv
294.081 42.3588 295.165 40.6247 296.198 40.0582 cv
295.564 40.2998 294.934 40.4143 294.333 40.8856 cv
292.897 42.0113 291.612 43.6636 290.303 45.0146 cv
289.363 45.984 288.485 48.8065 286.447 49.5846 cv
288.077 48.3492 288.589 45.5462 289.246 44.4702 cv
290.224 42.8661 291.537 40.5158 293.048 39.4944 cv
292.554 39.7283 292.049 39.8879 291.578 40.2317 cv
290.173 41.2575 289.125 43.3434 288.203 44.9947 cv
287.606 46.0635 287.077 48.9917 284.298 49.9551 cv
287.04 48.2877 288.663 41.2062 291.506 39.0027 cv
289.594 40.0871 288.408 41.9699 287.247 44.1194 cv
286.37 45.7424 284.854 49.14 282.149 50.0292 cv
284.728 48.1863 286.937 41.8025 289.505 39.6057 cv
287.58 41.0971 286.097 42.2295 284.822 44.7089 cv
284.026 46.2561 283.372 48.6953 280.963 49.9551 cv
281.69 49.1695 283.013 47.0665 283.43 45.9875 cv
283.976 44.5742 284.709 43.4042 285.363 42.0979 cv
284.162 43.0373 283.249 44.4092 282.509 45.9116 cv
282.056 46.8309 280.884 49.6285 280.111 50.1404 cv
280.315 49.6184 281.904 44.9069 281.852 44.3231 cv
281.466 45.0938 279.889 49.653 279.259 50.1033 cv
279.383 48.6798 280.167 46.4358 279.845 44.9892 cv
279.686 46.2728 278.814 48.9917 278.555 50.1774 cv
278.207 49.0883 278.645 45.7565 277.806 45.0733 cv
277.598 46.5915 278.001 48.5873 277.999 50.1774 cv
277.312 48.9071 277.376 45.6264 276.409 44.974 cv
276.41 46.3815 276.91 49.0446 277.406 50.2515 cv
276.629 49.5201 274.711 44.5817 274.146 43.5821 cv
274.342 44.6045 275.991 49.5622 276.591 50.2515 cv
275.813 49.9551 273.659 46.1414 272.886 44.3602 cv
273.29 46.4744 274.13 49.1632 275.628 50.1774 cv
273.96 49.803 272.759 47.431 271.387 46.4185 cv
272.041 47.307 273.522 49.8087 274.516 50.1774 cv
272.219 49.3252 270.572 46.5272 268.984 45.5523 cv
269.534 46.5554 272.256 49.2141 272.997 49.9922 cv
272.282 49.7369 270.514 48.5842 269.808 47.8199 cv
269.202 47.1638 268.261 47.0009 267.497 46.5385 cv
268.064 47.314 270.815 49.5013 271.589 49.918 cv
271.577 49.9157 269.31 49.822 265.904 46.2577 cv
266.117 47.0926 267.143 48.1025 268.921 49.3993 cv
266.327 48.8806 265.484 47.1697 264.983 46.4437 cv
265.11 47.1716 265.495 47.9225 265.881 48.4678 cv
265.09 48.2859 263.097 46.9929 262.339 45.2746 cv
262.518 47.102 264.832 48.333 265.383 48.4776 cv
264.839 48.4051 263.548 47.8894 263.037 47.4946 cv
262.561 47.1275 260.813 44.9101 260.179 45.1979 cv
263.993 53.7715 300.29 52.226 305.861 42.3911 cv
305.641 42.182 305.114 41.7641 304.486 41.3607 cv
cp
.329137 .415808 .64892 .242557 cmyk
f
260.565 40.5436 mo
254.962 49.1723 272.063 46.819 281.408 46.819 cv
290.753 46.819 308.527 45.2502 306.734 39.6471 cv
305.621 36.1694 288.132 27.3204 276.814 31.5787 cv
268.067 34.8696 262.553 37.4811 260.565 40.5436 cv
cp
.088777 .183658 .522454 .00521859 cmyk
f
260.565 40.5436 mo
259.549 42.2267 265.637 45.024 285.335 41.7411 cv
303.626 38.6925 299.215 34.1217 297.132 33.2903 cv
290.952 30.8243 282.97 29.2624 276.814 31.5787 cv
268.067 34.8696 262.553 37.4811 260.565 40.5436 cv
cp
.045716 .0845045 .309361 0 cmyk
f
286.966 32.1904 mo
286.888 33.5764 283.217 35.483 278.768 36.4489 cv
274.318 37.4148 270.775 37.0742 270.853 35.6881 cv
270.931 34.3021 274.602 32.3955 279.051 31.4296 cv
283.501 30.4638 287.044 30.8044 286.966 32.1904 cv
cp
.0167239 0 .16669 0 cmyk
f
143.987 145.225 mo
162.917 155.78 176.4 176.582 177.447 181.294 cv
178.494 186.006 175.758 195.916 172.271 201.749 cv
169.596 206.223 179.327 211.411 182.117 204.281 cv
185.174 196.467 186.498 182.367 186.498 182.367 cv
186.498 182.367 195.788 149.313 200.883 146.262 cv
189.537 140.18 li
189.537 140.18 158.568 139.661 143.987 145.225 cv
0 .48368 .766445 0 cmyk
f
197.374 144.828 mo
193.939 140.737 li
160.311 144.178 li
152.753 147.194 li
152.753 147.194 171.078 163.066 177.535 177.73 cv
173.428 166.862 157.503 149.392 159.909 149.288 cv
163.201 149.145 170.133 159.572 173.346 167.438 cv
170.219 157.192 162.866 148.417 164.467 148.169 cv
167.917 147.633 176.488 170.23 177.884 174.244 cv
175.091 163.773 165.904 146.919 169.507 147.543 cv
171.552 147.897 177.665 164.746 180.152 178.607 cv
178.62 161.775 170.056 143.227 172.648 144.053 cv
175.441 144.941 178.756 161.33 181.025 174.767 cv
179.454 160.108 174.709 145.481 177.41 145.248 cv
179.422 145.318 182.072 171.102 182.421 179.828 cv
182.595 171.451 179.161 146.1 180.887 145.449 cv
183.69 144.917 183.992 166.914 183.643 173.72 cv
184.69 163.773 183.556 146.165 184.98 144.243 cv
187.055 141.441 186.086 157.49 184.166 178.956 cv
186.26 164.645 186.648 145.496 188.18 143.878 cv
190.854 141.052 188.006 162.202 186.435 172.324 cv
189.227 158.188 191.548 144.761 191.548 144.761 cv
191.548 144.761 195.033 140.403 193.823 145.817 cv
192.117 153.455 188.709 170.389 185.737 179.305 cv
193.59 156.269 197.374 144.828 197.374 144.828 cv
0 .65771 .848997 0 cmyk
f
gsave
154.993 152.874 mo
154.968 152.855 154.943 152.837 154.918 152.818 cv
151.416 150.169 147.883 147.398 143.987 145.225 cv
143.987 145.225 li
147.911 147.413 151.599 150.04 154.993 152.874 cv
197.903 150.271 mo
197.902 150.271 197.902 150.27 197.901 150.27 cv
198.97 148.252 199.983 146.809 200.87 146.27 cv
199.769 146.94 198.999 148.772 197.903 150.271 cv
200.87 146.27 mo
200.875 146.267 200.879 146.264 200.883 146.262 cv
200.883 146.262 li
200.879 146.264 200.875 146.267 200.87 146.27 cv
clp
143.987 145.225 mo
200.883 145.225 li
200.883 152.874 li
143.987 152.874 li
cp
.304692 .64007 .738369 .303288 cmyk
f
grestore
160.043 154.153 mo
157.986 154.13 156.208 153.754 154.993 152.874 cv
151.599 150.04 147.911 147.413 143.987 145.225 cv
156.274 140.536 180.196 140.167 187.421 140.167 cv
188.77 140.167 189.537 140.18 189.537 140.18 cv
191.114 141.026 li
160.311 144.178 li
152.753 147.194 li
152.753 147.194 155.899 149.918 160.043 154.153 cv
162.324 154.052 mo
160.276 151.182 159.128 149.322 159.909 149.288 cv
159.931 149.287 159.953 149.286 159.976 149.286 cv
161.337 149.286 163.293 151.024 165.348 153.614 cv
164.32 153.81 163.305 153.96 162.324 154.052 cv
166.713 153.33 mo
164.912 150.241 163.723 148.284 164.467 148.169 cv
164.508 148.162 164.549 148.159 164.59 148.159 cv
165.624 148.159 167.076 150.061 168.647 152.849 cv
168.006 153.023 167.359 153.184 166.713 153.33 cv
169.695 152.553 mo
168.627 149.52 168.248 147.526 169.324 147.526 cv
169.381 147.526 169.441 147.532 169.507 147.543 cv
170.116 147.648 171.088 149.22 172.217 151.742 cv
171.403 152.027 170.558 152.3 169.695 152.553 cv
173.776 151.169 mo
172.452 146.802 171.684 144.026 172.496 144.026 cv
172.542 144.026 172.592 144.035 172.648 144.053 cv
173.675 144.379 174.773 146.802 175.863 150.405 cv
175.319 150.578 174.794 150.765 174.292 150.966 cv
174.122 151.034 173.951 151.101 173.776 151.169 cv
197.901 150.27 mo
197.245 150.033 196.535 149.788 195.799 149.555 cv
196.854 146.401 197.374 144.828 197.374 144.828 cv
196.692 144.015 li
200.883 146.262 li
200.879 146.264 200.875 146.267 200.87 146.27 cv
200.87 146.27 200.87 146.27 200.87 146.27 cv
199.983 146.809 198.97 148.252 197.901 150.27 cv
176.847 150.11 mo
176.432 147.151 176.47 145.329 177.41 145.248 cv
177.921 145.266 178.472 146.941 179.017 149.573 cv
178.277 149.734 177.549 149.912 176.847 150.11 cv
180.408 149.295 mo
180.367 147.048 180.491 145.598 180.887 145.449 cv
180.92 145.442 180.953 145.439 180.986 145.439 cv
181.666 145.439 182.194 146.797 182.598 148.938 cv
181.866 149.042 181.134 149.161 180.408 149.295 cv
193.164 148.821 mo
192.4 148.642 191.639 148.499 190.906 148.41 cv
191.314 146.112 191.548 144.761 191.548 144.761 cv
191.548 144.761 192.874 143.103 193.606 143.103 cv
194.061 143.103 194.287 143.742 193.823 145.817 cv
193.625 146.702 193.404 147.713 193.164 148.821 cv
184.295 148.718 mo
184.401 146.4 184.598 144.758 184.98 144.243 cv
185.138 144.029 185.279 143.925 185.403 143.925 cv
185.899 143.925 186.125 145.587 186.142 148.527 cv
185.536 148.582 184.919 148.645 184.295 148.718 cv
187.15 148.442 mo
187.449 145.967 187.774 144.307 188.18 143.878 cv
188.345 143.704 188.489 143.62 188.614 143.62 cv
189.202 143.62 189.357 145.473 189.247 148.313 cv
189.124 148.315 189.003 148.319 188.884 148.326 cv
188.325 148.358 187.745 148.396 187.15 148.442 cv
.0461433 .608789 .843503 .00289921 cmyk
f
160.247 154.155 mo
160.179 154.155 160.111 154.154 160.043 154.153 cv
155.899 149.918 152.753 147.194 152.753 147.194 cv
160.311 144.178 li
191.114 141.026 li
196.692 144.015 li
197.374 144.828 li
197.374 144.828 196.854 146.401 195.799 149.555 cv
194.944 149.284 194.052 149.029 193.164 148.821 cv
193.404 147.713 193.625 146.702 193.823 145.817 cv
194.287 143.742 194.061 143.103 193.606 143.103 cv
192.874 143.103 191.548 144.761 191.548 144.761 cv
191.548 144.761 191.314 146.112 190.906 148.41 cv
190.385 148.347 189.879 148.312 189.396 148.312 cv
189.346 148.312 189.296 148.313 189.247 148.313 cv
189.357 145.473 189.202 143.62 188.614 143.62 cv
188.489 143.62 188.345 143.704 188.18 143.878 cv
187.774 144.307 187.449 145.967 187.15 148.442 cv
186.819 148.468 186.482 148.496 186.142 148.527 cv
186.125 145.587 185.899 143.925 185.403 143.925 cv
185.279 143.925 185.138 144.029 184.98 144.243 cv
184.598 144.758 184.401 146.4 184.295 148.718 cv
183.733 148.783 183.166 148.856 182.598 148.938 cv
182.194 146.797 181.666 145.439 180.986 145.439 cv
180.953 145.439 180.92 145.442 180.887 145.449 cv
180.491 145.598 180.367 147.048 180.408 149.295 cv
179.941 149.381 179.476 149.474 179.017 149.573 cv
178.472 146.941 177.921 145.266 177.41 145.248 cv
176.47 145.329 176.432 147.151 176.847 150.11 cv
176.513 150.204 176.185 150.302 175.863 150.405 cv
174.773 146.802 173.675 144.379 172.648 144.053 cv
172.592 144.035 172.542 144.026 172.496 144.026 cv
171.684 144.026 172.452 146.802 173.776 151.169 cv
173.273 151.363 172.752 151.555 172.217 151.742 cv
171.088 149.22 170.116 147.648 169.507 147.543 cv
169.441 147.532 169.381 147.526 169.324 147.526 cv
168.248 147.526 168.627 149.52 169.695 152.553 cv
169.348 152.655 168.998 152.754 168.647 152.849 cv
167.076 150.061 165.624 148.159 164.59 148.159 cv
164.549 148.159 164.508 148.162 164.467 148.169 cv
163.723 148.284 164.912 150.241 166.713 153.33 cv
166.257 153.433 165.801 153.528 165.348 153.614 cv
163.293 151.024 161.337 149.286 159.976 149.286 cv
159.953 149.286 159.931 149.287 159.909 149.288 cv
159.128 149.322 160.276 151.182 162.324 154.052 cv
161.61 154.119 160.914 154.155 160.247 154.155 cv
.0556344 .697444 .894713 .00482185 cmyk
f
191.677 146.507 mo
187.92 145.132 li
187.92 145.132 187.92 140.018 187.85 139.869 cv
187.781 139.72 195.57 142.401 195.57 142.401 cv
191.677 146.507 li
cp
0 .65771 .848997 0 cmyk
f
169.629 149.401 mo
169.86 145.296 li
169.86 145.296 162.697 145.296 162.488 145.247 cv
162.28 145.197 166.035 150.757 166.035 150.757 cv
169.629 149.401 li
cp
f
198.7 137.436 mo
188.824 139.919 180.339 132.67 165.039 139.224 cv
165.039 139.224 147.93 132.67 141.254 139.422 cv
138.895 141.808 136.664 144.784 143.757 146.472 cv
150.851 148.16 150.573 153.82 162.813 151.436 cv
163.898 151.225 164.972 150.996 166.035 150.757 cv
166.63 150.104 167.057 149.151 166.441 147.911 cv
167.311 148.553 168.121 149.425 168.71 150.13 cv
177.062 148.098 184.516 145.713 189.922 146.219 cv
190.85 144.934 191.887 142.65 189.537 140.704 cv
191.396 141.757 192.719 143.988 191.677 146.507 cv
191.986 146.583 192.288 146.668 192.579 146.77 cv
199.117 149.053 206.767 149.848 209.132 146.174 cv
211.496 142.5 208.575 134.954 198.7 137.436 cv
cp
0 .48368 .766445 0 cmyk
f
148.834 139.756 mo
146.742 141.139 150.771 141.305 153.483 142.328 cv
157.148 143.711 162.224 140.094 165.039 139.224 cv
165.039 139.224 156.543 135.609 148.834 139.756 cv
cp
0 .557122 .764126 0 cmyk
f
200.882 140.393 mo
206.974 142.739 200.026 137.103 198.7 137.436 cv
196.618 137.96 194.598 138.049 192.563 137.928 cv
195.364 138.725 198.451 139.456 200.882 140.393 cv
cp
f
159.317 139.843 mo
158.449 139.974 157.492 138.93 157.096 138.846 cv
157.885 140.191 156.823 140.335 156.379 140.516 cv
156.051 140.651 154.324 140.421 153.598 138.899 cv
153.32 140.041 155.017 140.734 154.641 140.885 cv
153.912 141.177 149.704 142.126 148.373 140.561 cv
149.023 141.929 151.688 142.188 153.262 142.543 cv
157.214 143.434 162.305 140.068 165.12 139.198 cv
165.12 139.198 163.358 138.956 161.88 139.309 cv
161.83 139.321 161.238 139.065 160.909 138.924 cv
160.887 139.409 159.803 139.77 159.317 139.843 cv
cp
0 .65771 .848997 0 cmyk
f
201.636 140.665 mo
201.66 139.861 201.058 138.985 200.05 138.391 cv
199.26 139.824 197.929 138.068 192.563 137.928 cv
195.364 138.725 199.041 139.829 201.636 140.665 cv
cp
f
180.339 145.827 mo
169.744 148.38 169.222 146.243 166.882 146.497 cv
165.364 146.661 164.581 148.883 162.883 149.749 cv
159.718 151.362 154.227 151.689 152.903 149.922 cv
147.582 142.823 143.352 146.01 140.663 144.859 cv
138.464 143.917 139.531 142.554 139.404 141.696 cv
138.398 143.49 138.808 145.294 143.757 146.472 cv
150.851 148.16 150.573 153.82 162.813 151.436 cv
163.898 151.225 164.972 150.996 166.035 150.757 cv
166.63 150.104 167.057 149.151 166.441 147.911 cv
167.311 148.553 168.121 149.425 168.71 150.13 cv
177.062 148.098 184.516 145.713 189.922 146.219 cv
190.634 145.232 192.401 142.289 189.537 140.704 cv
189.658 142.997 185.694 144.536 180.339 145.827 cv
cp
0 .557122 .764126 0 cmyk
f
203.011 146.273 mo
194.944 145.975 193.069 141.041 189.537 140.704 cv
192.168 142.939 192.368 144.838 191.677 146.507 cv
191.986 146.583 192.288 146.668 192.579 146.77 cv
199.117 149.053 206.767 149.848 209.132 146.174 cv
209.738 145.231 209.994 144.033 209.877 142.816 cv
209.342 145.811 206.186 146.391 203.011 146.273 cv
cp
f
142.891 142.647 mo
143.494 142.811 144.114 142.906 144.617 142.91 cv
145.77 142.921 146.232 143.093 147.28 143.324 cv
148.179 143.521 149.244 143.122 149.973 143.354 cv
150.529 143.531 150.849 144.308 151.53 144.564 cv
152.022 144.749 152.85 144.668 153.422 144.868 cv
154.878 145.376 155.282 146.389 157.074 145.702 cv
158.006 145.344 158.305 144.54 159.509 144.394 cv
160.589 144.264 161.374 144.88 162.413 144.848 cv
163.936 144.8 164.247 143.633 165.568 143.255 cv
166.95 142.861 168.629 143.147 170.056 143.227 cv
171.775 143.323 172.786 142.481 174.403 142.422 cv
176.548 142.344 177.444 143.044 179.565 142.295 cv
180.957 141.803 182.379 141.82 183.812 141.305 cv
184.764 140.963 186.177 140.811 186.659 140.046 cv
187.386 138.895 185.689 138.058 184.363 137.754 cv
181.968 137.205 178.818 137.273 176.334 137.534 cv
175.563 137.616 175.791 137.752 174.813 137.645 cv
172.904 137.436 171.859 137.873 170.217 138.585 cv
168.835 139.184 167.076 139.778 165.833 140.44 cv
165.328 140.709 165.161 141.248 164.768 141.456 cv
163.826 141.953 162.353 141.697 161.291 142.065 cv
160.03 142.502 159.176 143.447 157.972 143.968 cv
154.626 145.419 144.069 142.563 147.958 139.296 cv
148.401 138.925 152.425 137.33 152.374 137.033 cv
152.257 136.355 147.517 136.911 146.779 137.067 cv
144.945 137.455 138.608 140.186 141.209 141.933 cv
141.652 142.23 142.263 142.476 142.891 142.647 cv
cp
0 .273594 .385748 0 cmyk
f
204.336 139.664 mo
204.929 140.224 205.33 140.805 204.576 141.391 cv
203.552 142.186 197.712 140.244 196.321 139.885 cv
195.19 139.592 190.452 137.874 189.332 138.801 cv
187.915 139.977 194.326 140.167 194.67 140.25 cv
195.254 140.39 195.63 140.892 196.262 141.064 cv
196.852 141.225 197.501 141.021 198.143 141.227 cv
199.513 141.666 199.726 142.317 201.377 142.446 cv
203.192 142.588 202.76 142.566 204.292 143.315 cv
205.993 144.145 207.63 143.715 208.278 142.357 cv
209.022 140.798 207.809 139.08 206.021 138.168 cv
205.454 137.879 204.057 137.031 203.323 137.516 cv
202.343 138.163 203.521 138.894 204.336 139.664 cv
cp
f
146.892 139.582 mo
146.549 139.905 146.366 140.281 146.493 140.766 cv
146.614 141.227 147.46 141.732 146.662 142.007 cv
145.599 142.374 143.494 141.333 143.185 140.632 cv
142.429 138.917 145.903 137.365 147.956 137.475 cv
150.495 137.611 147.444 139.063 146.892 139.582 cv
cp
0 .0937209 .107942 0 cmyk
f
170.83 140.46 mo
170.682 140.474 li
169.193 140.667 168.328 141.841 166.767 142.034 cv
166.82 141.847 167.006 141.707 167.208 141.558 cv
167.432 141.394 168.009 141.462 168.283 141.297 cv
168.509 141.161 168.398 140.934 168.572 140.809 cv
169.765 139.947 170.931 139.638 172.513 139.226 cv
175.974 138.323 179.707 138.065 183.333 138.573 cv
186.619 139.034 184.323 140.158 182.273 140.403 cv
180.927 140.563 179.404 140.72 178.039 140.661 cv
176.873 140.61 175.723 140.234 174.54 140.275 cv
173.84 140.299 173.303 140.767 172.682 140.79 cv
171.952 140.816 171.613 140.41 170.83 140.46 cv
cp
f
150.483 141.935 mo
151.424 142.213 152.478 142.366 153.262 142.543 cv
157.214 143.434 162.305 140.068 165.12 139.198 cv
165.12 139.198 163.51 139.12 158.127 141.509 cv
155.175 142.82 150.523 141.872 150.483 141.935 cv
cp
.128328 .727687 .922332 .0253605 cmyk
f
201.636 140.665 mo
201.641 140.479 201.614 140.29 201.555 140.101 cv
200.467 140.368 197.347 138.87 192.563 137.928 cv
195.364 138.725 199.041 139.829 201.636 140.665 cv
cp
f
185.805 185.007 mo
183.84 189.436 184.201 194.467 182.137 198.847 cv
180.925 201.421 178.786 204.758 175.507 204.676 cv
174.124 204.641 172.837 204.299 171.833 203.648 cv
172.211 207.441 179.721 210.405 182.117 204.281 cv
184.56 198.038 185.895 187.79 186.333 183.918 cv
186.153 184.279 185.968 184.637 185.805 185.007 cv
cp
0 .557122 .764126 0 cmyk
f
175.107 202.426 mo
173.755 202.426 173.913 199.091 175.037 196.789 cv
176.547 193.696 177.555 190.403 178.077 187 cv
178.342 185.273 177.529 180.778 179.798 180.371 cv
180.002 180.334 180.195 180.317 180.378 180.317 cv
185.534 180.317 182.641 194.428 177.2 200.9 cv
176.286 201.987 175.597 202.426 175.107 202.426 cv
0 .424018 .660517 0 cmyk
f
290.541 305.578 mo
292.726 286.583 288.201 275.307 286.3 267.184 cv
285.498 263.891 290.384 263.051 290.384 263.051 cv
275.628 263.439 li
278.102 265.068 278.943 264.731 280.287 268.093 cv
280.742 269.229 289.869 294.652 280.624 304.737 cv
273.346 306.593 275.822 315.665 281.748 315.973 cv
290.611 316.434 294.424 311.723 290.541 305.578 cv
cp
.045716 .0845045 .309361 0 cmyk
f
279.388 266.253 mo
280.037 266.557 280.697 266.831 281.396 266.996 cv
282.291 267.207 285.274 266.468 286.047 273.448 cv
287.881 273.526 287.507 271.978 287.547 271.977 cv
287.521 271.87 286.324 267.29 286.3 267.184 cv
285.498 263.891 290.384 263.051 290.384 263.051 cv
275.628 263.439 li
277.516 264.682 278.453 264.782 279.388 266.253 cv
cp
.169131 .321721 .624353 .0469978 cmyk
f
282.386 274.888 mo
282.673 276.005 282.961 277.214 283.23 278.487 cv
285.337 280.515 287.233 276.924 288.936 277.421 cv
288.569 275.727 288.464 275.429 288.076 273.939 cv
286.203 274.389 284.312 274.736 282.386 274.888 cv
cp
f
281.944 273.276 mo
281.944 273.276 278.453 276.325 278.553 276.924 cv
282.644 278.221 285.637 277.323 286.734 276.525 cv
287.832 275.727 291.124 275.926 291.922 275.427 cv
292.72 274.928 287.547 271.977 287.547 271.977 cv
287.547 271.977 286.233 275.016 281.944 273.276 cv
cp
.0167239 0 .16669 0 cmyk
f
290.541 305.578 mo
290.448 307.487 279.82 307.318 280.798 304.549 cv
277.121 307.402 292.515 308.878 290.541 305.578 cv
cp
.169131 .321721 .624353 .0469978 cmyk
f
280.234 305.501 mo
280.498 307.463 290.008 308.31 290.679 306.353 cv
291.026 308.211 280.327 309.174 280.234 305.501 cv
cp
.0167239 0 .16669 0 cmyk
f
288.739 276.569 mo
288.501 276.533 li
287.642 276.311 287.065 276.93 287.138 277.636 cv
287.223 278.454 293.727 295.9 286.077 307.22 cv
287.391 307.33 289.908 307.022 290.677 306.071 cv
290.634 305.908 290.591 305.745 290.541 305.578 cv
291.995 292.938 290.477 283.719 288.739 276.569 cv
cp
.169131 .321721 .624353 .0469978 cmyk
f
293.027 247.449 mo
261.258 259.199 li
262.569 263.069 273.106 263.484 277.885 263.877 cv
279.964 263.88 286.49 263.591 291.745 262.476 cv
297.433 261.27 302.846 259.792 305.723 255.775 cv
297.616 248.103 293.027 247.449 293.027 247.449 cv
cp
f
304.486 254.623 mo
304.257 255.444 304.51 255.341 304.09 256.085 cv
302.606 258.711 295.562 261.364 295.562 261.364 cv
303.306 257.918 302.127 254.598 302.388 253.656 cv
301.918 253.564 301.515 253.617 301.27 253.919 cv
301.097 254.132 301.197 259.672 292.338 262.031 cv
300.37 258.108 300.579 253.741 300.193 254.25 cv
299.498 255.169 293.042 261.624 289.633 262.587 cv
293.561 259.66 298.436 255.427 297.719 255.511 cv
297.035 255.59 291.412 260.438 288.744 262.439 cv
291.115 258.771 296.012 258.417 297.304 254.394 cv
296.388 255.82 294.878 257.36 293.559 258.055 cv
292.742 258.484 291.885 258.768 291.051 259.128 cv
290.213 259.49 288.682 262.136 287.892 262.55 cv
288.262 262.013 289.556 259.502 289.996 259.056 cv
290.994 258.047 292.159 257.359 293.201 256.417 cv
294.081 255.621 295.165 253.887 296.198 253.32 cv
295.564 253.562 294.934 253.676 294.333 254.148 cv
292.897 255.273 291.612 256.926 290.303 258.276 cv
289.363 259.246 288.485 262.068 286.447 262.846 cv
288.077 261.611 288.589 258.808 289.246 257.732 cv
290.224 256.128 291.537 253.778 293.048 252.756 cv
292.554 252.99 292.049 253.15 291.578 253.494 cv
290.173 254.519 289.125 256.605 288.203 258.257 cv
287.606 259.325 287.077 262.254 284.298 263.217 cv
287.04 261.55 288.663 254.468 291.506 252.264 cv
289.594 253.349 288.408 255.232 287.247 257.381 cv
286.37 259.004 284.854 262.402 282.149 263.291 cv
284.728 261.448 286.937 255.064 289.505 252.868 cv
287.58 254.359 286.097 255.491 284.822 257.971 cv
284.026 259.518 283.372 261.957 280.963 263.217 cv
281.69 262.431 283.013 260.328 283.43 259.249 cv
283.976 257.836 284.709 256.666 285.363 255.36 cv
284.162 256.299 283.249 257.671 282.509 259.173 cv
282.056 260.093 280.884 262.89 280.111 263.402 cv
280.315 262.88 281.904 258.169 281.852 257.585 cv
281.466 258.356 279.889 262.915 279.259 263.365 cv
279.383 261.942 280.167 259.698 279.845 258.251 cv
279.686 259.535 278.814 262.254 278.555 263.439 cv
278.207 262.35 278.645 259.018 277.806 258.335 cv
277.598 259.853 278.001 261.849 277.999 263.439 cv
277.312 262.169 277.376 258.888 276.409 258.236 cv
276.41 259.643 276.91 262.306 277.406 263.513 cv
276.629 262.782 274.711 257.844 274.146 256.844 cv
274.342 257.866 275.991 262.824 276.591 263.513 cv
275.813 263.217 273.659 259.403 272.886 257.622 cv
273.29 259.736 274.13 262.425 275.628 263.439 cv
273.96 263.065 272.759 260.693 271.387 259.68 cv
272.041 260.569 273.522 263.071 274.516 263.439 cv
272.219 262.587 270.572 259.789 268.984 258.814 cv
269.534 259.817 272.256 262.476 272.997 263.254 cv
272.282 262.999 270.514 261.846 269.808 261.082 cv
269.202 260.426 268.261 260.263 267.497 259.8 cv
268.064 260.576 270.815 262.763 271.589 263.18 cv
271.577 263.177 269.31 263.084 265.904 259.52 cv
266.117 260.354 267.143 261.364 268.921 262.661 cv
266.327 262.142 265.484 260.432 264.983 259.706 cv
265.11 260.434 265.495 261.184 265.881 261.73 cv
265.09 261.548 263.097 260.255 262.339 258.536 cv
262.518 260.364 264.832 261.595 265.383 261.74 cv
264.839 261.667 263.548 261.151 263.037 260.757 cv
262.561 260.389 260.813 258.172 260.179 258.46 cv
263.993 267.033 300.29 265.488 305.861 255.653 cv
305.641 255.444 305.114 255.026 304.486 254.623 cv
cp
.088777 .183658 .522454 .00521859 cmyk
f
260.565 253.805 mo
254.962 262.434 272.063 260.081 281.408 260.081 cv
290.753 260.081 308.527 258.512 306.734 252.909 cv
305.621 249.431 299.911 241.753 279.047 250.498 cv
270.428 254.111 262.553 250.743 260.565 253.805 cv
cp
.329137 .415808 .64892 .242557 cmyk
f
263.203 253.789 mo
264.081 254.035 264.958 254.259 265.858 254.404 cv
267.841 254.723 269.934 255.049 271.935 255.157 cv
277.947 255.483 284.281 255.163 290.273 254.565 cv
294.687 254.124 298.793 252.655 302.911 251.087 cv
307.347 249.397 297.118 242.359 281.103 249.993 cv
275.548 252.641 273.469 252.528 265.983 252.558 cv
263.12 252.797 261.524 253.32 263.203 253.789 cv
cp
.349889 .444312 .674311 .294316 cmyk
f
275.036 254.46 mo
280.161 254.568 285.137 253.831 290.172 253.328 cv
294.586 252.887 300.335 251.249 299.556 249.98 cv
297.733 247.012 287.736 249.873 282.675 251.631 cv
277.029 253.591 275.174 252.928 268.199 252.951 cv
264.549 252.716 269.614 254.318 275.036 254.46 cv
cp
.378241 .496315 .710903 .388342 cmyk
f
276.667 253.987 mo
276.998 254.026 277.313 254.138 277.551 254.291 cv
277.46 254.471 277.162 255.045 276.779 254.937 cv
276.466 254.849 276.771 254.557 276.648 254.41 cv
276.569 254.316 276.17 254.34 276.14 254.226 cv
276.11 254.113 276.508 253.968 276.667 253.987 cv
cp
.045716 .0845045 .309361 0 cmyk
f
292.95 256.89 mo
293.118 256.668 293.377 256.472 293.664 256.338 cv
293.869 256.442 294.521 256.775 294.243 257.019 cv
294.017 257.219 293.738 256.942 293.501 256.996 cv
293.349 257.031 293.24 257.315 293.079 257.311 cv
292.919 257.308 292.869 256.997 292.95 256.89 cv
cp
f
287.533 256.498 mo
287.538 256.456 li
287.849 256.532 288.011 256.376 288.286 256.412 cv
288.35 256.42 289.308 256.205 288.692 256.663 cv
288.311 256.945 287.519 256.888 287.533 256.498 cv
cp
f
291.432 247.411 mo
291.437 247.369 li
291.748 247.445 291.91 247.289 292.185 247.325 cv
292.249 247.333 293.207 247.118 292.591 247.576 cv
292.21 247.858 291.418 247.801 291.432 247.411 cv
cp
f
281.86 258.516 mo
281.919 258.62 li
282.361 258.54 282.805 258.58 282.904 258.911 cv
282.566 258.967 281.268 259.034 281.288 258.627 cv
281.309 258.304 281.687 258.41 281.86 258.516 cv
cp
f
273.949 255.896 mo
274.048 255.886 274.144 255.886 274.244 255.903 cv
274.247 256.237 273.828 256.397 273.797 255.983 cv
273.796 255.918 li
273.949 255.896 li
cp
f
266.469 258.521 mo
266.569 258.512 266.664 258.512 266.764 258.528 cv
266.768 258.863 266.349 259.022 266.317 258.608 cv
266.317 258.543 li
266.469 258.521 li
cp
f
268.467 256.434 mo
268.601 256.435 268.748 256.458 268.811 256.428 cv
269.087 256.297 268.811 255.779 269.097 255.694 cv
269.311 255.631 269.408 255.913 269.551 255.975 cv
269.707 256.042 269.97 255.843 269.96 256.084 cv
269.957 256.156 269.363 256.676 269.263 256.72 cv
269.109 256.787 268.168 256.735 268.207 256.553 cv
268.229 256.452 268.342 256.433 268.467 256.434 cv
cp
f
303.092 249.474 mo
302.973 249.436 302.854 249.371 302.781 249.382 cv
302.464 249.428 302.434 249.998 302.132 249.997 cv
301.907 249.996 301.971 249.701 301.877 249.602 cv
301.774 249.494 301.432 249.608 301.57 249.383 cv
301.611 249.315 302.421 248.991 302.534 248.977 cv
302.707 248.957 303.52 249.274 303.388 249.435 cv
303.314 249.525 303.203 249.511 303.092 249.474 cv
cp
f
279.307 252.189 mo
279.016 252.204 278.384 252.246 278.318 252.219 cv
277.847 252.025 278.719 251.273 279.096 251.251 cv
279.855 251.206 279.794 251.903 280.611 251.973 cv
280.444 252.156 li
280.099 252.36 279.777 252.185 279.433 252.185 cv
279.307 252.189 li
cp
f
298.171 248.523 mo
298.043 248.587 297.769 248.731 297.729 248.733 cv
297.439 248.746 297.555 248.255 297.72 248.17 cv
298.051 247.999 298.287 248.305 298.689 248.171 cv
298.681 248.281 li
298.6 248.436 298.386 248.426 298.228 248.495 cv
298.171 248.523 li
cp
f
297.716 251.41 mo
297.841 251.523 297.895 251.661 297.767 251.8 cv
297.523 252.067 297.044 251.936 296.85 251.747 cv
297.043 251.596 297.148 251.354 297.192 251.163 cv
297.352 251.191 297.577 251.285 297.716 251.41 cv
cp
f
286.532 248.858 mo
286.633 248.804 286.749 248.771 286.86 248.798 cv
287.174 248.873 287.049 249.275 286.774 249.372 cv
286.213 249.568 285.412 249.243 285.439 248.793 cv
285.781 248.864 285.947 249.042 286.257 249.112 cv
286.228 249.105 286.356 248.951 286.532 248.858 cv
cp
f
286.616 252.828 mo
286.522 252.84 286.425 252.844 286.324 252.828 cv
285.293 252.661 286.116 251.773 287.13 252.086 cv
287.68 252.255 288.333 253.317 287.33 253.143 cv
287.457 252.737 li
287.162 252.671 286.896 252.79 286.616 252.828 cv
cp
f
261.945 257.521 mo
261.851 257.534 261.754 257.537 261.653 257.521 cv
260.621 257.354 261.445 256.466 262.459 256.779 cv
263.009 256.948 263.662 258.01 262.659 257.836 cv
262.786 257.43 li
262.491 257.364 262.225 257.483 261.945 257.521 cv
cp
f
271.784 253.651 mo
271.911 253.572 272.108 253.496 272.383 253.425 cv
274.485 252.885 272.502 254.374 272.558 254.385 cv
271.74 254.218 271.344 253.923 271.784 253.651 cv
cp
f
294.036 253.678 mo
294.095 253.678 294.181 253.657 294.3 253.612 cv
295.202 253.268 294.264 253.15 294.285 253.13 cv
293.968 253.434 293.833 253.678 294.036 253.678 cv
cp
f
262.209 254.558 mo
262.268 254.557 262.354 254.537 262.473 254.492 cv
263.375 254.147 262.437 254.03 262.458 254.009 cv
262.141 254.314 262.006 254.558 262.209 254.558 cv
cp
f
277.099 258.261 mo
276.822 258.206 275.978 257.863 275.993 257.859 cv
276.5 257.73 277.838 257.484 277.149 258.268 cv
277.099 258.261 li
cp
f
271.642 259.501 mo
271.365 259.446 270.521 259.103 270.535 259.099 cv
271.043 258.971 272.381 258.725 271.692 259.509 cv
271.642 259.501 li
cp
f
300.3 252.56 mo
300.56 252.449 301.528 252.223 301.521 252.234 cv
301.273 252.583 300.524 253.447 300.255 252.581 cv
300.3 252.56 li
cp
f
265.891 253.313 mo
265.787 253.07 li
265.883 252.859 266.05 253.123 266.19 253.135 cv
266.454 253.156 266.707 252.941 266.971 252.944 cv
267.149 252.945 267.58 253.257 267.321 253.352 cv
267.053 253.451 266.574 253.626 266.271 253.553 cv
266.167 253.528 266.002 253.426 265.891 253.313 cv
cp
f
298.134 255.115 mo
298.016 255.054 297.927 254.982 297.929 254.912 cv
297.933 254.694 298.208 254.902 298.348 254.882 cv
298.615 254.843 298.77 254.586 299.028 254.529 cv
299.202 254.491 299.754 254.684 299.541 254.83 cv
299.322 254.983 298.931 255.252 298.605 255.252 cv
298.493 255.253 298.288 255.195 298.134 255.115 cv
cp
f
303.947 254.185 mo
303.83 254.125 303.741 254.052 303.742 253.982 cv
303.746 253.765 304.021 253.973 304.162 253.952 cv
304.428 253.913 304.584 253.657 304.841 253.6 cv
305.016 253.561 305.568 253.754 305.355 253.901 cv
305.136 254.053 304.744 254.323 304.418 254.323 cv
304.306 254.323 304.102 254.265 303.947 254.185 cv
cp
f
281.716 256.103 mo
281.58 256.002 li
281.482 255.913 281.305 255.602 281.542 255.527 cv
281.69 255.48 281.966 255.759 282.134 255.779 cv
282.564 255.831 283.891 254.984 283.489 255.986 cv
283.23 256.013 283.049 255.885 282.822 255.884 cv
282.559 255.882 282.516 255.96 282.269 256.057 cv
282.008 256.159 281.865 256.186 281.716 256.103 cv
cp
f
293.478 250.36 mo
293.378 250.415 li
292.977 250.602 292.352 250.137 292.346 249.822 cv
292.342 249.465 292.817 249.077 293.375 249.432 cv
293.185 249.546 293.06 249.788 292.913 249.901 cv
293.037 249.806 293.914 250.074 293.478 250.36 cv
cp
f
276.854 312.712 mo
277.766 314.476 279.503 315.856 281.748 315.973 cv
290.378 316.421 294.217 311.966 290.828 306.058 cv
290.866 311.489 282.092 314.634 276.854 312.712 cv
cp
.169131 .321721 .624353 .0469978 cmyk
f
382.949 299.269 mo
380.091 295.301 367.426 276.253 369.685 270.15 cv
360.82 276.488 li
365.547 280.431 368.076 289.203 369.916 300.791 cv
371.756 312.378 381.03 318.589 386.303 311.701 cv
391.576 304.813 385.806 303.237 382.949 299.269 cv
cp
.0288396 .134188 .503868 0 cmyk
f
358.14 268.62 mo
355.727 270.374 353.977 272.668 352.318 275.05 cv
352.923 275.601 353.623 275.976 354.392 276.115 cv
356.669 276.726 358.712 274.34 361.528 277.06 cv
365.581 271.618 369.531 273.356 369.539 273.354 cv
369.278 269.256 372.172 268.273 372.561 266.134 cv
372.738 265.514 372.764 264.912 372.664 264.335 cv
367.464 263.803 362.455 265.484 358.14 268.62 cv
cp
.0841993 .20148 .562921 .00582895 cmyk
f
382.949 299.269 mo
381.122 296.733 374.333 285.387 374.333 285.387 cv
370.48 280.393 368.978 289.893 369.916 300.791 cv
370.922 312.48 381.03 318.589 386.303 311.701 cv
391.576 304.813 385.806 303.237 382.949 299.269 cv
cp
f
382.949 299.269 mo
382.776 299.029 382.558 298.709 382.306 298.327 cv
381.84 299.914 381.212 301.418 380.461 302.742 cv
379.339 304.719 377.551 306.725 375.197 307.15 cv
373.748 307.411 372.522 307.25 371.399 306.836 cv
374.291 314.582 382.078 317.38 386.342 311.81 cv
391.615 304.922 385.806 303.237 382.949 299.269 cv
cp
.12192 .250675 .613336 .0163882 cmyk
f
421.905 263.226 mo
425.656 264.328 424.461 267.197 424.461 267.197 cv
422.107 267.455 419.545 267.762 418.476 271.556 cv
408.666 306.376 403.508 316.361 393.243 313.337 cv
383.389 310.435 404.025 304.365 411.939 272.177 cv
413.566 265.559 410.873 264.225 407.933 262.076 cv
407.933 262.076 409.949 259.731 412.042 260.346 cv
413.099 260.657 420.633 262.852 421.905 263.226 cv
cp
.0288396 .134188 .503868 0 cmyk
f
412.41 268.654 mo
412.391 270.746 417.766 274.095 418.687 270.956 cv
419.862 267.824 422.242 267.538 424.443 267.297 cv
424.443 267.297 425.637 264.428 421.886 263.326 cv
420.614 262.952 413.08 260.757 412.023 260.447 cv
409.93 259.831 407.914 262.176 407.914 262.176 cv
410.216 263.859 412.366 265.043 412.41 268.654 cv
cp
.0841993 .20148 .562921 .00582895 cmyk
f
404.661 294.458 mo
396.453 307.645 386.306 311.294 393.243 313.337 cv
402.505 316.066 407.61 308.2 415.725 281.059 cv
416.505 276.184 414.458 274.891 404.661 294.458 cv
cp
f
391.172 310.695 mo
390.573 311.897 390.551 312.834 392.727 313.475 cv
399.885 315.584 406.053 310.605 410.577 296.669 cv
409.607 297.994 402.405 314.94 391.172 310.695 cv
cp
.12192 .250675 .613336 .0163882 cmyk
f
394.142 253.359 mo
398.416 253.878 397.637 257.21 397.637 257.21 cv
395.126 257.916 392.399 258.713 391.924 263.028 cv
387.566 302.625 400.796 311.559 390.438 314.246 cv
380.494 316.825 382.16 301.281 384.936 264.884 cv
385.506 257.402 382.339 256.44 378.757 254.637 cv
378.757 254.637 380.522 251.725 382.908 252.015 cv
384.112 252.161 392.693 253.183 394.142 253.359 cv
cp
.0288396 .134188 .503868 0 cmyk
f
384.813 260.86 mo
384.979 263.23 390.191 260.606 392.047 262.225 cv
392.757 258.611 395.291 257.87 397.637 257.21 cv
397.637 257.21 398.416 253.878 394.142 253.359 cv
392.693 253.183 384.112 252.161 382.908 252.015 cv
380.522 251.725 378.757 254.637 378.757 254.637 cv
381.562 256.049 384.112 256.945 384.813 260.86 cv
cp
.0841993 .20148 .562921 .00582895 cmyk
f
384.307 283.985 mo
382.276 303.016 381.058 316.465 390.438 314.246 cv
400.568 311.849 389.17 298.447 391.469 267.81 cv
391.633 264.566 385.852 272.693 384.307 283.985 cv
cp
f
370.73 253.169 mo
381.271 247.088 383.97 240.482 389.275 240.357 cv
395.671 240.206 394.882 248.286 404.778 254.472 cv
408.444 256.763 403.832 263.192 388.676 260.218 cv
375.358 257.606 367.291 255.152 370.73 253.169 cv
cp
.00619516 .260136 .916197 6.10361e-005 cmyk
f
375.679 255.008 mo
374.731 251.498 378.175 249.899 381.855 248.476 cv
383.523 247.83 386.09 248.278 388.42 247.763 cv
391.685 247.041 394.474 245.268 393.589 243.331 cv
392.611 242.107 391.619 241.324 390.141 241.145 cv
389.875 241.112 389.589 241.099 389.293 241.106 cv
386.739 241.166 384.818 242.928 381.911 245.597 cv
379.314 247.98 376.082 250.947 371.104 253.818 cv
370.787 254.001 370.703 254.124 370.688 254.122 cv
370.055 254.54 373.078 256.294 378.087 257.638 cv
384.626 259.393 397.111 262.009 400.736 259.853 cv
397.501 260.824 376.536 258.181 375.679 255.008 cv
cp
0 .208499 .735683 0 cmyk
f
393.459 299.167 mo
394.51 308.339 386.493 313.165 383.308 308.566 cv
383.847 313.569 386.271 315.866 390.516 314.862 cv
396.107 313.539 395.836 308.863 393.459 299.167 cv
cp
.12192 .250675 .613336 .0163882 cmyk
f
385.552 312.572 mo
384.338 312.389 384.418 311.559 383.839 311.098 cv
380.901 312.131 376.957 312.517 372.792 309.551 cv
376.16 314.829 382.051 318.247 385.58 312.598 cv
385.552 312.572 li
cp
.152132 .318578 .680232 .0372625 cmyk
f
393.443 312.108 mo
393.435 312.123 392.999 312.772 392.39 313.366 cv
392.496 313.403 392.607 313.442 392.727 313.475 cv
399.942 315.496 403.094 312.557 407.117 305.047 cv
405.781 306.965 401.782 313.242 393.443 312.108 cv
cp
f
383.681 310.647 mo
384.343 315.907 387.55 316.543 391.153 315.69 cv
395.829 314.584 395.767 310.305 394.441 303.535 cv
394.462 317.353 384.813 312.568 383.681 310.647 cv
cp
f
404.778 254.472 mo
398.52 250.56 396.535 245.893 394.304 243.027 cv
395.515 248.136 389.807 249.714 384.719 249.563 cv
379.455 248.681 371.829 254.254 379.173 256.304 cv
385.715 258.13 403.516 258.773 405.069 254.678 cv
404.978 254.607 404.882 254.537 404.778 254.472 cv
cp
0 .32874 .913939 0 cmyk
f
394.169 248.906 mo
390.188 251.784 387.641 250.78 387.599 252.434 cv
387.502 256.234 398.828 257.787 403.788 253.842 cv
399.271 250.724 397.202 247.239 395.429 244.598 cv
396.145 246.658 395.584 247.882 394.169 248.906 cv
cp
0 .402594 .953216 0 cmyk
f
405.446 260.213 mo
413.667 257.066 416.346 252.652 420.15 253.165 cv
424.737 253.784 423.255 259.467 429.623 265.01 cv
431.982 267.064 427.957 271.133 417.466 267.288 cv
408.248 263.909 402.764 261.24 405.446 260.213 cv
cp
.00619516 .260136 .916197 6.10361e-005 cmyk
f
408.773 262.089 mo
408.494 259.474 411.136 258.723 413.927 258.124 cv
415.192 257.852 416.975 258.463 418.698 258.36 cv
421.112 258.215 423.307 257.265 422.894 255.78 cv
422.334 254.795 421.714 254.123 420.679 253.827 cv
420.493 253.773 420.29 253.732 420.078 253.703 cv
418.246 253.456 416.674 254.497 414.294 256.073 cv
412.168 257.481 409.522 259.234 405.64 260.72 cv
405.392 260.814 405.318 260.892 405.307 260.89 cv
404.808 261.116 406.769 262.712 410.195 264.242 cv
414.667 266.238 423.289 269.525 426.124 268.396 cv
423.703 268.722 409.025 264.453 408.773 262.089 cv
cp
0 .208499 .735683 0 cmyk
f
429.623 265.01 mo
425.596 261.505 424.708 257.946 423.439 255.644 cv
423.725 259.432 419.467 259.911 415.849 259.226 cv
412.189 257.998 406.108 261.113 411.122 263.412 cv
415.588 265.46 428.232 267.94 429.807 265.191 cv
429.623 265.01 li
cp
0 .32874 .913939 0 cmyk
f
422.675 259.829 mo
419.505 261.434 417.799 260.427 417.581 261.603 cv
417.08 264.307 424.996 266.703 428.987 264.448 cv
426.114 261.708 425.032 258.983 424.065 256.895 cv
424.343 258.447 423.803 259.259 422.675 259.829 cv
cp
0 .402594 .953216 0 cmyk
f
378.543 260.818 mo
368.302 256.687 361.642 251.316 356.569 252.874 cv
350.454 254.753 351.764 263.444 346.653 272.817 cv
344.583 276.613 350.306 280.791 363.746 273.179 cv
375.555 266.491 382.224 262.303 378.543 260.818 cv
cp
.00619516 .260136 .916197 6.10361e-005 cmyk
f
367.365 257.992 mo
367.347 258.086 367.304 258.176 367.232 258.26 cv
366.915 258.631 364.537 258.652 364.007 258.772 cv
362.546 259.103 361.078 259.688 359.584 259.844 cv
356.258 260.191 353.051 259.391 353.279 257.273 cv
353.82 255.803 354.513 254.746 355.858 254.109 cv
356.101 253.994 356.367 253.891 356.651 253.804 cv
359.093 253.054 361.471 254.118 365.07 255.73 cv
365.877 256.091 367.517 257.193 367.365 257.992 cv
cp
0 .208499 .735683 0 cmyk
f
347.076 272.015 mo
351.776 266.326 349.133 264.958 351.916 257.991 cv
352.381 263.22 370.833 261.805 368.464 256.782 cv
382.069 262.491 377.492 263.047 371.173 267.314 cv
365.543 271.114 347.352 280.426 346.275 273.894 cv
346.339 273.798 346.997 272.11 347.076 272.015 cv
cp
0 .32874 .913939 0 cmyk
f
354.94 264.436 mo
359.628 265.902 361.725 264.142 362.29 265.697 cv
363.587 269.27 352.885 274.492 346.931 272.325 cv
348.967 267.399 349.93 263.915 351.196 260.289 cv
351.17 262.469 353.274 263.914 354.94 264.436 cv
cp
0 .402594 .953216 0 cmyk
f
290.401 197.374 mo
292.586 178.379 288.06 167.103 286.159 158.98 cv
285.358 155.687 290.244 154.847 290.244 154.847 cv
275.487 155.235 li
277.962 156.864 278.802 156.527 280.147 159.889 cv
280.602 161.025 289.728 186.448 280.483 196.533 cv
273.206 198.389 275.681 207.461 281.608 207.769 cv
290.47 208.23 294.284 203.518 290.401 197.374 cv
cp
.369421 .291142 .580987 .114839 cmyk
f
279.248 158.049 mo
281.578 159.17 283.571 158.464 284.27 158.629 cv
285.165 158.84 285.134 158.264 285.907 165.244 cv
287.741 165.322 287.367 163.774 287.406 163.773 cv
287.381 163.666 286.184 159.086 286.159 158.98 cv
285.358 155.687 290.244 154.847 290.244 154.847 cv
275.487 155.235 li
277.376 156.478 278.313 156.578 279.248 158.049 cv
cp
.415167 .426093 .812802 .322362 cmyk
f
282.246 166.684 mo
282.533 167.801 282.821 169.01 283.09 170.283 cv
285.197 172.311 287.093 168.72 288.795 169.217 cv
288.429 167.523 288.324 167.225 287.935 165.735 cv
286.062 166.185 284.172 166.532 282.246 166.684 cv
cp
f
280.147 159.889 mo
280.147 159.889 279.704 166.572 276.893 168.353 cv
277.643 171.538 285.496 169.119 286.594 168.321 cv
287.691 167.523 293.73 167.325 292.916 166.854 cv
289.365 164.797 286.309 159.557 286.309 159.557 cv
286.309 159.557 283.178 160.856 280.147 159.889 cv
cp
.252811 .206332 .525627 .0404059 cmyk
f
290.401 197.374 mo
290.308 199.283 279.68 199.114 280.658 196.345 cv
276.981 199.198 292.374 200.674 290.401 197.374 cv
cp
.415167 .426093 .812802 .322362 cmyk
f
280.483 196.533 mo
277.719 197.655 280.237 200.051 281.785 200.188 cv
284.897 200.462 289.942 200.239 290.539 198.149 cv
290.283 199.849 278.689 199.55 280.483 196.533 cv
cp
.252811 .206332 .525627 .0404059 cmyk
f
288.599 168.365 mo
288.361 168.329 li
287.502 168.107 286.924 168.726 286.998 169.432 cv
287.083 170.25 293.587 187.696 285.936 199.016 cv
287.251 199.126 289.768 198.818 290.536 197.867 cv
290.494 197.704 290.451 197.541 290.401 197.374 cv
291.855 184.734 290.337 175.515 288.599 168.365 cv
cp
.415167 .426093 .812802 .322362 cmyk
f
292.887 139.245 mo
261.118 150.995 li
262.429 154.865 272.966 155.281 277.745 155.673 cv
279.823 155.676 286.35 155.387 291.605 154.272 cv
297.293 153.066 302.705 151.588 305.582 147.571 cv
297.476 139.899 292.887 139.245 292.887 139.245 cv
cp
f
304.346 146.419 mo
304.116 147.24 304.37 147.137 303.95 147.881 cv
302.465 150.507 295.422 153.16 295.422 153.16 cv
303.165 149.715 301.986 146.394 302.248 145.452 cv
301.778 145.36 301.375 145.413 301.13 145.715 cv
300.957 145.928 301.056 151.468 292.198 153.827 cv
300.23 149.904 300.439 145.538 300.053 146.046 cv
299.357 146.965 292.902 153.42 289.493 154.383 cv
293.421 151.456 298.295 147.223 297.579 147.307 cv
296.895 147.387 291.272 152.234 288.604 154.235 cv
290.975 150.567 295.872 150.213 297.163 146.191 cv
296.248 147.616 294.738 149.156 293.418 149.851 cv
292.602 150.28 291.745 150.564 290.91 150.924 cv
290.073 151.286 288.542 153.932 287.752 154.346 cv
288.122 153.809 289.416 151.298 289.856 150.852 cv
290.853 149.843 292.019 149.156 293.061 148.213 cv
293.941 147.417 295.025 145.683 296.058 145.116 cv
295.424 145.358 294.794 145.472 294.193 145.944 cv
292.757 147.069 291.472 148.721 290.163 150.073 cv
289.223 151.042 288.345 153.864 286.307 154.643 cv
287.936 153.407 288.449 150.604 289.105 149.528 cv
290.084 147.924 291.397 145.574 292.907 144.552 cv
292.414 144.786 291.908 144.946 291.438 145.29 cv
290.033 146.316 288.985 148.401 288.063 150.053 cv
287.465 151.122 286.937 154.05 284.158 155.013 cv
286.9 153.346 288.523 146.264 291.365 144.061 cv
289.453 145.145 288.268 147.028 287.107 149.177 cv
286.23 150.8 284.713 154.198 282.009 155.087 cv
284.587 153.244 286.797 146.861 289.364 144.664 cv
287.44 146.155 285.956 147.287 284.681 149.767 cv
283.886 151.314 283.231 153.753 280.823 155.013 cv
281.55 154.227 282.873 152.124 283.29 151.046 cv
283.836 149.632 284.569 148.462 285.223 147.156 cv
284.021 148.095 283.109 149.467 282.368 150.969 cv
281.915 151.889 280.743 154.686 279.971 155.198 cv
280.174 154.676 281.764 149.965 281.712 149.381 cv
281.326 150.152 279.749 154.711 279.119 155.161 cv
279.242 153.738 280.026 151.494 279.704 150.047 cv
279.546 151.331 278.674 154.05 278.415 155.235 cv
278.067 154.146 278.505 150.814 277.666 150.131 cv
277.457 151.65 277.86 153.645 277.859 155.235 cv
277.172 153.965 277.236 150.684 276.269 150.032 cv
276.27 151.439 276.77 154.102 277.266 155.309 cv
276.489 154.578 274.571 149.64 274.005 148.64 cv
274.201 149.663 275.851 154.62 276.451 155.309 cv
275.673 155.013 273.518 151.199 272.746 149.418 cv
273.15 151.532 273.99 154.221 275.487 155.235 cv
273.82 154.861 272.619 152.489 271.247 151.477 cv
271.9 152.365 273.382 154.867 274.376 155.235 cv
272.079 154.383 270.432 151.585 268.844 150.61 cv
269.394 151.613 272.116 154.272 272.857 155.05 cv
272.142 154.795 270.374 153.642 269.668 152.878 cv
269.062 152.222 268.121 152.059 267.357 151.596 cv
267.924 152.372 270.675 154.559 271.449 154.976 cv
271.437 154.974 269.169 154.88 265.763 151.316 cv
265.976 152.15 267.003 153.16 268.781 154.457 cv
266.187 153.939 265.344 152.228 264.842 151.502 cv
264.969 152.23 265.354 152.98 265.74 153.526 cv
264.949 153.344 262.957 152.051 262.198 150.333 cv
262.378 152.16 264.692 153.391 265.242 153.536 cv
264.699 153.463 263.408 152.947 262.897 152.553 cv
262.421 152.186 260.673 149.968 260.038 150.256 cv
263.853 158.829 300.15 157.284 305.721 147.449 cv
305.5 147.24 304.974 146.822 304.346 146.419 cv
cp
.252811 .206332 .525627 .0404059 cmyk
f
260.038 150.256 mo
260.378 154.013 271.785 153.544 281.13 153.544 cv
290.475 153.544 305.41 149.166 305.582 147.571 cv
305.973 143.94 291.134 134.713 279.942 138.943 cv
271.2 142.247 259.71 146.619 260.038 150.256 cv
cp
.329137 .415808 .64892 .242557 cmyk
f
276.714 204.508 mo
277.626 206.272 279.363 207.652 281.608 207.769 cv
290.238 208.217 294.077 203.762 290.688 197.854 cv
290.726 203.285 281.952 206.43 276.714 204.508 cv
cp
.415167 .426093 .812802 .322362 cmyk
f
260.038 150.256 mo
260.378 154.013 271.785 153.544 281.13 153.544 cv
290.475 153.544 305.41 149.166 305.582 147.571 cv
305.973 143.94 291.134 134.713 279.942 138.943 cv
271.2 142.247 259.71 146.619 260.038 150.256 cv
cp
.404334 .257969 .91043 .0954604 cmyk
f
260.038 150.256 mo
260.378 154.013 271.785 153.544 281.13 153.544 cv
290.475 153.544 306.112 148.553 306.284 146.958 cv
306.457 145.349 302.938 143.254 298.773 141.106 cv
299.682 143.614 297.163 146.191 290.077 148.373 cv
283.002 150.551 261.083 152.603 261.236 147.908 cv
260.413 148.712 259.97 149.5 260.038 150.256 cv
cp
.433387 .316686 .91812 .164309 cmyk
f
296.449 140.033 mo
291.491 137.98 285.3 136.918 279.942 138.943 cv
276.113 140.391 271.757 142.043 268.097 143.748 cv
265.228 145.297 270.288 147.553 279.59 146.874 cv
291.663 145.993 298.074 140.843 296.449 140.033 cv
cp
.321447 .224308 .938842 .0650034 cmyk
f
273.769 146.279 mo
274.036 146.288 274.315 146.363 274.549 146.481 cv
274.539 146.649 274.501 147.182 274.171 147.116 cv
273.902 147.062 274.038 146.778 273.895 146.657 cv
273.803 146.579 273.505 146.631 273.443 146.532 cv
273.383 146.434 273.641 146.274 273.769 146.279 cv
cp
.433387 .316686 .91812 .164309 cmyk
f
287.238 147.609 mo
287.293 147.398 287.428 147.204 287.603 147.063 cv
287.795 147.139 288.406 147.385 288.274 147.625 cv
288.167 147.819 287.861 147.594 287.697 147.661 cv
287.591 147.704 287.602 147.965 287.477 147.974 cv
287.353 147.983 287.211 147.711 287.238 147.609 cv
cp
f
282.948 147.677 mo
282.938 147.639 li
283.202 147.683 283.275 147.532 283.498 147.542 cv
283.549 147.545 284.214 147.28 283.893 147.734 cv
283.694 148.015 283.066 148.025 282.948 147.677 cv
cp
f
282.924 139.289 mo
282.914 139.251 li
283.178 139.295 283.25 139.144 283.474 139.154 cv
283.525 139.157 284.189 138.892 283.869 139.346 cv
283.67 139.627 283.042 139.637 282.924 139.289 cv
cp
f
279.262 149.91 mo
279.341 149.998 li
279.654 149.893 280.008 149.894 280.194 150.181 cv
279.953 150.257 278.979 150.417 278.858 150.053 cv
278.768 149.764 279.094 149.829 279.262 149.91 cv
cp
f
272.316 148.187 mo
272.545 148.17 li
272.658 148.468 272.39 148.642 272.228 148.276 cv
272.206 148.218 li
272.316 148.187 li
cp
f
267.444 151.099 mo
267.672 151.082 li
267.786 151.38 267.517 151.554 267.355 151.189 cv
267.333 151.13 li
267.444 151.099 li
cp
f
268.284 149.088 mo
268.387 149.078 268.508 149.088 268.547 149.056 cv
268.715 148.918 268.331 148.479 268.523 148.381 cv
268.666 148.308 268.834 148.552 268.964 148.596 cv
269.107 148.644 269.242 148.446 269.314 148.661 cv
268.99 149.281 li
268.895 149.353 268.154 149.378 268.124 149.214 cv
268.108 149.122 268.188 149.097 268.284 149.088 cv
cp
f
292.564 140.228 mo
292.459 140.203 292.347 140.155 292.294 140.17 cv
292.066 140.235 292.232 140.745 292 140.767 cv
291.827 140.784 291.779 140.516 291.673 140.435 cv
291.558 140.347 291.334 140.475 291.365 140.263 cv
291.97 139.829 li
292.096 139.797 292.826 140.017 292.778 140.17 cv
292.751 140.256 292.661 140.252 292.564 140.228 cv
cp
f
275.199 144.475 mo
274.981 144.511 274.509 144.597 274.45 144.578 cv
274.023 144.442 274.444 143.705 274.726 143.656 cv
275.294 143.558 275.478 144.183 276.129 144.183 cv
276.062 144.358 li
275.864 144.567 275.559 144.435 275.295 144.462 cv
275.199 144.475 li
cp
f
288.469 139.76 mo
288.199 139.981 li
287.981 140.015 287.907 139.569 288.005 139.481 cv
288.203 139.303 288.485 139.557 288.749 139.406 cv
288.78 139.505 li
288.769 139.65 288.602 139.658 288.503 139.731 cv
288.469 139.76 li
cp
f
289.078 142.365 mo
289.211 142.455 289.299 142.574 289.247 142.708 cv
289.149 142.964 288.737 142.885 288.525 142.732 cv
288.623 142.582 288.623 142.359 288.594 142.185 cv
288.725 142.198 288.93 142.264 289.078 142.365 cv
cp
f
279.641 140.954 mo
279.701 140.898 279.779 140.86 279.873 140.875 cv
280.14 140.918 280.177 141.286 279.998 141.393 cv
279.632 141.611 278.909 141.383 278.78 140.98 cv
279.067 141.018 279.254 141.163 279.515 141.202 cv
279.49 141.198 279.538 141.051 279.641 140.954 cv
cp
f
281.025 144.481 mo
280.801 144.503 li
279.953 144.435 280.29 143.581 281.173 143.781 cv
281.651 143.889 282.506 144.784 281.678 144.707 cv
281.64 144.335 li
281.392 144.3 281.227 144.426 281.025 144.481 cv
cp
f
263.637 150.557 mo
263.413 150.58 li
262.565 150.511 262.902 149.657 263.785 149.857 cv
264.263 149.965 265.118 150.861 264.29 150.783 cv
264.253 150.411 li
264.004 150.376 263.84 150.502 263.637 150.557 cv
cp
f
269.908 146.355 mo
269.979 146.276 270.104 146.193 270.293 146.108 cv
271.727 145.466 270.699 146.943 270.746 146.949 cv
270.062 146.863 269.659 146.631 269.908 146.355 cv
cp
f
287.005 144.667 mo
287.186 144.588 li
287.765 144.212 287.005 144.18 287.015 144.159 cv
286.872 144.455 286.849 144.683 287.005 144.667 cv
cp
f
262.855 147.899 mo
263.036 147.82 li
263.615 147.445 262.855 147.412 262.865 147.392 cv
262.722 147.688 262.699 147.915 262.855 147.899 cv
cp
f
275.52 150.049 mo
275.29 150.022 274.527 149.781 274.537 149.777 cv
274.884 149.623 275.83 149.301 275.561 150.052 cv
275.52 150.049 li
cp
f
271.741 151.574 mo
271.511 151.546 270.748 151.305 270.758 151.301 cv
271.105 151.147 272.051 150.825 271.782 151.576 cv
271.741 151.574 li
cp
f
291.444 143.189 mo
291.607 143.071 292.276 142.795 292.274 142.805 cv
292.199 143.135 291.911 143.961 291.417 143.212 cv
291.444 143.189 li
cp
f
265.27 146.508 mo
265.177 146.439 265.107 146.362 265.109 146.3 cv
265.112 146.105 265.329 146.327 265.439 146.326 cv
265.65 146.325 265.773 146.115 265.976 146.097 cv
266.113 146.084 266.548 146.329 266.38 146.433 cv
266.207 146.542 265.898 146.734 265.641 146.692 cv
265.553 146.678 265.392 146.6 265.27 146.508 cv
cp
f
290.63 145.63 mo
290.519 145.585 290.427 145.527 290.405 145.465 cv
290.336 145.271 290.616 145.435 290.717 145.406 cv
290.909 145.351 290.943 145.111 291.122 145.04 cv
291.243 144.992 291.731 145.122 291.616 145.268 cv
291.499 145.421 291.287 145.691 291.037 145.716 cv
290.951 145.725 290.775 145.689 290.63 145.63 cv
cp
f
294.786 144.355 mo
294.675 144.31 294.583 144.252 294.561 144.19 cv
294.492 143.996 294.772 144.16 294.873 144.131 cv
295.065 144.076 295.099 143.836 295.278 143.765 cv
295.399 143.717 295.887 143.847 295.772 143.993 cv
295.655 144.146 295.443 144.416 295.193 144.441 cv
295.107 144.45 294.931 144.414 294.786 144.355 cv
cp
f
278.349 147.774 mo
278.211 147.694 li
278.107 147.622 277.867 147.359 278.025 147.274 cv
278.123 147.221 278.427 147.448 278.563 147.453 cv
278.91 147.466 279.648 146.61 279.672 147.533 cv
279.482 147.577 279.301 147.477 279.126 147.493 cv
278.924 147.512 278.916 147.584 278.759 147.69 cv
278.593 147.801 278.492 147.836 278.349 147.774 cv
cp
f
285.474 141.756 mo
285.416 141.813 li
285.171 142.01 284.536 141.644 284.427 141.364 cv
284.305 141.048 284.541 140.666 285.088 140.939 cv
284.979 141.055 284.964 141.279 284.888 141.391 cv
284.952 141.297 285.715 141.468 285.474 141.756 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.1.1
%%For: ( ) ()
%%Title: (1606.m00.i125.n025.S.c12.322117805 Vector mushrooms illustration for menus and recipes.eps)
%%CreationDate: 6/28/2016 3:06 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj2OedQdZB^9?jM#A:>.!2gX4eI<e?fT;1[+@,XS(u'RnZ&+gkaa*FVlqdS[e960>3\t;#N3AY"Ok#Vp<2rYmeT^I72`gVP
%[=5X@q!WUMail4$AFRq@ci;h7qlIA7Bq="RcmX$3.eWL9ZVda0>5:Xid;7'?nir'*bXV,a^+![N=),._T:+eEZ#i[cjOWt[C:.)F
%D)>%Gm7`Ua\C'3oLL7OS.2i2Y\_ZVSSP[d1V;8";d+CI!IcLBbjIF_iNEf6s73>3:!`.:#^l:\<i%(Q(PF;:Baa!5$UOu?3H1Y=g
%DuIcp=+4r_F7B"s1a^>H"gY(tb%\+`Cf_Qu>/ks0V>mFVb=nUM;!c]cZJ&!U(O^*qB/%7tB(H]g/Uf/lr42`tA,hb-gp#NEs#9-#
%s'E1n:\a9fr/?ea[^HO1_ikQ2p5$HVliZ\&"DF4_70<4qQ'9[#Z!H<_p,nnrR5t).r$1W']>krTN0b!*bZpf_2@;4nj$2?*J(_P!
%!ic*r<rSW84KB1>Q):C1>dM+Br?(F9,q@Z^h5ODCYNs^sThP`KA0WuNj[tNJloi'd.l'sIT]D`Ra)8/-=D8E`2ejB"_gEeQipU2s
%:=b=f/"ftq:9o.KWUDb%n3Z;c+stVHYs4gi16L>IVuRq,B=jdZ9FQHlj+.XtB8bttZWTGmf&u3_g=O,]/SRFd<m*YK2I7_p*t1Io
%9`0h.Is.XkGIq.[a%LWi^&1@ZN&]LM*DF.E0BX9%fROb:>cuEtkhOZ+L\BKZ+8d,gd5eV=E5UPU#!GebA)RCbhb3btgtSiOkf]mK
%7d"lqIaIl9s%VUtNVuK39r6?W1hfV+REb\KoZ)&cMU-3Q[ok90)"`$]:UX@gS\AJsK!SV%aLCdmru(i3o/n$ji\S7KUiiO5UJblt
%-3fcbBh$mX($ihNL;2p^\6f,"h\6Am]cke.dXINt9Hod$648jkI0R\UVaKIE1fLMXlU+$Y>Hul\ZdCnTL6X:.*f!KHkg"1E>rilD
%f!bRKJ[^O(,Ea%3HF_SFL&BWA1N5!aBh$;_CUNG9ZZpdq/S16;S^pYM\'_-s7j%8LGGaGFr"Yes#tDPTXDcYnT&EghLVX:R_9"KC
%4BqQZ;)?Udf4gNf0e;?8Z)BI=ijjJ\r[\],Y?1Hs&`_0_PPmtQg,eJYSo!)SP>a'`.Q]k!m7JkbZr>u'NP\Qm='[rAk$Q!Rn"'^;
%G#5<)RZQ4e<83\pfkd1K66"29*#27"N1mcE:2`\:7rg11\)ug*P\@3E?gbRP8dq^/"m'1eF(V$CHFL0YP-bc!>c<s]9GEs\0DK9*
%1\KXh>+NBt,6Tj(qjhna(tgH_bVbm/_*4]jC9?9me@C@$H+6?'V#)He[!r-nqJs`$S@d7<LH@>+rNO&cO(,5$Hi7)![u\hu<\L%8
%03Wnn2`oU+**'"o8*q#;`#Z#gS2A%Z2[(3$*H)L<V?#T<eUc(TrA.lq?4>3^+*TV*;S^l8ql6=5XmLQ-*TrWirD-t.I.@C9VjopE
%@VDh('L8DACcVR9NCC9;c$_>ml_VbC\<*U@`("t?.flU*fP+DY]=8]J(AEHPSq`@(H=%D+fWC&4CK=W0=rJ7iGJ#[8RW\8Ai9V7a
%Q.9L.H\\OV%6GToIoX:0(IM6lS8=MF`?2&b0\JH4ZT2g[mWf2T=9)<D04GiVFe=`o/(keRgD9nD33>#qA@eShQsSD7Add/c=X;ZJ
%bL#RT!82(.R\e/*E?:p,-l#!KIU:YPCU'"fijeo`<NmZjnH'aI.L2AqM.JVh^e?;knH*-.fo<7JV^@_c6*j,I@dRa%g7$Z;'AMps
%B;*umhN_kkg83^['@Ui.g.b8QM.nn'm=(<s[$/m4>%Mh<'n8sMSZ(S`?QJm6Js.Yo[G6nj>1;@MIAr2_C?cMCoVE>ZSN@be?srk*
%DJ3/44)+U`TtqBCeC)`9mHOu<U/RP3V`XKC?N#S.%J7CjB26HPn=5H<l)0`=Igbn:IP2fFnm\QnA"*!1GJ#^05/e<*<t80NESKr^
%5\X7oCW/+HTZ(r^M@dW]eCa/7<D^(uCXm_<TM!1,#pI28JEh9j3Y+IoOG]l4kG3`,m5-nik^6r8,L'pPGLDj0h!:uu.+\AKr_*>b
%ZdNS)Rjm/1ddsJ(6K$Wb[=5Q=hZq_HV:[Drg8@?r.lCamp$,,KK//24^=\[\g?DK)E\5EaJ]=L*CR,?n+'$UY8`ePtG/#N:p1n:^
%Lqfn.O"hK$`BS^7rem\n:9.AHesF^;DS181NUurDZD27&?%4:@^ps"!;XE]'m$r46Y;%9s2+Qf=EIegQU>n)njS0(C8[2E8+.ZBb
%BhnW7ib3$aa%s$%r`+%$e>hZ`oAgT,p>`LQX`%"jlb\b(?G<5gP-]%tqmJnPa-NM\pA\;>Go\O^IW9;0b73l/V0Q/D19^6Q=&q&d
%6_<'V:[X;tq[PVT,0o6Z\P"Q=463HW6Y?%G>@c&_8BK"$pVp9SWc$h00lDu/.K"=PHfN5]n`8POEc6=7]u?1^j2o")R"9854CQk@
%hDhoeEeh#g2#9IEn*qa5Z"Ic"2Q'eC39[_!q*pnXI6Gis)1(;BT_lj=IP1o1L-0A=0NUSDf+\c+5&b*,CC5pJBc`B'PkK(hGJ>W;
%/-Xi0Tp-IYh^+W/9cVq:%p:C%EW+^(_FGCPS!?ToJL"T6JW-bs@:S7d[8F!3(RgW[6DI\bT6[[snXiPRB+t<u^Y++6-iUH/s(p[Z
%qo-5T;HuamC@kS"IoE*1Q#VC0"\co8<DPZT.Z/@q?Eous:h<jT4^I<Vg#'=O2E99iApQ&Nre<C681hQl^'FD03Zmkj&lP'b^Ff=j
%I(.9c^@L/[;F=CYqM$*&1&t7oQ$B^Oi630iAE%j%3*uSEh&L;JEP,C,%/XBYNgGU_A`@s&3*mqlQXP;YicpkN?7(]!J(!k-FXl<6
%T5ei1*Cr9Ci47D[U`3L=io[%*s,rRWlofd3h.:\nSEY>9X@SQA4XjJf`g\dP"Y8$AWf95E:/aDggl#21`qnk.HUc#g>",RIk1A!V
%K]@:`a%8.d0c#d.TpjF`Wqg-X+E'S(VtA2X+rgQum?gjm\li%'IUQS2'q?TcS?>Nhe2QUqYGm&_2D9<GF)SiE?IJp0H-,A3<<Ud%
%/bBcKnLmiEdfFlrP`uMB,r"H&Dc?qi[VV<kb96TseH!3q%]C'piLH.G(j@[:S*=nZb?itc*/5/_^RRc:QcJtT_W<UH<;?m/W5cY>
%X)c>@/lr;aNch[+:)VAsh3cgVH(-\JD!RbFBTsgCIX]%4/0-BSUoA?;/61FhkFHE=IGebLKHKH&<OA,KH!p!b<(]-QgG)k8iEaW*
%FQ:6arX.8k#1kkL)8NatBs".>\aa>3L9S"6K8OX.is$hfrN6KdRpFM3c_FGG1Y4Oerha;X:J1IhRS4VYBb9(8A19a^3P97O;HN@:
%QJ\N&ND6k2Utj8JkWKU(i-K,B2mhGe09i6BT(R9T_tS(#[kgm=Y(on3d>9K(+d3?*EHL/81<@L=H(AK-O"D`HA<;j,=.<`^Nu(lh
%A<;kECq3,?EYICk?G^]F5sE<*EKWUOIKFPQ5sCEj'A<.VbJrl362kXSQg)iN<Gq0,AWi,/cMSa_GCB2F\$"^o;T(l-=DAXf0,rFu
%G.]q]+^K2F^CL8&0phM)`_O/"/tI,<eX*n"I_4-6Wg>%(otDp6G!!tI:9@Dio;7(SF+Kp*;VX1u(L*0TB'"ApJ5;A`37.]J%'pX_
%B>&Al8Nc*).Pa\@^1'r[+Yf!9-U0'.E%/pk>RMV@AfU^*W))68MkQ-f$$.9&EQ@C\$HHId4f,&\kJVCHCWim3BPs>af#F1RgaqjV
%VO%"eff<Tp^.--2o5.`,V5k:;le!#sR(E[T1,f.9)5PloaMa'rXnsX@Fq*l>IR3uRHfg9f"DeVXKU^!jY'1GnYO0TePF@t8PH&[E
%p$(O,V8t!rDPu^P/(?M;@D=n&1fpa&/+e=MgCC]Nqe:6J>'MF.9F<^<"8jLJqm!@!'m#Sh:;+#_/_S3>,-n;l31672AksdbG1C-c
%hL&qDI&4Y&CuQT!H+-qX[gpj!JRJt$rl2K4IQ:P?m(FITVKcDT4^'c.C,P74lXSH4E6)7d<h!2NJ!F=f+dTkj`:>jhi'tCBl!O'd
%(t[El_'o33(VCA-L!"bkhtD'm,C`@Qr5uTB_!e,gcm>%L)d=Gf9sh3ik0@TPXXnGiKkTRfA,FNn8`N;JL/.mK/DYb?cI]4:K@A1Y
%ZG]g,qb)\%6Jr(E?PSgMb%[uF-8)f1/m$fX1O$;=Zu4KrJuVkR=,JHLGF",odRGI@oo\HaFi(b^AtM\lc:Op79OmqnFhT?0oNBBm
%)-`Hil</F='c=pDT>dEO5TuQN/iHX#Ds;OI+B@ahb!EG,WdlYjO\2la8@;6M^/q5#QkX^8,E5^O(j#Z@T\2:r,Aanp9#]ib\3Z#F
%l:EJ>p%o^`f0*!sL>J`]SES@"7d;jNhYu4T_o-\D0m0^!dDN#\n^!#$dJ0@3^m!AA.uflmqpHYWjZV)fVjtF73=7_$n+[EhCgH.R
%qrLYuadN%NB.elRH.1)E$5?1ZguQ\MIHGL5N$DseE9&3;lgEFfWtsU-k_PM)kP0,$[q:,2$Hf6=dq5jimA.9#Lc\otn(VM4:QHF%
%`aOaOR0i&gFNt[r38]D\>m&B=Jkd\`mpFE:>ijbSQr*d`Q;bIEanE=rP"u>,;'k%6LUnM0$Cj+0%6/&/>[1]cMf_4[#r0!-YS,=o
%82&>]KGL#P?D'`*0P4,9'Ccl.mA1+b]A^oLV#8^qqGj[FXsV\W<NfWD`O4$T^EN'X9iJ!)goF0*KORln3pelpXC(!3;uNn:Sko0*
%kZ7Rn\lU7P^[[U@A'`#0ngggiYHq!1?'ElC?Oqd!:-22X&f>i)fl^2D1$4cXRK'8%pg4@^rcdHb``AiqH#*'u..U7U*Fg0*R9DB`
%Hen(ul8VkeO03[mM9-,ca-`@PPS\@8?H,"0+-X06s.aorGpDL[(QR+p#lYQ7mrc`gRCnCJ3q(+-?,\'1BMp2BQfC(QTc/F,K/)NB
%=c/`p8Z9Y]BPWf.NU\tcP>I6Y$e:WW([NK<B><W+K%J$o(q6(3NBXB.ZRHPlm5im72_0*i^KJ)dY"f#CfZ0Y\!Fj7t;#\-LND$Fe
%HQDd\S)r$gOjZ8[BT.pn1\#.;a/KA`J4Cgn$kn]AeXuYo7q:Q+(q6'(GVg`gNU,TOE,Lh/,8Doa`hRMUC/Nc:8eh:\D[%$O7'-o"
%5&7pri<TLaa^r\l)WC]j[4a"lSh-S]:L/d9mbh1=@Z;?)<\3Ug%8+0RZHg^CVc4#XqffeQl??sGPP6Pc=45>f9-I!Lk,sW]3I.sJ
%`87!9HP:aE@ddU1]pD(=]]o.H%=FT8`8\C((12qAlYC8)V1<Akn4a>*M8Apf\_P-]qpua6mS,J3DHOIFRh2ipC.fm3hq6S/>3b@i
%cGORsD"KL^Sn)Bhj>ZJ]Pb;hORj-/WYInT4C?h3mm[5"q(p7(JkqBdHBYqd/K?P[dlQ:g-NTiIkbj.2J#q*s_[o1bdTC]U_:tB.V
%Oq!#J"ld*6n8%sePoFt-QKjir42\YWGCfXXS=)OK5[:)MbS8E/e*G3l_%Mstbcs;tfAP*G7L5Lu.3u%&0D<!22gXjuE]2.o!c`(Q
%9.n2K<;rguY?,I#Q!1#Kc3$!&aAp'cS`8MqfARZtjGKd.U"VQ0'hagU9"ho84M@%)kG1YdV79@7(7'uEM>ta-I<>?M?48N;9V_U*
%*QOR(NkMgU:Z7?QIi4LQM!O3Gal<i;)s8r4n`Fbh#]&3k8"(6A?HYB:QQ3J![Qsbn;a5/tm@[U]r%Ec]oUoBgV2J!H?/<Mt3)U'E
%\s'm>!%rqAT`::V9P:=a8O$;<0GTMQrN6KlAqdY_'O+Qi=527IWHP8qor=[b<U5oZMR%T*@]d#b85oI8dIjMiW]03Wp8M$VS93&5
%'^=AO7-CTP9;aaCjYXpuV:S^u;69_!r0[U#&m"C/1Sn3;Sl`?V.4j7D)Z-rtelputZZ2-tY&_!%[4I4.l:J".4o;ilE"`Sah>l;B
%mO"0./_u(NPVbX12tt9:&nRU2Z`/u,\213**Jm\*$'?WMJ@IL]Kf?T-R[`:\AeL"W[YO&b`1l#mOcr+#^*^*5V4/$SOp6_X,@;e&
%.$Ibt0bHE)3u5g6(W<&D@di>0D+cf2(*sD$f?K_)h.';[&_=IaNggrF;S!1>-u"4ADQ!IhDeZ@a9MI"Rqus6CQ$[ei?_!B2>]$b[
%f<<]Dp">/Y\r*On_2YI0aJI+./Z#MYN1$*HR])"59(Qk>^TPP*IcF'9a#3hcYET(!;GR+)AS3?KmdDmA'JCi+0Y.Rc]4sg%JkRPN
%mN5hYGB7Q&ZaWgcG8VI2Bf,4jCt,q-PVrt-2eUm3O_p3Xk!/n?ns$lsjh%WuLOO,]nQbR`EaukI=`/Cd8"#?G]m*(!FgG5J2.#od
%7_[+`CUNH$&AIPCgM#(Xda(\QBZ/L5V__Jf+9J9e3PPU%1Y)d:c<;C*_e"M!19T[,5Q']dji$765EbJUc1Xp0B<BUVe*s*gpp87q
%iCHXj,]Y;VC@0>83QR0<'=1V#3NZ;mSXdnNI`*$Nq!VK#/_fnB)nDOq.cY&6BECuYLVSm9hp@/"W5.'KhW=6[)uoREIm']*hl,p<
%_F.u\oC9/N.K>1;gr<cq8]nE+XWkRaK'eEY5nH3tf6f>7aF#ao:EL;MTRZSoTJ)NsT/HSBh^8-aJ/Z`?[0ubgYIoBLkV2LK#gag:
%"SgpO`m__Sla]'4pk)Vp,soqi8sGFidu0&mX&uF0gD'a,C]>3Z%G:>Y6)a>W\VcJ_>koBb<bXlO+FNoJfoi]QrTF3h8u%J3ouT15
%GM5T?NHO:<Ir?uNFO/%lJL-Ak)5ctcBM[jLHi!Kr&KOjJ`R]&?hd*>_g*p:1[b?-Wmk<&W0HJ65J!!Ng,iC>"I\,mbC)H7991k"k
%f!AtmE#'@g%^*bY`AV0$mbYjk!CmQJp1YGpOAJ;6I!rG6Vp8T$r_EuE8[Fq`"5M]o=*qNj2g)=\gA=``[MCLFUSou_\58=QY,9bL
%kI!h1I[(<9?[RJqI0l`3Q$/U$;I35+qs7DbRjuC<qUHL\j3!(!+Km'YHC71kpCVDJRXB<4h-O0@q^J8XZ&CNOHf^_-VGQQbg5V<R
%a;2bsb$SY,o0:YjM8$_ml+`KOk?CBRVN@LiB[TiE5B1Ra0$`t^Vq6!rNcOIDcg_h?j)@[q[;+sgY]6M1berg?Z$$VqWF!igCZrI%
%lZtg^mQFjgLr>doXrb$0+hKFS:1bR]GimFjeqK\j?GOlA!JqZ<EhdUq4St*r.8T8pKD&o`R\KWc04t!QZ-aY\1!8#I^W1.Q'F9k;
%A$M&X9"S1Pc0>oW'E.=;gb)h*81L'$oG1s?Id#NDjORd99>4O.;/GW!s#5$$EbhhIfkOPkQ0+-"B".?gG%RRUD&;rI[;%ceY<"lI
%:MYsg@Vr_tg8VL>B[Ht'>HUsUj_aMH2[P<:^YWgtT)Bt\:@d-\#'c\E`t<$1S^YetNQtJ!?>0`Hm7bCrmZ*c@M_Z6:ekp%kfP4KV
%ec0WZCM(3,C=G<3&O>9*bte/Ce%Y#X2s_`7G]E&gqI-:H=NPA::-5BDE?A_6^>mj#b,<d+/0/S+WDRHb-9m<QG?QPaHV9Z!4=R_!
%#MY-DC27dp>GmI(O*#DXR9ZZGkX&Di*.l"akpo[Yk_nh#L(nHIUVsOu.BeM^-rXrjpD_(`3E&8OGfHNXS]\`>*U\.NeAq5Ol*s"u
%EnG2MELH#0APS/]6jBbC=!6eqOI)?=h(7,]Vo9u<DJ>bYRC[TN%^bs&fhf3N5c&hI0C7K\H:]aUR_[4&R-Y9/@FsR\P@r]^FulP!
%FBVk9[msHPc-7>qjsf)o4flXKmHs9P]h$M"UHFDpK$6OT#SuanC5.PIfG]%@QWZ3nch=TSh(K.[.^`p.2P$l@7]BM-d;ErZd?:ij
%RoWm1Xqgg0-GSGlKnu]u^uH]u+`]s7Y=tEf@a(:s0^E>7m_e)?g1mNdMi[k,8eZ$'^.gV4X5.S3GEi2ofMTiH0[$Ll&\L*0?MRHt
%`<6`qdCVi2SlSI^P4k-=HB7mjb(&//R;bo60\jCVmMRN=NC?5[-CE@<`?ZO=109n@_<H4_Or?d7`'+thV-<PV8/RAIrt;^]&h\N#
%.R?mG1s;0T#kH)"I+`3-J"N5upR(PQotQb1@H!m-V1;ZQY1&8Lp)pIP@XRBm?uWdf1!QU%1Vd,3HJ+1A6-6oY^&P'Slo,C":U-E1
%Q7%*%\XA_bSR8!_*_S<D02!rWa`6X+*[tX"Fl#%RDJhHc+#b\2C?Hisn`T.#H-U*65_^Xg%E'!+9Fa1^-\%9^b9Q.87!VEngO2IH
%e9BB5_k"M_ka^1?\&Sl8:,#<4&LmSGNR7QC+2,8gI5_DWcpbkm&+Hf95Wntqf['+2`EFkUs7(=s4:aUfpEX0l=;a*7K7-=YFR/an
%h5a+`WS+:.3*PA?jgL2MVu).7isY_&?sO&_.0;pNO=YJg>#=>P`r90?TTM6egBW+(/tsdT:ZiBkmhhbed-_ASG;7qHpH+#sUsjUR
%Q\%kjgk#E=qkOLhItj,Vm!j>+Eh(s@ODc*YAAnh7eXnYpT+md8XeG`h#blhD:9-^_MH,O7Qd^?Q?,Sl1R889^(KINm9<86l694TL
%CCZ:3P$BCq&#d1Ya@`\0;%%-HCY?#Keak\CaaWllk\g8D9Xf*>SsE/Ch5]#SYMup:iM^c9eE],0j%1u4rQa.-l=B(;eVct2I;e1A
%;r=D*0iW$K3jWIk(N2.,;6T6kSb[)]oTjS^gPsZ]l]g8N`"L@&Xn;(WhC50dOI_MY>c$Q\l1b]cjPN#o54skVi6IumQ[X;00b3Et
%l3q^P)X8R6h*-uCgjl_X?&X.KXC2LJ>r:>E^EGYtDJYMB+CE9V<qW[\b,QC02YO8"leF5*BB,Xg]1BGg,\dWI]MKU@n&I-'[:]-.
%c]T4"V:;H-"DPbU57\6Gm:p#S<D1BqF`*MON@#@]@Quprg%0`ih,0sC^Rk=8A2i*6/eALJnR;-=$FHA`)ctWOZQ%NBl&Kpq`uc*_
%g+&ZE8jCX1GLEHiDk0PEe>Z`Uob<4gTqi-u'i.c$_fe-Q!1&S/3Xj_`ffH^P&/04>!HU2.s+uAJ:1'ajG.$-f6<R*V.IKc:5`lrB
%7H_bgM`R,lNRNg^5Wc'1!dIR,=INcW?Z\&6?FWArMp3Cua4VrcKsI_^G<6,_7@fY%.YY$j=@nD,]p5DWS6X17F*(5sB?R[j\=[k(
%D&tNgh$\l6>+PWCTEX5^]G?(QF-qncAQknm68^rFdp(LOjfmC>6%<K"fY?pV>sLd@8><#2_.Y\Bit]0+NokE4Z#s"k];orn[a;)'
%L6n`3lg*M>jELd_bUD?JhpZDV5H!\`*pD/pZ67f?0rjQu-t?ad7k5VoI^r=&gZp7O[L9[0^cR$H\2T?E<oOu[)lKP(3"G[rS[\RQ
%UYIk"fqBH=lc/l:?JOs7Kdl)nrTYc[:&_4M4]PE,FB%9GFAr0dQAJ$$?D-:7bKX&pOi6&c3q^pHe0plhJ#IM(CP2L"lh0]E`];j-
%1iZ,88Mt@b[Jb2-ZaQ#-gaEHj]KQSi^gj:eUf'3fl_kIj_.rp2ioQ<@hc`):H*1K*le,qnFY2!i5=dEpTCdeAm%4s[_?CE1?I>EI
%3QE5NLdcFa&BiVV#Edc_YH<Mi:amOh!8je(S+f+l/A?OSJ"cXTp:5ZkF)H9&q=N`]rigk;q<G*8WVcL+1#'8Q]RI:%gn%l!rUfW7
%H8<87l2J\#ZVrW[/)Ea?f2_+Ej0T0N$AYt5SY_#nf`t0.Z_sq%edLpi9s_42I]F@\HJVslI.h<'Bi.lRo$p6k98.3Uro)4/lfIjt
%Tdd)"SMqX^[L:tV0<5V)Zal:>H7QJ5dls4G*8Kt`(=\nabMR(/hpO?8"6]LZaO0FCkeOiVp$ksu2kPM>p8lAbo:M?bO&nP!c*su+
%1POMoS^j^;jTCs+n[849DmNA%q#&\of9U1?jq!c=gA)ub_<o.]f6`47]Dd4mn]Ca=1(Z%KQ2bn"V*UaAI4q[ef5<1dL#;=ZG33\o
%AJ+BgjUOuuI@HZSXd&IYWVhn4>?K,*p$^-V^RY6`Z]r6)H8T'o4F$edq<ar2;Q4o":XtkuKCpIWg3"GP9s]0/l[8BKoC?qhmZ[Nh
%c'_@uh"o=0mf6aAC#SlM:X]FSDa#i9lD=A*1QOF0*h&9gO/g2^C`W;]AnfM\3M(H,6^A)*>Ajdgk'k:^optZ$2?0mOS*Y#TR[T_J
%/D&+sM88V0rU*R4D=R>SQ.\\Q0rD2K0t@27j;VH<(>k?@c?oGt5P)CGlZWZ2a2*D_fTqT7gYc'PW-Z+(4<;XK!e"!RGMLNR2[U(R
%Mt^7jc$X26RK-]BiDI)m:#kU?Z)7;WRE)@dp=&$UPo%k55J-Jd7e>J`CIH#-S=.EY=(]._PJ]n6TXTst(WtWAIc9,LY*d5`>h8F%
%e8+l*G6smg95pdMD510$ELX\M>hEP.(FlO7.ejR&/*1p^he!3#%ps]k.2MC0=Ut.4^P]Jf^3cF*bV*lL%X+l0QbIs@5GW"Zebe/c
%60O)sr*a0_SU%QChW6Xs$fBh/jf@9jLC4>7G7RdH#7k(ViT%,]CmQ*S$,`>&-SKM0lOR='(8f8."?S?@jTpA>g8EV*1JcjA^C*Sn
%K<VkmYhT.%\,3ho)$XsY\HtsJS+3Y,.irG\:=*So#r*qPb'+B0YDZ0`cK_;RTBTbRlf)Z1B]R"rb]4s)1:U]iaA$Pi]GX%":QAU!
%`Y5":U?_RNe(if$Qg&+%k&fSJlI<Y.CsH2=rSUE-q6DD!l,Q?Afo@P_;tj%bo1-Xjn]K(%G-siDF:R.dR+^i-PX26@FLk68&TG4W
%o7ogd/[J9"]q$r$]XNOjYk>*kVJkrgT!$;^mRO%\,s&3AaO;uVh2Ut60q63\@<qhMnYl,$f0mBOn'(kRSe]TASuRcYnnE$E:2eYu
%<X\bV2tQh/=/68t5U3d2#HK?YD3fgbbr<jnZL5%XZTN$^iRcN`bMV%8PN?!H9d@,oo^33KnRA@W_!0!Xj/'52DpEaSD''bRVoM!Y
%>7P8rO"BUe/f`Yr(=7@H8&>m?hRn1NF**l0`TLNVFm8DC47N-NKme+92Y[&cWR]np?>b,a@kIUZRp0FkerpK/VUqO3gf[lGSiX!V
%/j=EU'!2)Mp4Hfe/L4O5XP7mk4"F6j^;'&,Sq1fGcr4e&8.2Nc%!;ijc7H')%Z#V$DX1lC;u;s:q>*3l^Q!8@QPQ4TZde+&)r_+g
%pQjVGS\<fRB34c?jj)due8hkE/C!(9/P@/72^]!*lYat7(WG.srmA&h[kr="`%BenYj+?#s!XU+:RC:k=$(:KHbWt']lWt9g0R\?
%]=7A/M5K6eP##]YjQ!Ca:[,p+/cLsKFe0\A$dO[pBZpBo^ZF]M3Cc:DQg%"[aa#W6m]l_3H?k;#!0%D9k@?#%%51OYro036Ffq"i
%"i_4Y0@Gs$S/lJ3itM8d?FJb"2]&I:lR2>bA$.a"K-Vkth6k]c+PBhHrr*7Q]!Y3rhX9)(\T@J^lZ`D;8X=u^U^OBteW(c3EO2s=
%`*>E+$mB4j\.\DZXnM,aek(d=Sq"9M;BFRWC__1qRHE;do-4&#7>&(8qe!X)m)rJP/q(P*1k"j&!VbR(HMf&P7du;soK]=&j_9IJ
%n'3j89:;YIKfkH&H&V]'gO5.Snp(WP*g:!E:-=hm'oSpYH3E&V-@X`FfUHK?dYFccnXgZ`<:IiTaHO9O0,"'YMeAgrc$U_-D8jl?
%lbuG],K#mY0`-&Y5qdCU8IFlKd6dtX&SM/JO*E<G_%?N4O\'#DWR3Aj?_A9*<F'oEbf)!o_/St@pI'u!-ei\8R3)]hVbTNlo_VkJ
%Tf5\tJq/Foh;#\Bkel@^7,Gs\KV85,]QX?R0VAI#9^mZe(EroT:tcI>mUPC<08uC9IW+6u(BC*'e?>T1aR-]e;5\,/QgRpuaYGmG
%OqK@heOc>SY-3<1GX&rhlTt6cWU.rdYsL3iLX`BAn^?1HY7L6T07->BV;q%=7+<P_*o5[^`<?Uu-j)$"*R25;AUs;K$\rfP:IIY-
%>+>N@PJM\0T`aPio]H-PPX"GLIjhsSnU3D(ddg]j[p:Y'0("%#mZSN4iq?/(_j8UG9;f5-3;7R'1&1.R5GgZ.h>@JFgFK,Rh1s1i
%X>cJ"G2;9Y_a<J$b-Qa6\GNoPol+E+`D>H)!nO0A6fp5lnYinMJF.X%)"//%3S/McZ2H,,[EXhJTg/HD>Di*\!Hn8ufM_5r^MHOt
%E+8#))=1^jHNmJPb;Q!c'WBW-O0'W#meJX(h#41WU\tW`BZMSagD'KGG0m2$3PuP?o05,5T7&3%=:XcJ%+G*sYEh@9=FPDeF.5%2
%kP8'.=F,ts`3s<nn\b[jEUY/V=Sl]f".6E!OK1T%DeeUM\]r_ZM!!rh%^)Vb"JTUV<fg_^E=b7r*egN8[G^Q7J@./:<*EpGZgdV^
%DM8SRX$q8C9(Zi+rUf`Cr@"+;:bTd38;t00L/kX+T4cF9e<X_1n\ag5C&?#L\+KMtA?G1R#8P,-Yo;`)kkW^&:jb7:SNlsmCRu<T
%[hk7Dk:?Y(IBe140gg-5eq**-P^/WN?^?bd8%3eOFD9U"0;$`6Ct3U2cD5;!/?^\/I*-U;194bG5IeD<;X]#+mRARtd+@WTLEAl^
%>(=9aC27P,RsokXd]TqJrbh/SbFLT]&B%qgrT<j5_T"aZ*-_+cSFt?Im:g@Bd_*Mt@H*<7IH8oJ$!pnP2NM1Fq2MjZG_QCbahh-3
%UNu#Fb-*,Lg,rYi[]DO5%]&:Sldi2PIJER`(G3:el[H+>^1XK,qK?FnWVOU+B<)Q?B,.\S[q(QEQKofs[T?Q)VJdIU<e"h's%@e)
%mAlY%o1(Su<K`*a2k#IMT%WcScBi0bL$-\c?UsZun(,Wkl.8)<I7)[t%!cpn8bRbk4Y%7#3lZWpD)uWpYrDV/3O'EkA?oP]#Pi,8
%)AE\D5*Cr6ni]2kA.%K&I%@rj?eloO*hR!#I@>X_j'M=pGjFJVo_Yb6m_sO^/0"EK`QN:qHkO]D,WPHeiSa\KViZCO>8ZI,j4<6A
%q_,_g6tX,\Uus78mo:p=So$VqY%>(J)L&+9dm`D+^(*B2m!ZGAOd:KAC[(`eQ`7+n46f]c1#V!8?,B":"rRPng<0E4&(Q-RL0=:A
%Fui_;^4&V+[;ie,0?g8b=nGcF.pk4/pIJRm!:Mq8?7F,YT5nZrH:=q)D2>l6'u;N=^V.#LjRp4'g.CttZ@;BtRsXg9lS,f]41"eU
%maKKoq:I8XP7!6SQq%YpCEM.M5Qf^%0#Xe,GC"&6">.e(GOOA@=l$]<msX/F:psU:n&uQ=:JFXX<$&)H*8Wh*ZAAK^34Q;91h'KS
%@Wf;j1@lVJ@!UAQ"gDR9Hcoc^hV;hS]2Po^:*8="g?YfobBc*/fD!8_>L(sCVi,_KY.S=)o>\7lKDFg2<u[t!c,/sP/\HT,@+='*
%Fk&8UT,Sk:S_)uJ"7rh*YW:'AU%2dk(h*rG_"j=P$e:Nq`Wqj_Uipf@HM-mYPP0Y+kk\#@bn)J_DNSbg3"gr+8au.^ral)RP5taD
%Wu.;fl/Up.O/,d*hklrNqOZ%Rm:]7\OSng:YB*2"6^A5IM]d8OqYf)VTsh+Ng9KJT0=PkVYOcNS?iB#F-5'CL\bb?o`[G"'_V8mk
%:8<f$LMh!NIc\Ps_X_D=/[l*lS6B[Q73-@2V4@?dI`^&,?QZFuW3l"&?o@f3]Y@+N^mFf+`mNq$Ul'h*``a)Vq5LiN>18\C"K=M4
%'_jg`lQ_YX34H2_1XS+]P^A+:=03:uosF%5G'c*=qg>oB?TQtkG3>""QAZe*k=0[;4o!$Oa6m,NFg9:gXGHZBm6?p!hc:5R_UIXR
%_R\A>A&Xpd_#$R-ZupISXKdj^k^WO5/O$:RSBO)R:S04es02",]2_%7c'9&^**s5.I(Ql[k$YZ^)#SCC]MlmhQfj[s?[`)C-^8iO
%YoEVG>0ksHV!belT(CO":IlQ#D8H2)_kYA@Y;*11.Z'0uS"7F&0<J8`G(16Y?uc%gh:G&Zn%UNJCd-FfFS"c.P%_lXQB)j;.H5U;
%/h(bO%grWS9sP"pK9O5N>\eceqXj4@XVXXTgL&ZgK17Z?6jkWo8%0)PdDK['=1qh_+$B(KO3qSBDt7u#]2nC5qc7i%I=,"=qY4r^
%oSt=27rmk=LK8WG"eK>.r"]M#-SUL'L!&BkfFjaC6&+VgR$nM-F5\]"92E=a2Vhr:XRR[Y98ej,D^Q',X;]Kao##p7^hM&B#Tg`]
%.lfceiYAtX4#d[niMD!+ol`htW'=>7lRO8eVlAjbdf]?9(:<s!Za6o/qs]%bf>ns@Z%#G7fRFJCN6rYRMNfURE.2<:-eZ(XmoJ<\
%hPaABiir/SJ+jktC"$5AXlg\mam(CNX09f@l$X5RB4:&Xl1_^fC]h7T+9_B0rDJV.6s8W=H1_$Po)sY9#(9g\RADu]C"W=9!#HsD
%5mMdIH[bBjZ'g->cX!gGCt`$peP<jhRejpBI",_b=hLBVYV#\Qq'&lj<cH#u>OL'[41XauHFklCq7Rau:rf-pb'W]6Vn'97qBPc/
%QHlVpl:SSbCet60rbQqPc09q7PC*&F])NO2jlfX*#./skinl9>ZhD&4BIpf%RG#5;6TG!!2l`KT(3A*J)g!-.gnED&Zfb*^G%n4i
%3h96s#A;j14FMXZ'?BoqroHcE<<UP+eq^3E.iG-Q;m3(U_h*10Y^1YFdH\;_Qdre'_giS9:g5^D%Td]0doIF^qK'jaT$P*l]<>"6
%$^LO7-Ns5<FE6ZehbU>.q4q!SB:YSu\:8glO:]W_5J/I0,:0SQ/0&a]:$0=k$<6%OiF1`>Y,@#2-i!+!4/@i(XKF/r&uG&=G0B'4
%0gE[D0uOul!CL:JaQT`rHHP5:DJ+-Lp?(j1I=Odg8tA3?EoC9s&*Skd!0NC_W`PM:EOd(%H2[P5BV+:Wjc;Tkrt'g2jc?7W=8nQ'
%M\h;$FDo#$T3PJMhHO,dq#$T1;=ePBnRfP&M!9CK-8BmeRbP"0[lp$Nr4)N>WAXYBO2?h<5.hlGS_M>cUDReeQE^%um-]#]e1^j#
%E2\CR(2#_$Wkm`a%p$bFHLQ?*EOB=+ZHK2X4R,k+6X-/5Z8TbS]pVA`k)TS!8'k^/kKQc4Z2!t`cBl(p#uWCBG3?QuK<=7hS@e[j
%h1p2sg7.eVchSqo?@Li@ajmSe4%G)U\^/:E>^^cs%IL^T0$91o4Igak]Dm1,=5Q5YFno9OaORJ$]Fu';]eC(fVLRA[Ut:([&.[UT
%,o66Te,Sgih!SsagI#=i]_$'3+?t/+kN2o9^V2"FFm?>Sc6=(B9K5of?d&0[G7+q]%nhhemp@X/_V$dTH*99%'+SD7+\lR#XPUEQ
%3nA>.:#$Q2E"dWo*m!jIQM'MR&f6go$cTT7DhWrshsRYM7#gKSQZks'M>,6-+49n"n9X]d2p6$g=$Q5r9PMCsY>2PC)CqXl=taef
%:KL8=mFBFb)uCB7!ZS37M5p#l=IFLX*\OM&r`k$XWaB?KF1[.W"%5A$Io1UaLb.a=1;F[]rX$1=4a=?<5C`U0n@ADpG(SM\"0qYt
%1?`90!&-P'Y55?m7n_sS_HJPkG!HLU]N:_CY>2c5%WbhrAfD';p3G#34JE0%<NkcXY36pf`48IbrW2l6ZSHm=@qWr>LcmF3NR[Eh
%R9qClrAL.G5In20qK;)0LD03WnGLjgP?;*D?=<6F_V4.Ym9oqLl[=A^Z>.o[+umb,Si__Ss/'Lb:Iup`0Rrt@MBFC72`fZ^=kT1!
%kQ&oPdW*uXXcskkUX<E*41u<@?MSgn3df\X[69.05Plb9HW4`iQ2g;m0=]@rH=^^['S1n=9S'7BoOg5q7Kr50Ml-YCO%:N;a?2X<
%f"46&IjKHH>!K0tg=]B!;f<176a"t#1T4KH%"gBFBTh&Z8Y?^h;Pn88XX>9t8EVbNeg93'X<JIT+\rR03%"qNS_LeUr))/2eCrI%
%=sZ+haEnL'38bTeNcoEu<6%7%aYYY1ZW=,L35_H;bXd?>5F!c+`"RarUqB@.IU4^DgiofD=BXt5gDCD1mMgBEgg#rNlY<]TITtKT
%;m#tcUA&imE!+2kW>Dh1aFKY@N)WR3F#($a5]WM2fm^LslrlHM?7I)\$kD]rnn]s#cB8(C'>43'-HTt.7:A%uA+TVq\'[[u&9*",
%jC.[8-=[kSoOt7oMWf6Jl'H'39>0*g(86#VBo>%_<ECY)OA2/(0.pSgCrRf!=tK6%E?'q0fF6kFjMWeC3l[m_L5J&?%[;"n./Gp8
%dtq.c\RPikI34C!gDq08DhI'ZNDi=B&O/Q+b&4FYP/1t3a+]1]liOf*1DI-t9EOIY#@+Pb09"l[mA?aa<8_Eco2WE_FuLT$WpW\Y
%@MRC&X^7sI16LV=gW&a$S.*/bQlZGj1eCKb4loC%O6VoJdj7pKqXc)ZBm6=,L@POfaV:1,K3^eVJ5MEl/iB]-aaBIs=A[kO'Tl3_
%c%VH:8uI`:ZI:GWb9Ue"Yeo4.p#O_LiHd0)m#3eM7Yf7L5CX-6XJ'lbg?j/,f$::/1`F9>7WZ,,br7E6kna]]S@>Z2aBIRGUXC(.
%9"oO"p"$.._4hR;:a*g";!4e6hNEO*#iVmTXkHK\*M&<-04gnUDj69NNKZu.nRl,W$P1jE\JQ(EeE\!Ck7oZ.Bs[U+S>f$@)g:tB
%1Wrj6olMhcCc%3:K(o3'-^`(9l=J7F?7QZnWs@0rl^%1*9"pYQB<*f,WBT/VPVWBr2,k(,m5MToKdtVR-0BYRXf"/c0u`6Hc,P4;
%]jCV>ku.BR$YEem=n/\4:es5IZTU[/S`32mhJ;csSLm0)hcWK9aJ8'@SVLEcl'^&jCZt"qg#nrrJUKP^'NG+mWCn0/,1f@^U.:Zi
%"Y8K,4\?PkUXF=LZB*Sh=,-8SbZmuPm@ml+$&j3`s4ll*@ga7Kp,;Dbrpn>dP'9+<Ye1",SSR0)4M-G:LFFM7lW/_g"F$%5%*h9[
%5Uj,l]18EUrHb_PC\>b4m<M9rqQ.7/KA+B#b$X9%WLb9`N+?o_SOkp<6lLM1l2W3YE;o.2V*r/G`6s*oa]tp0GmPpT`9AF/Wm50M
%i""p@N-"B7WK)X+hG"\uen=QZ2"b+'F"6gtRA93s4goim;JQpP6<M<&;%FNrhfZ8I^DuqJ-!gX2n>`=sGZb]mCB$l<n;5ZqH)6mD
%h`upg-H`i)R,Ku7AMdTBp]'i7;`43=cE,XN)b%\%=LE4m2-CIY%!*&K>$fL>BI2Dm^2c"Xqu(iCOI=G5_hr*PfqWOoG=sOiSis^f
%N8KckmSBoAG8e5U/aL$:_d@_8)X*KFR%L#rIp/0tN319ih%0%"#QOV7%fc"=`*(+tmGb6WY%(^h=,2'=(^(n.E#_B%GeI2n^KrIM
%*&g4IcnV6bm474%qd)K<QV?SDUM65Y2fc4H#sGAL>=6_(.t*:A5D(:9nGLM#k;`67ARK)(1_7(j;<2=]oOt2/8srLZNN9sU+8XY=
%FLWd@.b@*&9r;3+RmPA\RNNP8)rsJj0rkej3fMEpZCt&mTZ&>@ab$qd8"'9G0EcZS-fmc(muDGkf6)TYh[Mn:A;#Z!!Tl^V#OcI:
%4gO^2<5YnQ@taZtc"c.DOS^Y=+"/>k?#:9Zh/!co5/S7+DC"P/BJk8&Acj^WAc3,+Pe\/KahZN:25D7eA"PW-(eBhs!d[m;=C;,j
%'^`?0@R*ZKG]k#7/_1H,X:hV^Oog8q)-V%:@`.eoJ:J)tdH-_]BfGZ)T*\-U#hUh!HVqkfh/c9jN%&L^Ih`i-elT4eZC+2Z]]mAt
%>RS#=@D(p[na%;eb1-WWaqFQI-1HH+!&USfO:c(F5;Ig!0<:AA"EXld+Q$iVe!OSGmJ5pRj)6"djjGLOMEl2Lg'*fSH%K(50Ki.2
%V%riuaX@s%l9H+NLt*C)d'dCd!(e'^?XP+!nHM8`1s#MW[JCJAM5UI`AY@GHBn<E;9i4H3o<YfkcnHcECdc4(;''-:JP$^m7d!Zp
%MC;?B#=p@7jTn+(m/R/`+pVU$V.gc<N^oVYA,%;-%fi30`tP[Nj9&;Pn0Yq$i55hr`9BY.]<&>,^]>SqUuDLYW=.]`SsKn=d$#+W
%"LM]o<7=nEOmI`VKMLV/ePRIMCEbeC,M&BG\a^um%CXCa<%\Zp$+ql[!q""0Zl=*jM!Zp[Lt7DCL7+[tLco/>9^G#["4W$TO@N8l
%!bau>MWjt9'-0#8Z_/qH!ufXc9.(teChc!`Z4eBiK5$?HX5bObFun*7mmh@JQk*&gFolP*eBuC7-B\@2'?s1_g9K,TWg)\hOs?'C
%O82-rPbu6m07BQX'B/Qb>b_C`$ac9dp&]Jq[,GY3qc)?=bk)?*de\Qgf?-'LSf`+fN>2tu^3"(P!^MJkKn/]LE,[#'On!_++p,\"
%`d$]:G&%f"nOdLD:U$_D5L6rQGLQ__d^2&mm']EWH6O4[FF7dHg>f)#&CN8^5D0f,YVV6T+]P)A-hP7Fm=%OWg%Uf+7BSo73_YmI
%gVsVsT7I>3!ca(Gk(]SMgOZiL"t[DRH4%`;]E"K/0>ucXUmNn7-<46?6Bg4A0<9bDBh$]q,2O+[2Ft`q(#1,EM$eW'J%eDY6W;(u
%:%C:7B]tUAWZtP21sQRQ+qG(r:hc[(!(%]+5"V_D'5:(42DLQL^5A`:L#g7&BjZUIXJ?%B8k^Y>.V"j\ZbVC(QIR_Y`05jMMfVoF
%5UCueYW>f6UH&dGEjsHc/uV<`;;u1W@-J;"##PD'/X$Q*.V^:Y+UWH!>[e41iYkL^&Z]/K'6InMc1iK1#$r)i'sSIJ<[[$R[/7Q[
%<kFsZJV^i\G/3Y8Zh2p0G$jJ!:gf>N]6cqW/dinXA&gAjXQBZrg(%2-arsaZ+g"\`"JW]*7fZc)/G0A`'&DW-"ecQ$%`)4/HcS%J
%(4r):Y0]eV]G2&GKE`Thp5]4]TechF'emS(GkjaSQ4=2$Y+3h2G:p6MoLR]<Ni=i\l[\)^E?c_'U"sh,"-`m-`@'Mb=MFcW_Y(]+
%V'Ueb++Y-BpZjUe7I@=<%(ls"7;DroRAoGp]=2&Jn1mrCP+3\s!2a/ESd6oYb)InA%+?mnljHEKT,A">6=cPe@_+9s'1>I<Nb_Ft
%n$%[@/WTOXRleKr_.j#Q_.oNL&2PHL3$JVB501##6krWa1MN?k;?UIF:5gWZq-JI6!c=F6l["t-?tG*qOUIm9]X6md=M8cBBap_r
%&_Pc-#BkV/`t;$L$-1Sl+Zj..:b.B"qlH`X3buUR*b5r(9dK2'M$t3$HW+_,j"rGmBJ_)Gq+=@6Mf(FSm#$XNR!;Z[d;>Wh^&T#&
%,XR\2\o)*_Ya-qER^s2!(O2Y()2PIa0q6_1n#/,9K__*ffiUKid4DsGbXjudKY^1n?:KbYD6"N3`+E;m6q'g<5e_2D("t"oCK>Y9
%Le8[L/ZEs2*aH-XE)Oe=oL22&YZA,QU_=C2C:%SVVC&bA7_k>)9Z;u>Q`V>b0*reR2[<9:@KSTI`plEj?H'!81uL/iAKhC)P"0V/
%dI7EI<`O;E-l5aI-^t[1a<DY;>BD2Y+amn$UOIGGKW4A9R1X5K1atdI/J@L_NN=A0nYsoLJMVt'6a>u&$eq+J^'@OYGsXT/SO+A[
%7klneg>#;I04^kdMi3KbCl&_Y!b;upCoU#S*%_h+K-^pH@>TP;(soCQ_$hnUIt7lU_$`[-^FTF=aTN$gM7#"t5h_eh;P:qC^#Oi$
%&V):N1h#Bu2MjQu34.KDj$Lli;8hLC_\b6f+RL[QGkR9pbl%qjIL"^3*)agZ@e/GeJe*]sCKE3i+HG,4j2"%>M4%*($J;IJKVQK0
%%UJkn6L[1r3hUk>A1LPKO^iE_q?2on@bKbq?m-(nL69h_3WCujKYu5HDGK[6[>S]AKW.N7*>/ljmD(':^Qs4,0_O*R9!,6u9]ub5
%K-i0rSHnJ9>3JZ,Nf"$OJj>Pg1>kL?!7C:aqVI"%)=_.cn5%K6MN2j&RP'=(=X9.B5_:u"C7FqT^/?6LAc#d,L&*VmUtE77&DM6p
%II0AAZAk!$Vj&$O'Co8DZ5nlm,[u-[['UNL-Ej]2QuLspntB)4_&X+5c&ilpcHEO(1rN7m+-I*`>=B+N+ZJr*5gpt)?.XB<'FT+"
%Jh(!rYR;9Z.<^POChQ)XNs=;>M7jit@pYJ\)7I,5pg#H-LW3e_FY_c>:RodB-ee)8AW:i\X0q6rG/5j>M.-P*QmGAp*?5,uMJSI]
%B1H:L1))$1r9R*\JS#pYL5c`^G8@RuUG0>CC3@3<if9__JV^.KOd=r-h\oN-Lt=[aPqP`:Yt\m7+HaHSg^^u+-8T+X/ksb&K6/;M
%cWH9bp`lY,G%AT"!Fp0B"qj3im(_cP+!%!S.LtnhW@9f*FJOmM:a0M7>dF*7(E)akBP-c#M'fcK%=JI$&l#N2cC.a?Mb.U2Yqi?<
%?iq?eQ*JXbjTfGbi+3oQO3Y2d\tj>-:h!BR+pG#eOYK,]&VDF;M+WP=)`S?uo-21mA<#aP(D^C-NlP0Hbnf<GJR7ONcScYVSqB<5
%h:BX[QE+Ne,_2RD@`^r=QY0j6Nc(q(n%_#-,-<,)D/5eMJP:DkcR7KP9_G!7/WM7CEnSMnf)B;j"uI4R[EgtL[=T2^a.ndDNU]Tg
%gCd87o82E/mBei]]Q>82P9=g>Wf]D8#LJ\+m).X"nTlEEYW`JKb)QJPg/q%Zij4/Z^g?P>41ofYn\,(#+SMeE0$=fn8$Ne"<fG[5
%Gf%Ct;7O@3fu)pj*F3O87`:gMqATL5$]F?*H$sr9n_<%;:)_B`H@`@'P[>ZY:Bjq7Fdsmo3bXE/mbfGP.$YYNm:@5>be_8$$-D+[
%?(Rn"F_Hk/'=+2E1-4BsUEdT=C?TPdYD'/!^<M3\,jmn^kQTlX`6bl,>=*QQ/HQ=i.QfEUPg>^@euPm2O!6lfEi`qp*G'@\_J!J6
%T:cMObK(r'+MptrTg)`BJB0P]GnmS$,"?%t/[TTW)^A1"H$jJ9SfGR@c)(OK4dRht6I!Z)JPDu[q$c`'\._I0Fl=<.'5>*OP[Bm3
%4&bsoI7@m<q2P1&InKP8qZbh(S:uWjO@9j'B"17;pX@n#"q%=u9k4t6)1+O1LhI3*Z$PrB;2@@G0f@iX^mb=("\n\'&PajY72F6V
%\Z@cr9*?':\>n$/2HBi03hp[PXC;:Z]#kK;Z_"QXFTg6LUjBiQ4#c-XAE<D9&*O7HpV<IUigQ;[EB`m[_9^$2Vj%pDfY)gkCCt_2
%JhR)j]tSS]&U29QR/nS=n&f48#8a8Y0^-WcA%9E&UY2qR%8Mr,65PSE(2ZH'/p.<;%kOJ70(Ej:3Nd!PPJC2L_ok!fOap.2hseT5
%?Q/O@#iWI0f9%:4#n"s:&U/or0JL-Acn^I0i*%?:R6r55_0H(5Y`?Xm+VJi`^H8X"XXs(Z'9pCteB1$#,Olp-lR[`o?M/2-A.khm
%%M7Z^?oH5:@nl-GGbt@hrDPBd']7>S@@<'h@R;P#N;Q=)Ha!M0RT:g!RuJ(q%7=ac\56#?99fmt3VF5U\?"Wf+p>HN\VH:t=5-R=
%PSM&di_+:;pp&S=Ut[:Aae(jnK7Nu`bO\"&NBlMX^<bN#TcJM6*=8HBGmk8)5a/^$IGih.Ad%ZWo?%Ue31B4D=p'+3:[F'rR"D^%
%&CD2"='?@DM`R"O&CC_Sp\$ua"6KFH3D_[c7d+.bf"`.iljVr))[FmRg&$*6P.6)1kBj#W-kH"oHN_EK+hc6AUk=h'&R'm`ji.V/
%OhIje7H`iYOAL.D:hBn92aoGeG]JVEq15TKQH%<%-7_P"mn"Y64Fj/!4;ooJ<%&I!f>]2T(0m!Xd%uRm)5'gC_2,$VV@:hW=O+^C
%lWAreW)Q$:o!?],3@#s\/S]RIB5I[^%Xa-JK7pk::a.C!.13I/HCrGZKc>(PD1^?#eL(N(GNC=2">"X0>IU"4csE"bE#'I@nVr'R
%C?e2">S+I>-p"#*p=@EX$SBQl6m9LTOa+]!mPuMCgp.XX'9$.oR=QAQ]5jC]"K>i_6[KM%0tZE^,@n<'<Ib0r)F4Ikr)=6=rs\"\
%m4J$C]j>f'(P^/i*O^h>0qW?b)0ik2qU-O#PGEo?6kl.oY0aT>`D+'i]6%o.V5J^gP8,o!j]HOLMqjLCQL8F,TS,$eMdQZ)=U`uh
%Ql#TCRhTrkaD00d0Akr3PL^B0M$7W#5uO@UX+#_B_+_c*DJ'*ZZ:>HlJN^FINf!rI)WmY\KBl$rA\#iYKQ?YM/:kl42#3m0Zg&dE
%du*TV7Gqo$fd759$Z;-N+M<Y5M^?TLT!@Sk@'ZITMHDM7AjSn"cjZ_M#.=hCW+9J=M4ti@]]-_O[R'dAjp-INA7HBF60\/Bf152Z
%M6n2)lQDmLi)A^Y8m&QYFZ1%^4q,)2H(bXUDin][NY-(?T<O?[aEL#S23)<fVJ.D%d9l*B]"Z^%80*aZKCP]2:)5Al&s6AaYn*+^
%BqZc.<!7^?I$Z;6NEm1"D\)gI[$PC&6GtrPrZQAt-(u3(>qEE1@091E7Rp6/NaVN^%GL:&TJ7X12/TO(,X)E9%m-@-Ft!68`^o?'
%(I/,4QAonfA+QgbY*AYUHn)Z\KYtW_r60sSk:\Pf-"*%V0pUJL7)RoYN=BI\paU%L!o">R/rpM<AGHp1X%)$!a;mK%n]e,^_S9>a
%/[3m%^rF9G=^h]mM@ah_/"4]j,s3'b&-ocUXuJXVcs=f-++$4@'i^m?l_(e`^o0XORWKeq@1gl.I4t+OFQg-_G=(*@KnpU&<`=3]
%j+A[ufJArMQo.6hpZ$L=<hWeed0dNYgR'AGe!B!@,9dlB^Tgg["R9MFJX5%;%O6V\#p'sCG4.K+%25O<g/Dc,ONKl42$&_<@*J[p
%.iXN/(.\NqPNK";Y='gk`uf2G4Nb2<h'PNE)Ic'be(9`?-_R1Z3eu(2H.Q+%JV8#2+"7t&m%OhmhZeT6L`qEf_%2J^CtM=u4!gI^
%bu#C"M8<`F/l=r>(iX.4#B20)nSt)P!/9K(PL:$/5@fd?*0%bp0Zm%$lqRL$MZ:rZ&/o?T"Td'Yl0q_)7hDdL1BN&HnsIWF^.:*e
%9<qV;n7)V7K;!:5Xk=LX=uL^M6IBL:P;5\ciA^j%j2OR2M(^.8n-u'4_hpQ/e?g1`M"\Dg7BRlW*@?SFCgc1R+("H5`j*sb``3eF
%/u`JMBNU%'27=5@9br;]<C[>V6ncU7jG<6r]_I6=o2o/cBbMV*0T![`jM'`ilk4CXiBGX;7$m!_JS(g5n%f_$#T_sJ@)g2(O]70h
%=LE`=DW@fDc;]@9GrF;+'\`q\AtTfjJkPlMgf0G-8)NT9ECXQg7-q/EJj53l90DQL<eBU.+f"LK9TmQ:NJ[g1E?AY!`=:312NShB
%qM<b1pQ_D_J5PD!c%#p7Z'N=qj[G`F"U6<WB3QV5C^`?\*?S^BlnR$Y?EC[4Uj1f9deZI>QT;R:>T?u\_hG6uX+$3k%Pkr;?CHZG
%E_/90T9W%uKrZ\2boft^fMmAq:lIqHijh@&n]_ErO[e)+c9rNoh"OlA\?CBT"=ium>is^'m^na\AR+![8uX[gKY'!l"T@ht>6pjV
%:`3MC^5?L8YCpu4WJgNVK@g=YEWj^r9n=8m+6o?$Spgd4c]q'^jp:15j;jkp-b46d?.OFO"Mj:NekRF6>N!EZN+<0<qL*MqTHgVO
%L-`56US/;8>bI),Z&in/,.gCM6Zgi3ZV:HjOWq!VQ'hq7SrFp_9U0&^lgsLq@K_k%A",g:85nHQW21gUq:u/m3]t-`]!rHnE9nA'
%"\MN(JC0Zm">ESD!f/3)e\Ii90X20YFVr+=EQ3dM^$OKNK7oOU`-W2U`!.*(9^-p0DRBHr\%iJ+F<YU#U/TuN*$L>f+f`>#isYBJ
%Mg4s7d>!!k*JqKLKq<EGKquZqCPDN;ZbG*@@[V(@f\1W(SViVF;eQlNO).-s(j+f6i>dMkbY+(&D[3.saUA2sH.EXH)?Y<oa8(`R
%P:4f3VT_&j7gfkQZ!tKZQoK3Gl1iOT"pak1(mn.APW\4uo'm0W6C*462[!!*jVaum^g7K1>XKHUD0'!E<b..7:^em7WVQI/j8-t^
%b>@c"?q'qYr'd%SZ_e#7^l@TprSZ><>8Pt7I,b67&3CYh.Y4Ar16)sDA#)[Hp,[6TS@&'Bgb#6T'"p@pW&4&dkYYDJa._N4YtX)q
%oGe1beM.!aN_Xrf%gJ6G!P://[b&qoK#9X)N$L,UX!]ZbI6jSCJ/9BKiOs@*72l`!45e29;'`up?r`mo4+P)apAAbT1H[GPEt.)J
%f3P#=j07,Ce-G*-?#>%(,>U2P\`fmO<X:aH@kRgfA1Vc&N/8hJ$4^Gif@L3Uj2d6K.Vn8$VT:)d@=+4d8iYlCS6%lT&BGOtU>WO)
%FqYE#'7Yq$97>^c[RY'8msj7OY790h#^ECemN*naA.b&:X!<De"%4>C]nCEu\HQ(AH_6&?<4]/E=(!C0lt9d)kA%OQp:tQUrsf[3
%";R&9$6:G6n8Of4[&2c6B.?DN";;P%=kNbs,An_E+rDEZhk%(Vn@71AUZL?h$m[,p\gT/Gpp#CP7^B8hf"3G&#.#4<-mX[P.>!uN
%77%@acsGeK&,;%92h0M1s7^dU@F(2X(=9E=Z"VqX0uH?M"O=O_%O*`")rkoV[nf`8%C#5N&hHE3F+X2N^nF7D-G^7\,NA#U2"?#6
%^*o$$>=C;.6:$(!6(K(6McgN.p?(qIJL@-Z!UPn#V$DRYReUP?YTpMs&L"Gt"L+6[\TTua5fnk(E:7U3JqO4n]ZIPapoCYI1JmGp
%kCDa:*nEm!0L:dYq]LL)XI6S(TCk+&1;^GPa$FK!@YS!rl3\12gI>eR0t`?<,l@XV0V!@ubuTj-#^+,)O#h<tMbI&3JqX>tNm=%5
%OXhq'!&f>;OciC\5205ILE*dIdbbCtM!H?p^dL*/8jiOXToa;f'2=c!39$=nFbJl=7t&;JRd@]bCpMTHKp<Vfa_\IU8Bbk=8qPH8
%J_c>Xi9YDMn.(pk0sU`V>?F908^NEKPe8uC^h&iMHr2&i_)R/&Q%Bc>(:YiJC$J%8j!G4(bj&^q]_.$V*-^?;#jfph98d=(As8po
%71:A"MsW)h^o@)Gd=Wqbc?3^!An[$6+("O"7J(R+(QP/Cg'42AM9S?m3>.-(4I&;Q.`FIU=!ne25Q[o<d:<N:d6Xu6M]AH^%[kWd
%P&Z]V3V4t\m/^b2=sG1uCJNWJ'e,"/p;E4:>*$c9RDUu+[MfW=dl<Ve0F#&+#UI;S,6(b(1i_HNmgE46c*L+on?m0JI;j?!?M[*R
%`sW(#k@>*`B!gttQ\f5iI@$nU#lnd36KRloXWj]#PcIAN2H.Ubr'ltuH*3.f2-)8\r>?RKbZ:`DAYW)t2Lg>'0Wk]aB/Yp9*SWmp
%/@I^>7BkGt_GNY`<>8RNOtQqMB^^2glFRPMgQH++W6!Wh3#*X"+b3rVIa"$DM-T.]7\L-8\e*I3\m8&OfR5IDegMY_"K!eGSO;oh
%g3sEmkIJ#P'+RuPn$2(j_ruo@//>Y7NhhL;?]bUqRiTL/1`RtS^NH=r5"d/?@au]T"ZUN=OK0KY/8-o29`pV@G%3kVEQ?)aHl1bI
%R70Z=Lom4%Z2r.cZCqAU9[?)1?DPe2\C/t.NG+9ccbtpF)TDJN8>ir]ASrc:(9SojOJ@tqM90+fR0-NNZI#ha8_>.?/L73\?mM+F
%Ms;hS)C4=u[hFjohdnJuQa4]a7^,M^B/`m8<f+r=F]?#c;H8;^"@Wh+'d+>0=[%sXpKM]`s"LgHm5IA9J9(#0</@ig6G`8&`JTpX
%/d]N#7)IB+6GnUXZ-BJ;AaHq>Z-EB76NQ_N`.;I[6nioI#^Au$RU+lf<h(R8EA:kZ8rUKh(*b9Z)?^R*+dZD8>8Zu^OZB:cT*/"Z
%/"o>g`]>=l/dt$mancuIl!%I!&"D\@SF@ir,0iXc0a88-M65<ued,.a/3*l_bf>PLW7XuY5m%*3P-AVAKQSohKZ5qGb2rdlAm+(!
%<ugDT6n$ri/X;_hWh?=FZtoB1Qp?dn?lQpU(c2``k&))*0b!G0g0DRB&s?rDdj)\fMB<[@_0A9<;WKS/[DUC++D1r!E-qgWLl[h)
%aQ?"a`MP%uOR8,@#(e;0?8jOu)\of(mBrbQ3aV85`j*M2!mWV]3(n8=4P'!Ed6'(Rf6FI3-O3LqerLX*(6n9A3!t8\k4'HBmQG[I
%`0G2@mp(QdPe<o1aZ9OVD36_o#WYQb$SeU+`XYE_LW(cU<rg;:7tHN'Krkl8!)p/W4g9LZXFnM@jQq20h3f>9VF"3dgeR[8l)bN@
%@7*SI2kCgNkePo>&I%84Qo;Z#`Q73f&O,TR7,EU2S2tca4O9=i$R!%U!eDX=&j84d$3JhaMRi2$h+M2&Q4cQdTosk8FkTrB)i;oP
%W5SaSR'c35db;[si`<+&H\dfMRm`:P@XnP5l[]ZK5o?@G0"6AL;.F84_GE9+B&Zh&Y'XbD28jXIG3_7q.<;N(/[:$k@?JL_(l9S0
%!>=:pnQsR(UnF)Lf&X('5f\64fEsA9i9%Wf0WoOcH]iV].7"hg9-bF8KNL4l"HeMRFlEd/.GMl8"h\`T!S>s;k-1G;RNS]$^m5;'
%N!IC3gCaRZNm%<mgk`86,Vjb(U7mFa#Re%:i4tKZ(77rMo*&d&<6*N_`.,a+m6%OR"2uLhK1:U=3H2.7-!0KRKitd!0SAS@mN`?>
%`L)2qe3sfW9-ETBc\lp;&m3+8^fl!cbBl#pAYg&em<o0TCshpp?I0`c3]act+S?cg#J(MjFQ-I63$r+^X=_h,)3lu^pguj4WA>lG
%AEegg#`,i$>_>WD1PdIQ'[ikQKjth,VM7nWf1hIPo[m%WbCn,%a-NI[E%ep87iI[+#8S6b]ZC`\+ASXHZ5(48OD9d9B2@MTW/ne)
%O2QTr\6FL,Ia2#VIo0epV"_+t5l2G9qXU@GZPdA:RUfMB$:X=>g7MT$#f6a37O1$6LS8"LU<VY3#r,[4dc_j^O;e;6!fm)G6gPW-
%c[-eT(GFQKS.gc*57cG^ErjmHdbM^5QDc1j9&U@u#+\UX(UDbWGQfoCcLlgU#]#o&aD`gF;MPh;`Oc.P1/oFLH8#o+7G.kh>AiA7
%>(4cLk@!mK)PXsD/2QA>Y^io_B`SK3@*^3uj2nt<)@c-l-d+"JNOEBY^dX6V,A**Dj%J_ND@Ad70OA`3V&QVnQ`)BO_)^#8U?'@N
%+VsE#)FC6n,G3><,RG['':=L_bA4%>`+%ggD&G$J0o6(l0nm:FV%Md%M/eR*?Uk`ScqX*`(.ZEn4D6HSIQ)dQ(`:8GS=#.t9C&rt
%8k.V&*1MghF176Lec?:\&9cR@<rnKS*S8TXT#QQuW$4\[/sa:<#e'h$Wn:1'bJ#tp+!f3tdk*SVh8$uOL"oBYjhgCn5\k`h%jIi[
%i`jG2lkdp5_L)GZcbYd_#6l),*NUc3l&u*B0)M$.jf<f?JK^b?*PEHZW*gI8GVim;69^Y_SnA'4fdk-r4")Jo%W[S<"FMmk=dt'^
%56mO_n`2FF?8``TY"K^g)^EEIcEkJZTJ-sV,EaujOc&MLKs&A[K[Ia>WR*Cs]2>6M[LareLBG(M(ABFL'eF1RL`GKqhC'QZ;UJ`]
%:)`I8&-jm?/9=]or<jG=M#SFV+C4,?>hliq;@<qu%0rMN'1j==)lSN:/g;=?9'h]68Abu.-K@["?6=)@)MH]'9aG2ri'oqLiaaoM
%-dngd\rrH]d5[c\J2[OG]6AEUqsackY=RKZ$kCK<'O`g\'Jom2\qeI/Tbuk7iTt;TCi)pX7b@^,i.?A5hdPVuh*I&a'(IGJ-NWXN
%(.:K:d,f4miDF'l#$XAiaFn5[ciuqU\V(39VKK`Ye66bJl8";LXl9X-^:9u(\qX!D.M]N]1t3]XK^UV1GR,.u;X0"$HQ:nhiPUQ]
%+c&Y,;BWlD#D_P(Vf7VH(C864fSotGJL8PK$5ks3g&_BH\F_Q#fZ<^[N+X"W(\20]A74IJ"d:ZK4qN6qc678R`&#7m<3hHZ0ioNo
%.Mt`r@c5BJ/\Z"sJe\uU/`L^X"X23dSP'T)5!i!)nYm$aG&tfkFAk@u)G/`4Mq&u;j(UcU85-m;/2JKG5k+mW5DUEBJeS2TUJM1(
%Fe_);8g+QOf"?Qrb"Da1`!882rW'j!p5XpfHj+BYr5E^`m/db(=MB&X91"I,3K=P\L5;'On9cJoJn&jR@eL_\8>ZVp=)iLoW1"4I
%L=fQq'HeqDFU.bFNK2+4a_KJ\Jgqb7N]WFRp:QI:E1&qp)E/4%>X@hclf<'q*)iXJ':[!UR.DKZ=mJBp!KL/ZE%ZZ1LUbG&&b5RE
%?]fr#Tj^p+iTRRBc@sgDHl*DP2A=p!6\1'V:l>P:_&ij^&VZ@t=C<RDXY<T,6\1LR:X)8+aD):b1KrZGPQ6`pJNWR`('POq"alfc
%3ibANbXr^XaD;(i1>i6O7lrIbjR<oSBgo*oGaut'JiFJ#WIMX,*QYnoh86T,lnXeW2h[ZK3$9oHcd=EI.fqi'$EYqZ*3$;u?H,@"
%?GIlU26.Ob+OVBE2)@'p]F'`BaG;.R,TboQT5UdH-ZB;9S-JfnYQ3O?5+:^H%Ol6*3fJ;9Y/9osTud_(s&8%hft/T36!h3p2M,Ur
%^`iYVF91!57#;4TAnM]*.#E[H#:erB1Z!N);cK0YiFURrUCp+hB]Gu_@uKds-4&7k]fEupL>r7n0SUI6a1`G/@U#4ri@JOg+8/\9
%m'>[4IO;nTnCTJ4E965fee\Ngm=_Cq6s5/LHtHDMlGKDKR%,ijBcmbV<SnK\p_khRBF0=/s,;m-/*4!&hY#j_F\je+7K4@;5"R-l
%f_u:eDSf6eER>XfnVA/n(GX>Kr5_c:/9naP#:f)VORZ1"Q1U+rd`^h=0a_>,bfVnt*QTLf>s9*X_cq_YZ?jad36/fU/&Qq60h2t)
%"s5\koT@pU,P7o(qLU^c5)a)6/EJiO@2![+E;9?VKS:WE[$cC.!k0Q^'sS\E_p'^>#_\8VVZ^Gj=T-.t:j3m='V0Ur:qE/ta*Smo
%iB^_A&jbU_%_1c]pueg;o2qCh_pn"-&-I!2FahNq21,`jZ9E#f"/#Y.DO<1c]]\4>OT-RG_nZrG<V&?S17T)N)]\h3`@DGLGPiT^
%Z0'a@>3nYP9RNpaT_sJfcL4d?7Bf8ne1Se66UgKQa1;AQ$R2Yp#_n(p:H$6\7SLpqa8p&H4Rb!XFr#]M#qIV<+"d]7HqKP0Eap?'
%X(XL:X7`';YR_4]VdtcN&iG1m0(%?1fhO#N#'!>*Kb*]`-0?VrSq0=WZ(6hYUWD`(-mUN0rjhqCTk.d-H`=p"c>]&2'oi'CKOu$T
%Vo*dsFBFr4_1;+P;F)P^h[q2h9.;G&-LC,VfSgk(["/Dt7V==+k]9$d_gX5)01:1Q:XB$%D@U!YJjphPf&\#[>iHlM"4m`ALM*_l
%c@qojC_bCh&bg#N&)$Q[)B\LU26iu;#s)s6M[POZ[!5+Er#r`n"QaVJ$Y(/.0nrt=p&5pgBe<rp%bK>u72"%u@=+0nij-2DEUY8X
%f^[%38)/CK.u48-ntGV.)sogqZ!nG"`)!U+%^[)hGk&%(r#1IcZBL.r@3W_K=Ke(njlp;7,dVj+>D1]X!1HY*?R:W@"20]D@1L!7
%R7%Cic69/%?gRW`)+.bRU)nC74ALne:E$[1X3AU2CIq4a+OJ\`Kpr+Ehsai8318,l6\r56WIdNHLB:^KXC!I9nf\,n>,2-;]/4Wr
%EHO/)5@!;AbihljU_e?O6L0`d/MdSG+&SAa>&Y]GVcbZ\O1Nd!LuR/k/l%7$NKIbrEH$i'2=MU&)MZ#!$iD54*\jI"GsGX\jHI)P
%nUk)IQ8\ks*D*7`VrYX8_j0WI3QTCknAVJ[.`m`kPuj#NfEm4sM!r4=((R2''<!KJB_WQK!i1Z!TUlU<Gkjla+s\ZQ;\>G.-58NK
%dCF5@6!siFLi,DS-huWu5k5I8a7o!3pJcN$I$j?GCI!kf02_h^W.SkM4r+KK?6lU?Tp@Wt"j1^:VtCW=NjB'_%Q$!a^'`jUS<_4b
%,Z:epnRedi/576HjdP%2Vj)fKHm:(EUQ6)2pi67(+1<IX@mfRFCC*a/`[UCSJkgp[pkg\5iC:Efeh:_I3'P%ef8)L,B?6E`q810b
%X%F@IA0C[&&qU%-H\$>-A+*L0JfE]#`3JH]'cr'pP;p(&)Hphp#kSqo!j:$m9JEurTfA0(LD03*pu??AK(=n=.&ceqX!iN.7mcJP
%WJlFF<9P*g&\9i$Xn9H4rK,Lr3L_n5C8LW_j[c?>T]K.X3leL3[[/*+r*7q-c6'@u/deUhm3-gj:m`P^SH).[FCd)gjmWU$YX%Lo
%J/9Z!7YQ'DE$62bTH#mW.p!^e.?!2Yrk)(7$:NN^6&R8%)2iuT:h*3(@Cke@o&SU<5_J_r+YucJ*-2\T^e53G."Mt7PTX:>.bO7f
%.q0cN&T^7n4>R]UOuLD_O@WS[_@Kpqpd#o,A2K!2*e$$Rb6n`TjHVZ;e/SStaT@WY4$JmmJ]+d$ngN1t6G*mr%(p4FNXCY8]$_7C
%HD&]:4l/_E"8MF>13)*Jd!EE&9*&`Dr#G.=g$?SQ[ZEQU7nr9$JpPO2%^q*F@;qY1^Wt'7_ODF1,R!WFQB_0JN4;WmSruV[is"FZ
%2OsQBpt^:ZCb$r>nfWN/lnt-U&@1C2L^<,MLp9[iF9K2W]>4YUTt#,g107X98p#Xb(&P+144_,0M/uhQ>"3Zh6McdVau@30%;1A=
%+Zg<R:rsXenJpjINjp(NU7hmE81qX]qF:ETc7Tl\!`uj/a+>Dor"MsiWa;D=D^Odjn/>&dP@%-]5b=Pq\AfFr>W*S`MZPf+7]@_j
%*TLm/M@1X4m$X.&*>lqndgQk4I)::N[LH+MZ,!P%ZIJ9Zf>Zi2KMgdS&RfpMMSse;ZJ5_.a*IVWn";Sj$H"SpOV#9DX<dlV#rSdY
%I:A***$]>-3;J6n7#>?nmf8;pi\$D@&3gb]p4,Rq.pMrXm3u((@;lN?1@klr`:!-j*OU\.GPSC8JuD,C6E+rVH7:><SOcs52@u/X
%f85A0l@F$\\"#e,Rn.'gUrBt6ZLMS:"r/*)@#\DehV/2$&]dO4d>brI'I:<DDBYMb>]YOO#oBiR=fAXCK?*?EB;B-uCEJ2(9ep53
%ilCTk2^9'rPSc0ik?6[)6=CF_iV[M23_k)kMde?>7]eWnD?K>j56iP??OLSiS`_b'>]#D.#0+C>UZT]Je<8\-A]&*T-k=3GOPG!M
%d4ldP934k3]P!@<7#lrWnJ+k'Z%P`E@3FkmL8+`.*_&d1ZA'n8A)2[[2r'/YlY2a=&]]o1+)kp+3R8$5m3R,Xa+[s,o11H@hSV8Y
%lnM?ib9a]NPhKZ")2'kd.2(<7G/5-3)M<U6*,X^@4L+.Ye?*6D@:\WFAI/A*M/,72/kU8ko9pna'dqRg0F@Pl4CT].Kds!m.r!qr
%5ctHJ"c+`Qb<uh#^UV`_KIuCBKN>(+`s?6LSY\m,WE>I>7Y4!0j2%3UR/?]\PTs7/I)_TWmu[0[Mmd"r/r)4X&?Z%@&4S9&W4p5)
%mL>+Ck'1'SLWci7gZ[ZDM!Q,PfMoY_?7>58emHdu>V">:PJfeRm>!Y.KjX];6Pf:</:rqJ>dp1fWkn5K10i513*$om^orHDqM$q;
%\m-Z<(I_N<G2K!An-',_A;=Zf'P\PB%AjU#O'Hj0E=:CrYS=+"*le%0,(EaT%IK]:`uHn?gJ'RU<js<Tdi+g4ok(7rZ[1QgOQ`i_
%c'R$"g9^*c&NDh'RMC5$6S.t339'9W0r!m#:u;2nong>s=poRR'Y$ZO';BLRl?]ub#X!"P^/`CMCiM0ST1G/!7C`a2leB.dUPg^+
%IU`O&%./0^GXA3:oD'Gah.K4D#7!_U'H[abnR-X@A'(%;H4oqed5cD>fs96t]KVY,b.cd;r\l4U^qmQefkhP14chu?^U]V*MMi70
%b8T&K/+iU"O%MN+&P&4A[RuV,`KL]lpHlo(=olL+8tldu$k\A60HL,lbe6Z1--MUE2]':0O:qX?Tl]JeLGU35__[H@83ITA![M`(
%8:fuBJH&qaT.Q,*be<=b.ducZK>oK-Hgcp_n8MaXQ7XnlH7'ncX]rS.:1C+OBgs]c``P^+Q\>8gKNO$CB-gc:-cS$""W)[9@fFLX
%g[Kp]=<tN=Z&5pO'u*I/NF][_@D:=%</+8jbK65G&U?FtNQ$kA1G,INg$DR7PHR62'W.to4Yl>0Z(OR.7%7^Tpc@bCR9oH'>gR7V
%SmN_">'Yin`+o=S2?'>qg?mp1$Io^f[#T0gO"grHgjl29(uDYW33c!*UDA&U?gIcLaoS=p$#e?sI!;n`r'a;3G\@SQW$:>J2>E)U
%CIfMc`:[Vn1<cTrlYl;Vf9Y*/X%2#!e'H>smS_Ka-Gi:iirP=V+<CfZJ(`EU:@2m[$rXMr#$'+r!n-4;N<`mtJKD"WCRGn_a#;Nb
%*F%F,p&Q'o.Fpg%ZPE9W8g+Y7C6'Y,`MGG,_-F\F/ho4OI`>"`@E%CGKH6VmMLtL+LS=g`QsC/1SuBI=DFT5IEa,fNAWPnn1-rgJ
%4t3MuF1>,"'(UFQiU+j:N]K]dOMaB2:(^faXP#Rr_FrL]OG@<kR%,1WL.9/k=@.\K3?kT.-5^;d?eXU62-$X)Y+h+&"d;j?O-m6:
%@qq/PheFI7>&IhPnt)gUpR*>dOkF7!d`*]a+j\+C=C_J%p3rgE]ZkLeqS_:&`?80?!/,A!E`?hPW$R0igu@g,SfG%T[c%$^C_[sC
%29aO")[!@-S/Edj[7=XnoijKF'm+!RD5pm"6-3QlH9!h@A`u`e)(gH(QG%IS.&<2;7^2T>3*k';1XeXi?t6/eg4Be:=\6j^Idrc:
%']N#7M(Nn0HmkTV^@2\&$mf3/a=;1fg=qA^@*+L&V*VHus!DEVUQl,4EZC6EKuKIiHZ2).U2IQ9ft7CD0%=Mq`g&>.&9O%:JYP,a
%G3raX$-``Wc"(Un&"lki:2`/<?TZr8XHNb#'C28M!KjI<FD1J@5jsn(W.KCh*EM`2i%r\?hHK[Rm(gZJ!+)Fr"iadiPVC#tDs5Y/
%Tt-Kf(u'^WV;/6Mfj@s+@DidMK%$dF&E.rGL]r?+Z,$j3Qsa8FUlP]B5+7M>>&Yl;&OM_nV<t<pViDLYH\GHL:dR&V[\n:6`L\"f
%`-Q)n'eOPO)Pom/J<Ib+,aLhNiq@s$kPGM\6iXs0!EK,N+ue?+25;,9c[[>3E0HnXML%pjH1DER)X#+,8PKY6.Y\*&<KU?`98GY+
%R0??7"`bnKLJ4!l(kmu#\hArb'JrsHRcRmbqTu@p?klQBF-F=;$.Dq2%e&lWE@lWBIK.i08N3Z6BN3A$-bEXUHpZoAPNC?Ac?^K3
%,*u#k),1?qdVJ=ZdJB&plKWHCLQoCYDOa$a`2:JT#_`Ht=;pLSBtGBK<\I6(>d20]U=he-F31%\F,2T0(n4,B*j5<<TROH!q6)dt
%C2Qp#-7:@Xg/Nu^,JSmWFWd.\Ke-<[<H`AJ9lh:8&6)de*=H/2ocf_e#kJ`+23HT$k<E'\+u(^kh1a[\WX:b;ZSITYn[-RLarWBJ
%>s!o2Tf6mA`5DB%'mC9*&T`&>T\T&h[EJ8TMZN3U>tiKbHH,7uT(0"!51"*b]g8Z4rP<kU;PAXOfmJo:/[f6UE*)l--Q[:3oi)m6
%0KDi=<,R#c#>`$h`WGsBmBZSb'>Q#N<--&g2Cf;\a<BUB7=0g*iHr)nX'URcmR>)n&C)llLas_Ns'reUl@3Z)Dk>#uf!?XO6IZ9R
%YNrY3-<C/lojjAkM<IX%,MP=G\n;1U>b@ENN%jTin^IA=H7oeqGjfKV,:VkjPLK>'WuX<I;-c\6aj=Y&i/YObJZ(fhn4NV^!=niN
%%l]>.g]b0rc$[+q'i8>ip4(=CMTZ?s0Tj"S^ffYs:slR9%FX:4Y>Z!skX#>U[oX/m-TlhELdHP_$EZKlfA5Vp`C>W-SmtJdISZ-G
%XIskCI<P3]Y">31h%jSdU79>s;(G`U:=idMi<2,5YIY)5$gX2";V\9qM:Mm8363/n911&"3D1HWSV.%W5TMR%"OI''PEB9\WQe`3
%3M,-]9d*[4_hT['0nQ,GqU;W85?!#u6SoCgZ=S%&>q]/D>Tka?U%JdCb<I%[l3RGP<TUf]o-&1/r8eb)1!/Kj9Y$u;CoXt5Q.VbV
%?;iREF\q=]I"*%u1CZ0T@/Ot,GNgQ,:DU2AYIbl><9=>Qj^[7l4o4Rd>+s9#Er7j4r,>_M/$)fc_g+H_>!<(_"#a:^,7$I2=j<sM
%h*J\M^b&$XAl$?A/H2`Wb^@eO")_&=W@WcfX`7@@#M6P4Fr)0C!eWDb*Rs40B0a3=ll5ltm8?t&+U9>'7k]?#kB-4d(6p[Q,GDN7
%Pp^65:I]e&1TCh_q+69f"u^ncCOUQ=WI)3'[6AR][XcMREHSQ8_O:tk&(fN.9W/M24X\:blo%[W,PKAnn[DfjJ*rjlWZN=k4f_Qb
%,ti2+0B+/XjWK%X.0pr-g#.epZh0Be&kKM'Hn,'3.oaIj3g5:KK*;/*i<I=Z21tj,gkRBp8W@>fSte(M4mD:C8`kY[Fb+>GE/UXp
%WflWV.ZtnemSKojWN,mVrB5T.-F$W8)QD'ZUM&`-(=[]V%RMe4j&mQ.f/5"C#s_/"RQqT$j$:Vo%n/\4n<r3$,tbt-JdI+k#rj`,
%X(!WhTdio8V^QYh)k)qR;ff%\Pmn[L)cl3II*to67^"G#(Psse##`@l[3Qj^l'kVK]kgs4GPfc:qgdMrm9);:gegul94g+[EH<GT
%$%Q=#-7?[Y4/L2;$HM<Cb:hI[f)N,iQi`nUIDB@Wrmm73]\(IWUE['o*aNt306(IO&mT[<do^g2=4C`<$e8s:S"Iqo-i,<rBQ.F8
%jpdbikl"6O+Xh]RMFpj*@NN1J]O*=CDqC#PGI0k)?J!K*5ZL3LoA-rW"dmBfMmb'@]JcB"/LT.=(C`2T4oO_jOh)X/WW'Q7ej7T!
%1.2aI-gi>93$rrV[W]q9gmBS6V6FXi;$*sP1O?R3O#gs-i_l.B)e!_k5BSe0+!NO-9GsHOg(:Yefq-U_`?q.=h8]^@-_7NB"sdrc
%_dAS%)5Pep.=kuR,3ffQ;d\+c*tX2IfW_\XA29UC85!F+Zn`5i&aN=`#PJ(h%Ae!Bir3n$ShDsSCU&cCYcW_u:j-HI=CKS%m`Vc5
%\*Bbu*AV"TM,Ij-<>iE/@YnpJXf%eR%LN;"T;K%:CVr3^;VI9gRS1_m!Q5`F[n+[[YjOZCH"UfPj\GI=odd<JI=G1f5:519ejq_,
%>#apG'9Rl)=l+ku@45OD71pJ+-m^&^d:1mO*'qHN)FK[Le[l$>C^@IRKW51h:R%nR8l<_l@ppp.02uM&(GELnm,\ti7R(0h2mRQ3
%<\5;,K8(>Q(oat<E'k`?%dD)397f.PbFKR_5IRFaq`[=[&=#hXq.eVo/se2TFet&1qD2Ckbt\YTD]8.%V=.B/'L?t@a`!)odZISO
%qC<$pi[q(M+.=>%]Ko<#XFKEaln-$l';9J\7')`1Hh(^L;tgs"PhZ_FY/V+QJ(bTmnZ!m--HR>6`1^D_*<Fj3aVV>g:#[d36:W4(
%>(a&X[T'keW21LFm>e(jLff6OK+IjeQBZ'k:_K/S*$I$hMFeZ:/*I[AMg,m),R3,^eq^(b"*S;s/D[8;cGO0bAPLcp$#,gLPZT[Y
%<W$NA<,OJSM.K*9Krq=$(s,O!j&2FkHb_rf]'S(I./<YKhVsFX<NOSdf@==gE"*+FO)9d=5asq5goen$pJ=4UJJ8(N*Q>Ri8nmE=
%CatYflRIMu9i"=k1cl6a!I#,WFnE2UeW"gjB\P>Me[RW?S,IcmQ%?O,'4o-lP%7._/I\J/&s4o\;0B]KE3n-bjjiE9ZPp-k!+EZM
%$W`h"LSqa`[<mC!nIEX@3!UBu8&cX0Xdi(!S(]!h_s&MR6F9-jY==>s%>8JJ%T0N)'5Z)+kmnAid?;*:GO=PK8QU9E>7\l-cre-t
%d+%_T]0*PGb,ojo\?F<O;hWht2OXN;CS,(om9TO"om5&_aE.MmU5<%5)6$P'87]DTl`<g\,;kN"X]M5*CuM"cO[-(n4UqlAIc]H%
%-5aT?QI3U/GW=]WBbr6tEjU[N@]s39.\3MLf"O&n&u%@a:[&q?&IB$Yi;HA5<aMC77#iVWa6Ik#=ardEPI/src#kmB%Y)B79a@/V
%U.K9&r"5&ki57<1:re_&4Z[$W'^nKM^=M!+bi:H95cYMV&"OH>YEYJ_pOK?0l"2]DND+#UW*!oS,1];33ETH_DRt;rn`ml[58I8i
%Y2fQ&PG)d'NO`E:BZt1"Kt&t.3OrG;qZ;JTY;G6GRc*]\o35MLkEB+L+Vc]hRTI)i)_$4WjpC8?J54i1)@Dh27b9\%Le)up\tRc;
%!d"]!V05qiD%am^Um?In^*#udC)[_+P@/ctkif6cMu"oDKT]D)7*T))n]MJ1J.pH;T0aSY]u,#<7dVLiQCl,]Nqd"ncXQ0>r;0ed
%K0qdnE0.rloiP5X<cL+D?=&PUWZ-MJ^*sOf68kb\ip8`@-=h&b4B5WRlb^:kd>Z8p]V$t2rBYuQ]nC2+5:*iK27lgD>u3R4Z$qG<
%Z:gVYoq1?9eY%&&CWS\DqPOjp>Nt(2*\477Mng`obbbM@J0"ch*:(acTo(\$eUfi9<_FAYBM.]#(iYaOhBjr2c)XsESa)+]?aEq5
%aa:0#AOe0FQtft1fBDJVhr8rH?L#R+`A^f)ZOk2"em/"@)#C2SHX!]MjZQV+Bf<;Uc7.LPCTh7$9%*le#j+6kF^`IGNc&PW;9cI6
%l*W,ZXbYB[jVIl)K@L#8,':YI7t(c?&nU,$Z:IaMHW*83>30:KH7b&'V'KU7(4NW#=B)?@B;XD3rWb.FG(ZIEkNY3X&UeUq>"jOT
%VFT/&2/N(4q*2W^d_;!bCCP,Xan/=3)ZT.*";nS[#`J7]omA$[Lf`^a0s/JfrT4_-0Bl*dIs>+i]L*PuQQfnJfJ7_0o/V]M$^,jf
%8Fu]Qc!kq?k8<i^1"U.V0XeTFkU*b2"J7*uc*DZ*fDaVe^RD&O9C<q\m60L>D5-IsaNT*FB$pQeWH8G/#p_lJW!Z@b@McnIE6gRm
%G7jnHYq@#Iem.aRaA+?H/_H']jmaD,GrYd#,=r?QS(am*J1jnG9Vg(R3$Jbi\RrF`R9*4nO9@+l/Wu[(,`4h1b1*INMGh/']r9U@
%J>\U9JC-6O2Q6m8T[SK;ol/jpq"]K!$ZQN]ac-UBpZ*^0<=PN.#@-JoFA1Ta4ZuV/Gj#FEO]RNrM>auZf-pe19IM!$n:Tp'g*p\L
%0A#2r'5Z:N'l3-58n[M8\XNreM'4FUs*(gVW["cqKjGEhT<HptOn\ERHH3Wts&1AZA8)eEc^.4EIh;(d2IX=7d7XP)r[bTi.eEXl
%n@;b;$1)P]So!#2dJ9YOP+iUUq6[\#!$CC4Br)AO-:j;^4sP"cXI<#Ahtrf]-"t40Cm9X-.aT%[WK?NWL=3Ac<H=h(;5C0Dkc#kp
%*M<Qh3s0XjgtXjG.iCBRYMkP#W<pR%ZWT.pbCj:B_.BW8@o05]M[c?6$;u;sl36ik(AHad-+S9H0c=0LbA`)g7MK0eUJHi)+%-I[
%GmhSnrqR`W80M9C96COprNuq0_Wc>@Zck-di!9l0W5$u]nk*DV7^<CdDf>."ofmc0Xp!s,F=8C>/VE?X$o!"I3pJ?)C"!M<#Yn&H
%ONj.#eT%TN&llE5e<=lCfWLDuj"PhF?)0%[2bYaQ)82[!UJuiq+4<3r4p8G#P]]kIVMA/J2<>l61I<s]#jS.G;ITAUU7Z\C`=G*I
%j>g#bRjnp$6l#Z7pGZh%FhLX^=ITBFb-"0Hq%Sf>D;(V=.D:'U$RhcRD946/h<TngF0!]j2c/lYJV!6Zj&p1i#u($in$jbIFp`gM
%-=PJKlA3@FAssSp>!]R'1.=-eq;M&HhTjVrp'$`;=6,PloA]Y@p3=96KC2XQ:1;X@mrFqUVs9MPF\U@hQ&&,R_/m1qIma<oq=QNe
%BHm[ZXD'EB==uaR5R_JI<VKE7K3*dsdPc3L[;,i\%/Bm?4`8YG_o]<G]t_+=?+;C7!k?EHdcD"+QM67jA#K]GTJdctK?B<S@@_hc
%]I8="dN)AY&L=&""i?+4iVK/"BM^(X0n$CJ@4);":CX>[<Q4ordKNCq.P+9P_M"3hFRkjo/tC'[=eM(bYFacaFaEY/GDdQVH@IY8
%)T@\&%eYdIX'l3j2k8JW9fV"[Z[B`ZKqV^[f%.@32es=o6og,s;01LV,&2jLe6Dh`ib23(_./%09R2V^Ap97@'Em7jda]RZ]Bp<i
%1,)SiGA&RL)KOPhZVqRp^V@\$Zi*7VSp=Ak9L1Y$*_JMegX^,j\`>d)DHanTB:Lnlg&6=CaV\BT'!RK-dd"+$CH#[JVB"@>lJD@<
%o%YuOY/pa>*C_AfcomKNmP27f`eueD/`IJM<P+^)kYYc<]Z1P2#`98$pH)q?blO>lW.(p=h7MNQ-"ROj!#=bJ^]M':,Fnn+Dhr^]
%O%h;oQ4OCE7M)/Dhqn:EeaoJ[,$N<#X4Ne?L?JgsrB^)tWa:^,Q7cq?81cRQL]f78";RfI4<jB_$GZ#b/cOS%o`Oc3G"@-5N*.Wi
%L'S76P,[MS*!M0FVPu?X;brBX/,HJjp09>.!AqH<,3(-:ho.=[VAC(8p5VjXGKUFd\#Md^#W4VJR-8kM<gmOgD,!ps=q,lqKnrq^
%&?0Q,08_7KG`*ZUIYX*<knn&d#F>#7Z9tWY9+9=`&s;PAY\r#fdreHqNm_jN,L@BUkJV842U@Quo0Us\'d"m@+]LGgPFm6aMO4VU
%2a'Ju!AhM1.q8!"Wi1albAn:hIAG/EZCL(k\#')pG^gesIB&8%kG=kM4FK7/<og/W/c\&k8mn3mLfa%XEQb9@/Bl<%d.Uo[r`;Tf
%l9qV/LV&SE&YGa[`\T@=2L,c0B5!=i0+M\Ckf48=a+5p:7g>,cYUXVY:oLBadM9=-4Po+R:>s,RFEtbQd7q]j%hi"s5Z5Y^bkB.%
%i,P/CJ-da<Cj,hA"Ig,J)jGW:BUCZc01g.u`#4C[RVmo4fIi;(#R7"==^s69lHmQ.]LRu+Kt',7RNjsenADrh/s9\iJ@bH!LEAR.
%ht!9:\R52a>0<K:ag\X-.mdIZd0SfNkm<;DKD(SG-J2hG@_)Wh_?^b!clG5D7#3Tr#S$2OV-!"jTkDQnnX'k[H6ir[5Uo:_%B\&-
%/C(J;f#NkCP[3%;dGn[[`eLuEP#fLZI#MD#/P%6P$J!!:#P?/I"4`o99\IU,bV[!"T]o5l[;!,eP'1]HP4[*Q8OG`dkh]M?`KrI3
%6*"oRYgG@ee<P1e*,@Vp.?)CY?ghUiHRiu>!F,Ej,Q!Ae-TqLjH8;i;9?!N@<sc1A2m(!j=KRn@i.%N.TKCp%Ro'QuKN/;bOk5d2
%Ssn]lH]Y`O.n?Tk6nB4reJ4:YE(*Uh4uOmX6fDk;VYtE*=sn]P;0oY#\k&ZJOrBQq-dnR>D`,(2\mqiH_+T8r%Q@N]Q@e#BGpXCo
%Fn7P08*Z<oX.;^5\NrqBbA>2tN[r,2bGg<5/3KO"O@eSA&iQj9&l6-?<:k3Q%?cp<s'?1A/)l*\(H5$UB6\QKD/lFiPNo="J@IXM
%D3engna3:]L`*$W,E`[J2.DJup7&uB[bdd7#PdQ1!3^X,*oH;B-\srb687j(Ki=CYL`pi=2hU%RnKXB4eC4BJX!oGQhuUME4@o.h
%d^U6>!*L&96s[eJDJ%krDHQ*]M(pPamKn^<]IlNLYN&CtFFfGqh1aRBP(@K.h6)r_\Aj,V,Td*ikp>D5Zk1s",I,hOp04RE^MER@
%D\\i5Q5M,n)GN>+KbX;r8TG>d.pUln,dP'7p-^+d94#qfnsV;B_$^:`*=qaY0UOJ8W#-s1='4\fe(fA%p775WDA,8,ESg`SAk2#I
%h%J3F*C/4/erqtFa+34)c>HooH.$nj5[XfiTh&IBc:5jV.L*L-6[.g-Hftr=fU1]8$[%QL!rZu`guGf/A("eQkdA6o$bba>CO!q_
%8u4BJa)oAOYN%'!b!lBhHLmK7j%"JmC_1ID0H7Fj`\>srYrV`9PtO\[E-64>f`A[5kjb7Z=0DA@4h+c&PSlMlXpiHnAK![`l[[G(
%841cdDgnEWs7E#/gUCJHKcUcU^4%7M<%hp]`LED&m#:Z9@Hu':mZ$1oNX(D%A&+JJ<h&,DJn68]=^m'XqAQtYOhr"+Z6-<ZiF*GW
%5JDaGpk_\G-MoW$h)s5(3+^t)P^0<@K*!$U36SBT4[1hoUjB2q:o].kPf;U`J,OqIJG)?#r&Z66lh1&UN-%`7Kn($-:Jc['qW4BN
%k.H3+@kHJ="#8=o<dVM0nk<HN"gS\gX_/*$%<(97M6E:h4=Jo,ZmJn6i.RanFNEDM:?910@3@9nM44f6J>S;9Uoo8m`B0i<0am;^
%EA`MS:ubldR#J/X3P3SeVb/rN#fTh:5&74J&M2:26=Pg8cJI`F&tZn$lKg$/[784eI2b4[RTS7K!#]bW':ejR>,cN="'&O\?'WL-
%0\YpG+knI,TD^8,FPlW]TCn5OEo%D-]_hkI`]5,b/ZD:M%($[h>SeXl;m8Be1i0MKk2UlOktb8f/T?WaM&*tGD0r8BNNOdqGHb8M
%]hCM:fpF),Ak+'OJYCU%C@\TJ5QA9JH]G8CDR4=s\`r>#2O'MQZ9."$/R1L?4!7_2Lr/G_mCWKp@?;"DGi%ste[OIR<f&+i:3H;u
%U5&+%->VCgWXo/=5j-bj)3Ah-4Tf@#W&_3G0Q.c*6K!+Z]a:GgMcOJ!ZM?J?T![8_HFQQ_C3eX^j-?2r\G!$*:j451NVMnpp*MFp
%=sYI:7a_-T[sCI=p7suVSU4,NKUA8>i@?n>iY2E&R#[CM\elh"S!*sQiAYK5;-Wrl?\A6$V(&RU@"la20)DED]Us'AFt*C'8-'!u
%c:(DE(!\nW&lg/<8D^nt(\<S4WZA7\%'"2<3?lK[QT?jcn0+O*CIkM?[b-gcMo&Ya[a4^_gTF?]n8F<Ym%'5'UfS'ZOV5S:VN;]/
%L/%n$qOmWHc3+<n=A<:4TP]!ROs?(5m`+&)?^To7*&4_G7bbF6!p1l;P+8Zd3aYsuks3V';eIq*=/q\<X>"WjCpFd/iS"d1X=mW+
%GtG\QN_:tFHunsR%BGuMEVU*d8T8(0B1g])WMrasZc9>]I^[+1`)IHH7=henVt*@9_!s:=T/\2L<jI?bSU5`V9ksfbE*Yr@EEG8/
%XN4],@oXg'NHEI!7WuupfpX"Cl7nTh&Jm2<F*1-IJphr'ZZ8U9Y>OIHs#p[jqBS5Bg=D-._O%@#_Ah#ASYi,9)[EcK8Bu:Fa5%?W
%o,5X_.[TTF-3/u5$Z[IUgu?rTW1<X6p@p(&Op3B3rSp!'1l:?K%8Na`'>JbjU08A&bQ"TGEM^nuDhI%Ro3bS77j[EfpK=f,dlk!c
%]kB=-GK2'PYSkInlf_kUI/R$-/_"1%oQ)qlp'W?aESi00#rDZsf2#Za!$g#s24C%q0NeSL#F?-M'I_Rc0i_3p&3ql<#H.Lu5-`_k
%1\4>l.!0E'hbKA5K)c*VG*PB]3<2u0.Ai/t?KHO5`fDc9)qFl6>h.EWeXQCqRZT`$8s6X!n[2icX8Z#KXtet7YadNqN2!"q+37S^
%Q+s7rdP[sRG-;riaXDk[YiH\X<o'*A_d;MtkB9depECb&fgTW/R;,u/-V[G%M%*(OOT++ERE+,'l"TfiF`2*5ERb[';/5r;aBhJA
%Sen5S/X_<o?Fps@C/ZQ![<]VHK^u<@[\8/s4d*-[6?Q2n).+XuBddW66n#rf0W8F\k.JF+\9Gp9,`1n]4?r_S3^uUFmdh@^1^Who
%/A#*P=\\2RQJqQKKk*b@W1PRI:qts";gn%HK-;2hi[jGR"gfdXfg63NU>qli%PD`uM*In#N*SlAXUl4sUr@I/-UH1.=Y7q>VZ'iV
%]MMl%jJnD:cFs+LVGTMZ><DB?85X_=b>l^.[/T<"1+mmh>9jDN[ur"gV*,#O#t37lo:X]FJtqFi!pAsq`HPX2:a??%WUE;$FD156
%5q6&j`A<,H/h\kbbh5q$("60GO5^hZ9<MWhF(**5&2+8kVA!/>DUMj=%CBrE5h+.r.eQG*K1XF/KIW_1a/P^W8$BORh:QmX-M"K9
%n\3[QaUk3]6s3VYXi)a-rFa/N8N!ka6IFg<eaag9.lW<khKEI1\n.M5,jgSZZ&FK.8p1$D2LfK>fpR6J@kg;kUJZ7`53i+c[P*ck
%DYBaSQ>TQG&:QZ7<a@8O7H^NH,0]4GJ?O]No`nLMd4/>ilWp78'"2fDX1j8JN>lXO:/Mb>Q*9N@GM5Cg3Pe]cD%X;-Q&k!eN@/\)
%csMqs%38tEn-X%PKt[QKMqV#+`U-c.@@"JHp%B4[Q%euCRd]m<WE5r;feB'TInY02%2koR08aQRYiG/#"%melBfC&n,G9!IgC\:U
%=Njj:E*]F_#TZ?OHY7_\Yg<gj$>mu_d#s#U]W;e;EOHFL!m;43;fX*sK\-D)]K-JKa%4g%.]W%$"Eb;<,4E"s,t7dg;BiW9Y`PMX
%1*PZJ]7%HL_%U&Z8Mka_W=%#T:5YTUQ?nFYWI*Bc1JQp-63i:*[HNa16%N,f,K[WO&e7052rfO"eotIK2qY/"9@[M$)!Op/s$X/Z
%Mo5%cVYfI3CW-db>=Wqbqia(Or88;pbS-d14YG-@7%Ed#.27N,a9sRgZ;CA4`5ouSP0OAr@($h@>#BH#Zn'Dri[jLe(ULB:?gCU@
%`VdeC_=g?l7efjC4gK\2&/u(2$d.D11M25?%FW1T#I]pW$tXj$Pqsg'8+O`E7b2m2a:(9tOTGI3N;Q!9B,^jc2ae&nUS0NdJ?]Mc
%;Q*p]idi"9dGt$+W+WoD0-2+`mFE]rN(P>c;g_R:!-Ba`4`SdhYPuqirkjt8eSmT!BII^KQ92&Y,3E<PhY?CV:koTW_."mnQfT<2
%Em*&R@FTmTd-hlG<j7cc0oW`%8W)V%H+$_=^mO`8)(q($\hb*4,:T/1RCL2V5#R_ID.cp`DHZlr?^1iRk4k72[3.am%4@Ta1j$E)
%3e#rCW7TucNW8^Ee1pJ856PMEMi)o[m&HOW]C\KQVL((PeqClQk"#NWNrLCTKh_@7`M"o\hpbjR;Mf#17ViI&I50W`;)Vu%Fp>Nq
%*=*tUV%ZMg:_8j6[]5%cnW:GKNpUct_5'><99YB/IBCruXPW>nSK`PjlQBmBW$f<;+/6q2i^s..5sr)dr"R;1ScI/gIUANL(&p1'
%>$F*Yn&JGb.)`_I\Z309Ob,uSr(s2VTTKA=[B%3np`b%"P,lmN1j-^f%<]$d&[LT?FhHqEbIEtCl\YbH5H#3qp.2<eZ4uJ9EYO4B
%AE)aRHX/eK=I&7hrnu:t=HUn#<g)>"N8Q*4S_<(]X9LhQX7GGRo];P'C(!&;q\f'Ks4dSGf0'1W,ljdVWF"HUp6-cJfr-ef?C%4/
%o.!V2fURpYR)>st+JTX-iK6'Y#f2ea)lllq,dPV8oN*B&%:0FSn1MGi=AR@H[LZ&-]W.3G1/N8pU_T0?8@HJ5[7(8h5]qS)4XgWB
%'?c8p"AL,@:[)/SE1f,.6bgbPeeWnldkq2[Zmc*b(h*0c89(LQBCQmeLR8eX7t&tE,<6+]Jg9a/8d0IaobQ=[$6Mnp['@cEj2L1T
%p9?AG,YSU&en2-e%Ng8_^<T_gpF;8c[3!<eB!9q9PUK+?Yo1bJTAH]=UriVMG,kikk'T;qWqf`C@)41T_Ta/uE\l58+79G.L4f-4
%^N-R2r+Sf%BsjUD`%?mZWKRHES`bO)K)S\OT&9gG2"A`3Skhq+bW(iE^.@L`qE6>Q1MUGCV^$^I)f-:lcT:RZb:-.#pL#503i-sO
%g0JQhm#%Jd?^%-f./,;jYr%&'3&5%#hZLP].aM($pkWJ:arra#.>K,p-0`0[LXB.s/(FZ7@sPb-eC9B;GIl^1qI+CmoLNhMX-1b,
%GZeXes4:$Q]UZRJBrQ$M(o<dT=p0^(,"66+jtJCG[^sDQTO1#2j59?OF^^'u:\CDm(]E!LT`5;?:<D8Aki&HtCQ;n2$n9B%kQ,A-
%CF5JZA\a?`ZAs`S?"OBtGT=9A^XObWqUg`)6XJ+\0[!XABEK[r6c!5133qHoN=8WS+Xjp#/P*,[)7d3"qRR>o"^`%\Y*!:V4BXj`
%Krf_!:,%Tblb&4B8-q'WPM7_[L%S#;aJh!/2)YrO$;jb+X'F;X*>(k5<r<>bN'9UD2CtMGEC[O%DtQ(hSBQjjC6?NbaMMg*K.Wuj
%g'".@8kNa8gHp!+:I-k%ObnGC18r9Z$K3HmH)"N@;Ae5UMX@-alSHK]Up0gqo&+C,Q?67boGX\g2Uh2teYZU`GtMKb[EnH`D+P\s
%Y$0stS!V@%<Fd^[[jag"Zmc/s@RjmgV4:n^8&Lf#+hDWV!?4@=4Z"nf[B)5P=/D`MZd9k4^rb=s%S\G_(5+=P+e=TG%NmK>cZT&]
%Q8!]K''9IjE;D=*gJ(`W]1*?BO`(9nAq-Zu^Bf25oD?14,,FEul]*lO,HC4rnC0R:r!60e4SOY4_"ALDd+%cj3UE[K_A(DS\X0!Q
%mA:/8I>VTf2CW:jFF:NZSR0uM'J*7k+fShnHt#M1ehf@-`0T"J'dKh?$@$V/S>("=p_KguVjN^U8tK.sNRbEU^\3"&6?`%s$_A!O
%[N6_]fZ@Er[+[hBTIYCNLV[.o%t`A-p,gpo[+j/^J9Q5DWg0?a_ePq\KVM^NCO@dDkbBB!*UY9![>Zsl/Q?9VF*qi2+Z5`7l0jU8
%k/i>n+MR,BPCUB#YG%Hf;Kh-jp's62,Y<Gm6gT2mY\JjnQ.!5Ufr8HAPoXMsLd^!^oG%[0GFVno[-lFgYM7P#3o/`RV9dA.3+NYQ
%EgfO/kl_E)3;jf.\re8lBr:WM>I`oRohGVVjJ58>o7T0=GErnI098%/5qHVZQ>[T/i;8fA+;0LO"dbQhb-W#NkfJ=J&K47E+KYM=
%B5Q/&Puc8m.LB7;%$<o"^cC<gmjQO^%QM%/<>eKKC!@\T.OaTT;5VO*=-mAP2ZobDP-+>eeF^VbWZP&aQRjj5DD1E]q1A6lIY3C8
%?8>C_MYnYTW7tXBh-n#IngTN>8Y^X4a"jn#&M#l]n1`B@_+VuIX<8j0&urd5q%(g>a<Zo#<5]tgP%,5"*"bc=9Si$SG/*<,]i/!P
%DcZ3W$@/u[k(l_[1X@@6GB`S:1XD:K1cVi8ZPDRSNV%I,hTj?5Yo_beK;(`WR+f5Q%&24.Kr:Y<]W,1;`+M&E-U`)q%8.n$h(LV.
%o/_ts.^Nq?4\us<_P+t3l3U/l*&URLmY*BP0N;YM3q_Nu^>8mE#-F2n-2<6#1TnR(g/#Fg5S)r]4l_qeSt+*#>[G7!m4kTJ&YG""
%N]C#XB&.tplgW8X]oDBaqJo/sq%tmFWZ#G+6u38d/@\o)58+6mN]_;n-R3#'<`mr;s*01Z`eEP"/1^.B`Q,%0Ad`Malj<6o<inTu
%1Abr)Eo_;VQF#4:BQQSlY$QJrgLtqPHP-uk-Q,+,1%%JgLQ;Qm#h69[@>qc=?QC0XhEVU4JsfplgkhgI9U`3tb3-@A7%7&o)M6C!
%2:bl?2(Uae[8ZUZGaK,#b1EbAK7,g?B?jVPB.G%.gfIJFe]l%l(3^4q)K@UnfbG2O:]lb?f:_gg^#tf:b77Ed`_?F<WrSa&dZPN"
%3&$Rt4*FJ8&2Xl+1VHJ9f4KQs+FN-W4V;W#I[?@f^\XYbQ_YRKe7T+nD_+1U5J]jD$nr8ubNr`n?ei*6H(:6X@6:JbC0T>Vgs_#d
%Y#19\S+DV.`I(8X00(1p-"\$+3]#>!K[@PF0LQD%3k3l&[5te8!4I@ah=pg'fe1Z*o$.:IB.if38K-e0eX"g-4n%tpg'>.9mRQ"E
%8%/-BjMgrg(=0+@gpqX-'ka/43j@n3&T/miDB_=lWeJ-p7B^_:8A#ISs-es%ok%AG.7GGNaW!a+??N=%a'3TO^bsW9;f$#qK]9)0
%pnbH$HB9\s/f[8/cFG,$&<7`loHj,fCZ_MH-GKR1-VnW6;l)`s`Nd'We67Y8;oHa+OFpZVn,MC892Q3d-?k-%Z+%;RETcBlAjU-b
%jPj*Zn8IEQZ-t0?V:%u`]CW"jgC`E,CgC(@rf*B-3\/OGPW#1"P8bX0>!Ij4`3n^'n:$VJ_CI/1,Qt!/5A!O"9`Koclcm]MVNm/!
%?&<Pe[2cX[$[M%Lc6HDd'`:OB=]PIJ8Fi1$n[G]3Rh3\-YrP?tF=?-8F(d7hGWtm8ZuH`5Ji,?BCc\Ve,8Oajh8p3&-Z[>8[$)_3
%a0:<h>VD3sH%']XdE!;$Zta1tnj);i4<W0DY#c+0eImc:C:JMYQr!GqQeX1,>qGokg\n@@VO4TX$I\\d#$eUr'FoY)!D_b=qn-n`
%WZYp4,u1i%4F(eY3@;dFohBWIk"]u\qW9#ID<+uU,uX3Zfn4I0PXK+J@Ec:[._[J"RA_0BhAu[?h"H[YC[HICcbLGE1Z9tsMfuVo
%iIDN*,?6t^3`inZonpuEFp?L7KglH:C"U>TSqFMoi%]1'i$f!jNN`[m"E&\g1gZ5r!b2e7U6fpHltQKa3ofF1#rldi494(l!g:Y#
%>_lKuc*HM8Id_S]f>P7HQj)r7$Yf@sRSXuu)h2H3.hZETjOUZpi!0=T]t`"I44qJ+Gac6I7"a18(U?8=Z2[qZELO"%MJbS?+c3RO
%G3EIfA.^4q,V%TJBU84piJ8Wc&5t;%=<j[s*`n&Q;;nh?9_7MnnQ;g]\:*dM'h0\g>#IZ$"L&#"=FA2dAQ^1Q_sRB8eD/_/-"#9M
%P'+([#*=5+DeJ4&,k\)okS8ub8`rPRYcuM+bV?d>.+6u[)FEV`)iFO'K7/2C64Vf!=N9E\a%1au3@i3jPk2"fo4oVP[V)LBYjF(T
%]!R0Hpmhg[g\oaZaY+nM'N2`2[=/hZ(!`r8/[TOm=E*)P_M1:0lN,&\q1F)Oe+/j43h)KQB5*+16]^_-klHsuHAk*9%hndXeCuU%
%"/SN/O\-H`obR"^nLH1k.!N*FMiAj=En<mk2#oJ60)X41okQE57Y-9!Ql)JB%NC'%[))reX)!t=&g9"5XMqttLs4M(;`TtcTfi^2
%(R6>prUFfVcnf%chr&9ThJ,1-Y5eJk<(ALfe4n6XI_,K*lNG&NQ93A*WTEKa8+"QqX,]uXCS@Tfh'hC#cs'h[Gpo4HHCFE&"Tq$0
%X1Qi?9`b8pU$1_`(>8hU;<A1VTUcE%]_5NhR]uHq,Ue#D#Yurn@oWa:Hp-S9b9)X!Ckk*Al&kpl0skF&6?i>K15ot:T.c7(qY>a^
%E<,'sQ/?,&4AIT^B"WG,:.MX)`T*G^.<0$)M@*(DG34260K^jAWXI)5%97gTO'FiegG1@ubu;'lIC#3Jj6,Mq-mStH#0hX;6u3An
%?j.ZYiApgVpr?I.RQ<1sMW;.So0PH:X-@-(=EYK#VA7f,-g1)V_784?>S^1*4m$$3-12,'?s#G03QMK&(a#`uK<k45.=!=d6Y8^X
%>;@T\4R^hieGsAE`-!3I0@-7KA*[m4`InLp1N3K)JJQj@NT3DXh5tT_&fk(7&4"3:.+"5<p\8a/FrSB[Q]kEIGe#dn2:g"eg$j5'
%@11g%D0k8<AF2de5p0%cF8HgepI8Q+EY3*3Fk6X4;AN8ln'b3s.._3]P!I#GeZWR9gOmIPlok1-2hj4)ao(>MN"T:^pR/cM>ZR+`
%82WJaoi?<r^?#]!<9p@bfW`^Sn6OWc1!FT1TtP2%EIL!EYK>W>Z&W"TGqfR)aX]Kd61#Bt^STSgp)nU^IgN85@G19Yc5p-IUq<c:
%oblV]hu:;"XINOZ,\]mqaP#1]fVh*9/r(#XGdrep:^NJ=Ro=@8M"GsK,r3IX!e(j6$dPF:"H11aU,2M:^X6R(5W[0*iE%hn_'&B)
%(X7b,bISE5raMs-'^0Aj,=O[M#O!@^mi+-<9WP]"&b`^p*D<Glo=b^P*/2:tQlql"noenGks6IlhVkikg8VX0QmR8<0=l+@GbEJX
%K9W4$#$a%6r?.HJrR)`t8cuJ&:V9m6';TBGmOifOPbX9OFSm'5m3X/up]FRa'R<le(LNuY=rckL&!2Y62%53hFSm9_Ka*).0N]QH
%K]Q-JotFB3Eo@K2S0Oug[O"md4n<c25&>FAD9)WR6:ZAa"eVgYfoNSPDDLTJWVra+`)g@Nd,qfU(1Bdpp=>2aL?/Zd\ck*g,Vm)8
%of_-'28l!4'nIiV$l?+i5.>0G,I@rsrK&[C6.Ou6.%]CVTjA*a-r_Dh4TtqgS3Jt]UYp[ELXq8?XK-Eb.^%GhSWoCfNn$Z%5e7:-
%7>:YW:T`05CP%aRS+u,3!^[2Mf+oWo&]@@2USW%,K`:L=S8D,neUc\8&AV4th>I<i.2YhtU12-SK5=_*`XmWmc#Q/CCZ>\"jAb&N
%FG4hbJooEcUYjhOeGT51;fZTTjY_he!j?mS,r@H+#pXI6D-[FTZu@/=D=6o,`Z:*iTq0u'L#$*'n3oJ@!9+oi!DC2VJlDAT>!=QF
%dd)l2P)uW+<9Wur;,(JoXmQ?ME</^%NHf`ASJn=Con!f]Wa9!AD[C=D5W>PrP)-ZFVRk284K7GjdnhZuV-I8%U"m'/]N&SMO4+]^
%YEVn'[_^d?Ra4uT2A>,^0jb"U?l2o#,"[l:QL,/THn<N]o0toC,F]ef'ng;XNO1>^eu<(Lm!JHMQAq'YHM1$E$eraQfel;6KVTE+
%i%RJBOD7%G(ZkVEppe"5"Z#2MEcW0s#ZJ"[DjJ6Z9''_f:GulipD>W"V71s#6_c.Xr-RTX?6BshHhB_*#m3aqOrZF5luo!\NJ9I$
%fgm@'b+[A)\.Q&2Z"rR_pBK#d[cj.E-s-r)H4ETf4[""-n*h=)!jQkgOrPl_f4QURPn&4@7S4f--)VmJmI2VHiSOns%nSXp\VXuc
%lP"eMLLTkrp*$R3]bR'Ll:t&g'RH[R0SoGt!'D=m#9f't+$5ji1B_7h\r!0++:S*4NA&#Z`=L`GZ7FOkcXmk;pj5/;1#b/lHt]8h
%h4]dbm=?X=9#i@^<G[P8JuDR@f#hdR`j2^r`Jsu5+@>0\mAuf6@;/UlMIf+![:WX/6*([p88"`%Z#F<+0-DIj1e#i/"GC!)?)n`S
%Touoms'S/N)f\\T\3M&/*!5\`nbI?G:/.LoG7_;u.o'cZY+*4l]*Vpl6`Q9XDWY#iL\]K;ZQgnMkq9G(8L-#W"\]*p.tDfF+:%T3
%MYl5%Rm_1nY*kqS$K$h@KK^a+/k2dSBk6RYMA+h<Q=>g`rD]Nf#LO[+3g%ka7R'd'kDPfF/fM^-gLQ6*BI\nrANo,rT5NMF94^Tc
%!)fY-P*3146:H$;N@_YU70hQ0;FN"ml*>\2`*9NnK`N?si5=#'B^L]N:$a_J%=\SGPgBT@<0$WJ's"1"1h'RD<kJ\q2GL=arELc"
%?X(f*MZ:@[r-O5U)24u)eh*UWVIH].*V_4cYjk.!`!Ya4ZsdY;=Mn38%UHVT*>Kc'qAMB2BGtndH'3DH&r*0kY/O:H)c^`X"flH(
%=2LVN.U@bW^8E+QD@"Li?-HS;;TTX&0"p7-g,_`MUiV'=S'^%q?Q2k,Hi#5:,O3i6!.ubP7YiYFMc!`$h_iigAX<"HNu*:#7bX:i
%;I,9Wn;t,)M8i;)J2P7SoLrh0be&[?bWp'Qe!8grU='3\Ps:X1;FYRUrnc^d+sb]1Z'BDD_5jXDjuq4S4&<dScGQ2<5\eVED:@gH
%4!<=?de4(],9$A&DVYS&q(GK0-@HJXJWOE+NKaco@s/F>cKZDNfl'V"$FlD^'iiM#s$5r!M6Af,VZ5Z#jb`HJR`a4fMrO[k4O7%H
%1:DN)$Oq];GS#l@87_I%mC&9nk,7_`i<c5=>45q;-=BkA]0(pU^^gE5d?'7mAJsU_fg9RUB5W`Q)6Puedobi@D5Z:4Qd>g:=%.b%
%'`d[glG]i%cRMm3Feq1`jfP_5b(f593X2Hq/:6&]90DX/a-lbq;)+`8I9T/jY?C/bS3oXYHs+dZ:7f$T4QXi%A&N3^gdl1tJ/D`O
%d6)(VWoRQWX<=fAYOg!5>/cOPQ!@e\MSV1XJ]P]NUU;Bi,aQP+F?"#q<he^@!To]/[hfeNNK3-b07H,III6`[d10o?OfK']UeVHM
%Y\L_?a=_,KY1:tbk!&CJg,Mg]8bL7_g5[M3I:te((;Vp$85i7/;5$T'BMbH8;`SV4n^cZ#)"sGT:e:AU##`)uliqu*n9-^B"K7t[
%Hd09sT%l9P9o=Eb1$@@lc[Ici2FQU#_h3"8828SehW*Lh,HgV+N;f9SnTse8(/,3\CF?-iTE@r>%uGZJ>D6hNmrS/(%5=)p0KFH,
%C@Ig.A<hr=PnMWT.sLT)PC3TK<.-OMWbsY&TBg<-qr"[7XEEXZE2@ii\j%*:3PnQNL!&T7F6.-[,&c6IUrMur31lfe:8GJZ,BTtT
%m>p2])a/`Q0MR"ah=qF[^DtYWbrVPtU63h3r,go1&7c2!BdER[8XRE]f;dT>pfjS*dq\.V>P>JbGE<,_2`2gd94;*rCp=s`-<gE`
%1^L'g"DLj5Maod7`,?4LV/TDr!'(PN8pU$Al)[P&#c%:j:l.+o;n3#c.b.U3NIs7=825/<@kl#s.?7CU'[.Le,?UA_&+TWJS1%\K
%#*GqXhp0\:Cj1tTofX:AGOTh`5a2OoqZuWOd-GqRbTETIVYQ.I[`NI>XWT'FDh)DX'B*9F>NCI6qI:7TK=Fa&LHf&.=^Qb(+O7hA
%h7a!Yk+i18T%,)1Ag@c+R@>9L%]cd<Bt[hDJtO22"g436AL)UT2?r!1!ND\$PeFAJU)g7tDBP>i^=7SN8&/1P.G;VX<P:05$_[Xe
%h]p$g?Bu/PaFpFh>b]L?CU4hd@jDr=1=DZmFN$!R=D7.pr[T!AQUjE)WH=_mBGTD`Q.1R2Vt8rSD"[J,2_S(OH8t_'r!Ag&ZpTF=
%06c!K?:kXiP&P*7VjoKn1j>&aQBpNI`pM")0^*2J\#7cGd?Us_<@an;T/:GrKCX?3>t$NR&6ng/H;[,UOp8YbhLSP!DeI:3Nl0Tj
%o\:U-JFsZeF[CitqYUqXro;P/IXpF(q)slC-"#&$0S2YaM]rT:MB9'3CGIOoo9rm'#.^/'7mar/V4eJHG4^GE?)^>7>c\`M$!=/.
%cQE]*LT3Y&(UOT)g6[:;'TGLUa[,D,)@2]t1;6T51ji0JNjnPK+kD?n$Q]gg*uH_0Tu"(9)Fdul9OD\Oo!];/q$SJLb$EggKX.t`
%4>h:NI+/i]bj[7jA0C>@o8MRgAA7ad"MqS]N]*e"L=heg<;gN'50TIKNFopAkpB]$.+#&uSfeFI\%VuiDB4#]Dt@B51bfmG+J%\n
%+G?^+mKbkd\\eLP@T5>iOGoN"28W;KWpV--QBnBdisp)5ZmdIJ^$NYskq+<djlQW5-b7HNL*/3ApdF1'"\qM*1WNj]%^H:K8u,W8
%JaY8bS4WN0,ZDQO_?Pmh7958HHO=WagII2]F=5^3L&D3>hs^KMnWM<V4IoFuUpgOZ8<6G4%5A^bq1Ll\e6@W[eW<(j@aAZ"I6PEV
%d+=($ok8O.)h7X[(*"'i0H2pMpoMkRk9.]K`nG`3H):D0;kq_YVjNIP6EXff,:i[m?cXa1NSY%O7!,P?lcMtpdlq"nO>q6F_S/B*
%%.IGCNO0^gh?Y7,1f)'Eqg4=$1Jo?:`-n4J02[#eLRh$_2:=4rAth,_n4/aUSJqeNpY1Sh$<.X>1Xr:1`e9WV<:`((Y(5/6-?;mW
%M&S$D.V2/Zo_"Q'3$,VJ6T[VcQ!!__cqko@a(Q(]^U_,*2cFY+n2GTR_,[X8oH//W1XJi2BK_/?PeGIUg,Ep[q%?Md_shH*/mfVO
%PkW+NNV;:8Dr,Hl'W&Ouc(J1N\16*"1j1!6d6_@s^?<rL!&+0;Ws#WS(gGB,4qWf$YWp?Fm?96[-OL)3DHSIo``@^beSWRU8:OXH
%WOk6$?aH'N5KKd&+`?`$Gr).dmhFBNP,aol\hOIuGLOO*f!7=2U9q4\;a:`HWh!gh)pE+PIN\Gf^ICfg2!j0^cTtfZZqua.p[$r\
%'q[4XF8K`aH^ion"hoSM2n^C#DBKdq3To)@ETp^=L50!]`EUGr7_]S+HSEYiA5E=4mCVf%5m'5r4#^ft,c&srGD1hjN?<;1dZJ2g
%!AAMf3JW.,#+a/q9WqYLV&9X#?pF3;$g%c_A--ms,_^RdZEDD![VrJFDHbL(8UH;6r9C+aR(at'%E2*;Ca0^7%k;Ol(t,EC@,tfG
%QAWUW:/dFXV1Bj$e.&(6OX3VVGXZi+RqXmd1*Qb=(i"P;Jdd*n1cFA?R92P,o=ql+\/Xl=pus5mX#O>-f1ieZor.om=&beug]nSD
%qCY>HmXWHpJUpGG,jJNi7oW7dW^1NU79cusQba33D3r\&Zs(+D>hcL?k$E\R,?OI-2ID$H\"-q>:a'2bqA*We,b[u/D1:uEj*mJm
%CI2c*`UUc&oTAN%9ZZV_.pcD47d@(Rd;H5IH&/,mAVFB@H)pBU``^bN#lc)cVs*a%;n#KZoTN[Nbn3c3)$(\+J4$a%h#k=p5.,"n
%Blon)R7FPrdFF$V)3RjjGT?djH&G:6hBuU_9ZGkmY(rof[>8\=r%##j/IN^VSrq@rBX3+*T'A3EW1(Ut<V!L?R#u)Dj>rJR__Vh,
%Y-mHK>YoM*L2>b?H6\nV_*434n"u)AeV'(QlWgF-TKDO]\A`^Plc\=`3)O?h3Ph8.3D;CT@aQ3ms/L.0^tSh.K9re\"\=>d4Vm4N
%7[WgPWJ502oi4XFOCu.uIChSPL02Pc:T];5"$$Jirc[T`q>j2P+B_&3Lm(+b$4?i7R-Ij2WbZX#TS)@bra+o-]gNP5N(-+(8%pF/
%$*fUEM.QJY$Rqu;"8bm4Mt2b:jiYV#)^usaSFeXJAJnY90`,J_Ig:M0k^kW&\oFM?WU+]CohVGYBlYX]r/kb*21dsl40Ee`^JE?E
%`AL*>IDhBSBB@LZlhW=Y[U,MPcX%hY[mG\jK>ro.\n-p2V0QsY!&8#tE]!u'6&_'-O#.?2Br\1X?SG[q@#;Xc=7XG%L[eq6/l^It
%l^Hm6:R,>]cqW5p\Peih;Q18CF#Dc7f8RrMg4BGd&K@8)DNG'<9kfZl:GK[Bc9V1R@Y.34_%KjfHJN$L]+$Ze&WKm<HO.[(fnoJ-
%Hh?9LA3u0+`O0o[)-RpdmC@4s,h5mW\<@$66%$Go%ZRV_M\Th?n)K<4`)\kB)OAYfZpni,#<s,<>n)bVUR07:_ITU&K`YSX5S'D;
%!rIS^!n&Or%[X7-$W4%Fp'm-_fZhL/AU;omC(@^RGtuT8aoR4N[g5/=`9R(ms3iK?+?Qf*CrCIebZ3c$?LT:?B0N@18r?V3qtV<C
%9?!hq8X,qg!M1b$]_"6Da.%e$Gsf&!%k<RupY2:bC:"L*J@?Dk&b01*MRPV=*,oVL>`q^VH:_<JE>taE_7_;?kfoEL%b%N-_tsY^
%f.XjTdsUNCI+n(Hm]CC^f=2tb$Nu!imO&'0G.=.<d:1R/j7(at/1\ocfS"kP0VKk#;_fB<Q[A.LE\C'?knkDn>oeo>qD*S>,mBX\
%CG'f=V<*"7110GaC5@#^C%43pX(o#jQ!-L-YP\9m1f(Gj&'lhD'6<uV?!6:T?!/IBf\>PoOM_tKdW[Xel;7e)46re.H+H'1Q@tC>
%*OO3J/ir,Q%eOp:?UNk_rDe&T4C(,2D.SA5(*g4U^M7sW&B*I%!N460_;pV/`Q12g-!LX"or'O0^.s2?3Pj8$e,m?QmoCGq:tua%
%;^PJ?Eh#Xq%6_6BE>pRf<g]fk:G*/c4/.kKn)fDj>!:\iZ0R['=q"#[[LdqaN[VGRX<$u@?JHa0:QJCr/(:hJY,>Q4mlJ@X2it`;
%1\8?[XqU2:^Y2%VgLK9ue,HjiD055Nm@JF\rBL>IS)$_71B5JaV(c_OPgF,r?--$-&bVhD-[JSQRK)>$/lQ(EZ<6N62J9ZHki-B^
%"`8,-H9[1gc*A)2cB*=B2kOP=j`DlSSjk>&MKJ=Yo/dSJP0OMr5M[p!?G=uB"nF0c'So'QL'%[%F_s4aF$3r$pBcgud,8ON%-9;9
%.DY&Vc%sWeT4nj%B+=>W"I\g!VL)aU(.`])e_p#R3s<NA9;Nf.+2Op!hR@K84&XSY)OUJD=i]>5U;`B</ZHXulB9*%-h!0,H@f&K
%*V=Bh'n**JYI(o(G/ZR%c9,sI;>b`2DH6lZilZM/H\iB[gLp%*Sro8t6N.'V@Bc%H@.n3BR]_G-,4G1[\TlN"bL>+(7BQbtO$Q$;
%`Q)$NdI"jH78^/i<4#E'"Qbb#29tuDouNV]q9ZEfpN\lE[_-C)H.jJ6fLaOtl1q(.k%Ra(rXu)!pQSH'AmLE'AGS!PTC/M^)M69f
%WC9]G=0RRK=(_'RTl$%FN0.P/1b-dj+X;](d=h.cm'%4[5I@+=!_1PA_VBpJ>AMaf6)`tO@ALD^dS%`pD`IR=W;DYJrhj$%n!aJ%
%)[`1G*P?;cG\gc4g?3uERm0C4Js#2!oVunda`ReFrJ#bN;RB:5aXfcdqMcNGL_2T@jr(l7%_[R2d?**M4PPtog.0Jt7'\UFhO94g
%m2O]ahh&:@D&cO()`i`,bmRM"^$_K]UAp+@nb%%M3+a@>np=g&@I;l_1_>V=hiDFqX=;0ap(MHgJ8V'(s3TLLrHqO5h@d?uGU.6p
%T-8/tROf!XD8D)6'/5!lq$o\;"*<<Z$>Z7hoe<:UX*bJAD>rD[0ldFr2ceo2K7XuI5D>Q=7X!;S*1>b^2ToOlJ.iFKWQF+irCYW$
%*kJB-&pMJ`=2"'@`kk%6KI"d+$dK01EL'Esb0gZV^LrOECG:*ECs=E?G`(kT_s$*0R_0`=5<FZC<ce=KIu5!>9*Fpr[K5l;8u#IZ
%iK790H&Kqf\%7;)UMfk4?(DoeW2(GVYdCHh0#^\OE4g:VgY2q4*N+*f9XLaE<U^]YMp2K7qLUM*=_$HaXl/3l"]Ii1$cjefn];dc
%=XG%jT+$@`F6/*s)]_6g,P<S:p+IKHkF9HgQ;&B%g#%rerC`+E40@ssa2`4b$@4cY:'D>1`At%%3c-+9P+!mOB$5:2*2$e+oi%Bt
%cQCr`#77>IY*5\ZSTU9jA#a9#HZh8+`u6Mq$WtXkI'a3bBV($*^15UcZfqFt9_t]5YMFTdI0@_sMAIF^`QPA-0fo_QgsE\8P`UpN
%53a.Z\K#&LE'gP:0RC$Ir1N2;[6d)Go?,L0&"6STFcM=n'foi!+_u]4VZfu1X$C72lEp;WU6c\mNb[?/2)>!`?[Or3B<&@*F=5X4
%7K/CLW6ee7D=>&&K-<an9qSeMNHbbe`B>DohC6Nf[9Ijr`MR?ST]ZlJ=?@d=Wp7BlU)[]t$n82/(Oo7+7B.fK,5%m3Kp%_[O\i?0
%:qM$'MY0A!lTnkCW<a=2&me?(X0b9C<3;%g(c'g'A_=^Nb:&*]`0]4J:qC)QYZZ@$'X*>4ap44^YG,-I*C2*PFb6[c$AdcM>th1R
%Cck3l]SHLe01<m.XrNp<gVGncBDs.*VS4_@'f;@Lq6!OR#uE.EMPitaMLpTMla9DaFLkAF&#l13EXdOj8H$coOggO#-<h9(4V:uE
%N^7BH.5#kU=K0m)^_>0*/_(9[&Lju(USJEq`o'TU<smI*8u_"8><OV<e<`<NnK'j\EJ`NJMsd2Mk?(!.PtLpLFoR,*c$-aKWhiZu
%C/Ki1/)[IAlcD/g&]tU,"teCA-sF$]C5^jT#DEoK0Q/#OkL7C+7'mcickKZY+K:?$TkkN66tl0'3!cck[6s2rEuRWg@NQA)5*aWO
%a)$YP=+ERW9/fI<UE0p5I)EcX<VJHTc$ibi1!gHq=5jAtQh%uUG;+L%eZl'@qD3*.*\[+M%1't-9(p=2d2B'T[l8rf>'DfVNp*E;
%Z^WT%p++G8<cqM^BjWT:WG>*gI81Te>7&^S]O)ft/*CVC(`ahdgou$-I$#]^!B-q\U/\JB.E>I<!42r/&LCWcOhT*Rr[LLLI#B9*
%IXi\+hiWQq"YF@XH\We=V;aAOaTtl13]f5E1gk_=C^mrXmF'N@mnS.]T<i7YDk>n')+Lk#70UtV(lO5eoLts#W/kKCP5E`ZBfrM=
%2@:G8EJA1U=lVm*Y\U84aF,a0bN1RIjq$+c_2`b*o#F:g<$(A!=YfL$QBCM'_@i_=B`q#spfOg9K6EN`':Bs+cHd?T:PdJ'?JC&M
%BnT>Z-Y$-[&fjq#)I`:q_Pe`Gi!A/n3EnS;Ena.<ID7m.M=ZDmG*V:j'k-7k*1XYC@ri!`0QLWF"k=[.LcFrkZTAM6q:*FrZZBQW
%Z@j0m.0cFKMb1TK3^S]pX14(fjW=(SCktN`7W\/]iVJ+lrQ*fD`g[J8LOM'-bVb1)Klq>k<[;uaZq:`k,@b4MH3*d#6ZbtDm@V;G
%o=#D0q&;0XFII:c3t:dHC@ih=PH[dr/;.fhFJlMLM#uu5G3Wk"r36]6:_[4p&\?ldBH+t;A2XW`%0;9h8uI$Wc3F2(o/u8]1+"?[
%M.ekRmP5AtOI`ik/5&E:R]j^a4Dg([?l,Wpc-fam.K'Pbr@M=2^&Dq!m6AK9-[k1%efYigciSj$)"B4c)Uo@E+6:n?._-nb*s92:
%;f59RPOQE4T#=Nn:Dc@&R'P)UO_[oNJ\_QGZl$2a!q]9^"L-4S%uM!u9XJK5g`V/G[EiHQQ]cabX,bfO4j3t^N6;a685Q+s31b3R
%T.oRQanJ$9@>A#s7^5_aj?u+LG*QbC#tT#j3oo";K$34!$5?f:np:ONhcau9Et2WLVG^#SQe/iea;u@+&28Vce;=<.)SI)Jb>S@r
%V`ST!kG4\u,_N1+A=%/Ic=7COMqXL7CF?%K!ME;;[=Lg=a)$d8j"r$tP'U"MGd7iF4"W!SF!pQ#EMi[A!PXNniiX-=T5#[^_(,up
%:cfBaQD;Q#+W`pjUS+4iYM:@FXe:6X\\ZVL,*o81\[a#.SqeAoh!=PpeFC5I2R\fsVf+.Ti0S`GEj:Mel@@S<8;N92mAXg,P8`(4
%9D'o&!fSC=5ujm,k[uf:mAb"nOd*[jB7RXiD4EA7U4s`fm`72g4B4m6Lm&cJFX@uGRQ`N^hk7/LkMJ&]?_3DL^W&cncR]SXZ!+@?
%C91?nSUpl(O71hFh`u2AI,l[ncQi5B-A:%s6#/88-d$:sB>0FuF#3t"mNU2i:Z&#6\'5ReW;I%C9a@':da)5#aOK^Rq?jH`O6d>!
%=.uR<Zl;XX+_$4lKdS'*Q^b*\T<dW%3;*k6r$PbJi9OoWrDWbu4WsM\pklO'!kF^ERmp_2FF+jO0<_6tfWctPOc-qq]G?g@ib"#M
%C?4X*E)6eJLC-7uo)O=2Dc0--*TDiDNMIPCI:u6^hOLgP_`g$>_'"b.YfHQU&8/@f33HA4;^YHt!/UFuPl!:Tc%'iU+LqV058ms`
%Zla#L*fQO8*<4&[JB)ha-UdZ@I.q9Dpb/W<je.t/)>6j/plAta*mNtr[.(f[ZZD^e_o;%PeU4t*8D[2+"5nK$Y^[qW59YhIkE.uL
%c(@n^q`;rDCaqC!dt?c&?`\p]PrJ7KDT\YtPGU&G'D]"3bYJumd_,rmg\hS#XZe;W0W>k8,fdc_SS@b!pf!Z.lqH5qN>S:B9oTN]
%8hp3jq.a-MqsK*W%Y_qeL<*)IrGCi23@&S6i5p`k*sGN_(=N?pOTWE.Vu9SI-#Cas$/)jIK;u],B^na=h7#2J<uj'M9c+#6:f+f>
%I'M5beG1Hpqe$oH-WGLGi8VB*H.D,NY%EUT4O%_8[`D`@+i_X:l`il'+="e2J"&K8ST;G>kK/!K,4=U@.i=/pe80TFjLinHQ%i_9
%55m-eWGmiq];Jk@U)ms`iV"B3&G[(L\YT@=,XUWI?R"Lo]VkoCpXNEd_`-%!^4A(Ih(kU8^+Dr-B8NS[aKWRVc_fSY/,[%kl1\+=
%HqWT4_Z0IqnGfRAJ1T?!G12m$2&pX*Jl&Mj_i0%jN>'+C7ECq6M;%`i#02.IG7Vn8e5O8),LM,GEU;5B@fn)4\5%5nAtA-8#./<T
%:5p78knSr:J:cN5Lt0elq;/k3=oN?XQ-ZX=q%K'YYi\R'ZH$au_mN];K_+=<IL:&hMY3/%hBDm"KI!^V6>)P^b8-lU`i$tN^]XPm
%$[1I^/.OYpkp_ptkVs]T%/WpZCp.U9hV+[+;0&uYG8@e"`:Z<M+h'OGoqj%^LHU=1k]$-HmJmu:"Iu>\)aWPi\YINOk\La0_C'5s
%+6L'/o&Fnopbjj_aH%Ap2FC0r1s#938jD/0dBT28W$OLbiK*!5K&,7kq.MD>MFSmA]C30Lb38)E46%`fki*g"^!BP0gtD@6[ea[Z
%qTQD@_>Mg2$@3]YiPFXBV8f[0\jr89lALFbY6>;p5U^iYQ7CPJ]Gunm!7j(BF2I>jin*"CE>L7S<X$eh5t2kHi6noe`5Q5X!NDsC
%:0boDW`FnZ7WZ!@d>TQY1n"`D5nqmES#n\2O\6J5:Yo\K/4rGu$tHkclrO:19$h#kXoSJk$Z9G!h9P3P%9J&$:Y%]PTZ/j.f`P;\
%9.G1uDeAXj(NuG,LDO69!EZdHhrhRZJ.//[9@NrJiAq=BQ_[D"[]VUr!6:d<,Le,!dckTs`X9Jf:46l]3_Fegp0`;Xeb\LnqI'0r
%e/FW^F:=H`An;>7]'!s@"PQ*gOQJMD.Ds_t$AWe8-%1HJ%TS1;)*Mb=62Y%Z66RH>K.Af8`W2cadbA`?+osZ]j,cXh=LGQPBtC^7
%e^mh'i.2j(ZW58BH?T:>T;d-To)[g9p\14F&u+-5qu%PLL*=I[Vd[=Xigeg./!3A(<,bP]]hUa=l+I;8R<tD."'AYmaF&%6Ho/'F
%&D*+$LQVcs@OG4BGB`$2d4U=7\mQ'.)9;D&l^-k,%cQUjI,+_N*f$1R:a"fc24]?3]tXZu.%"^4hs5!/f2`d7S"hPokR:#;3iu!q
%-_#=aE'8_oZM?@&VH@_KVqo-?N@k"]5Lq'dcKM:0CPT%o_5XljR'99bW22]@WKc/38uG5i;?@lZ&c759gQrTF$CtYR@7Q0D%>DVD
%X*@Ee"?Dp[>25$Q#Q`kZC%b_R*f(Gcig7Q)d(3*a,X!8O^^3%]Jt\skQ\J9Jm;r3>Gp=eZTnN<e+S>P3VFD96Znf=S'sH0J(U]oK
%J5^_#/\8AbUj=gST5Ml\6Mj^<2+'5ir3f$2J`17S>'A9DQBVI1)tB?0d[b8[NeBa_0S3u68_\$AGO(*NWMjjTSY4T:)cg><0f]aQ
%.8'G[-:coTFeFj`DiE%u5T,P[]nAE&\$u*V<m15c'>nSU7sksNls.WU-2H1qjN_T_0-fG"k*i0B=U_nk`*)Fe/%@VXB]%BL&\#+d
%5u7H@Kg91Dq64#_?s4mactNc5j;-D1:9X49H1-iB/0TKU"]-MBd1;M90"5CiBKY%X_\dEZ*Xje+E?_D`VcV4B*WOU'qOdK)^]$/F
%s4@;Hp4*++dZA6VF:a9>Rl>W6[=tStQX3Y^%fnb/H$j@pVICi5[1a`Z.QRF4DEMa'6)M("V7F@]Bp%ZD>:A+/1f6+.%8"@_]s47n
%p"Qlnb_(c^&5_C*h<K,<J@a"Y/1F])96If,YL`9eSu_LLMT"=p8C1t<=OKDPc'.Vaj5amQF]Fp83DfLRE,I22:1);gQJ8MVH)9)8
%]5+Yr=/e^`&68shjc:Xa'L("<G#Wk/K5`bdY0)U8b=uA2j[l5g>Q#V,D>(0mO.J\UfZZguDBX:jC]mB.ghuaKAb3IN[*I'ifhG,j
%gski#H@$`?;ucIhrU9aaJ,dRhpg65bj+$lCs7JVVp]'dS^M<+BkG<j6kOrh#rn[VEO8o0nr7CuCj^8%Cs7#JAJ,Z?1rqHHdO8i?)
%r\lM1Ma%!Pl2S!m9pi:B*oaWo2TRZ3LHg1!dWVkF#:mln)Dt7C;iG)SXlPZ0n#p"(Cb=;HaZMuFeQHaLY;B-peoEDjGATP]W^4lV
%HM(+Q;&Yq/?rD=dC2`^fHk*0`UXVn_eBJJOF0jbod#'[1FULDpTj"M?g<nMF1XN/7DWqL+H,mO5%Fd&gC#E>g3kBP10(.J4dFDQM
%[WP>a$[4L];/f9e_I%;Lm'RkB&OXD.;q,atSUTonl!3\NqD<&(-u+($fG4kFd+\<hP2+ek_/XdUYmZI+G/h\gc)Y/eK7/@MZ6?`$
%!7b1(?t]<_g&'B&d)/b.>`_`'k0p7-A8Q^2&^<"dK`:(RAEi60(,HDk4J>QElLF?C5F+PU&t_s5OK'6]^#TtA&=7F%I+p$'cQ+?C
%q_TGijM,&@.,uAL$-ku57Q:e%)6[+YmFHR*0cALu<;,PW5?mBpRDk!tMLP!I$eIu5L?3[p'^fr0CmGSsBDC*`="C;Omj#S*MshAK
%EF%ObS@^`'AAmEbB()MbUL(SdO&_aPk>D0Qo2ScmkRVEo6NKhU8AlUR0(Pk)bkp3rO0G.-2k*k?(;oi<dfN4=`0LDHl9STt%$W6d
%Wn1sR6:PNh`B$B=0iC*>%1OZ^S;;P;kXd!9+;,@\@Cdnc]?Ba#IJis;Wa^O=*8uI7;"t`Gf.,t.I<X1?2AC0(#.>Ek0[i5*o^k.g
%(-K1pDOmp)s*Mt5FNK>'WX&[c.U*!D*&t#45-][E.$R"uScV5q>!Cm=E](2X+&rZeeU<;Cmc9iB6;`'XYO)0WfB(VNGZG4/Psk8:
%?K-Hohu'l`7FV]S-Ac@V6gff%"1fK!!OH,JL&,W\6C)p_1hkYI%XElZjKKloXN/sd"cR7hHgO);HVFlh5f&n;`j+IU1j/FpQ7`ne
%r(0`81l@Z;'!0l!jcG+CHRIuf;.VrW35<0O9dHi$S_om?S5`&qI_O<,o>SO0nlBtrRAEp)(dtKtB9o>?@f,'NRP.%O+0<KT9Vo-7
%Jr!Id4J91,FkXYg'[O#G4iQ%3hF7/jEMQ.LgSN-QSc^j(Q=snDSJe-LMJH$l6/hG>Y3:af]T_f=V7WjoIj-HBV;4_FT'RbldW#C;
%E1Pc*h>"R>T'7:\`=1K1eP"5=\Qcc&*Rtg:99K&@<hf#:)7d\K%L.8P7'q9;m7,D@ScTgQ+#en]((W3T9R%Db98fk-25+oW%oLr&
%1(q;nN@Tb5o&ODt*RUnZ-fjW4(t"5RgY?JKXVqbYZ=W@Z/skU$UCcE*6gn/t[4DnqN9$#\R+%5YEGQSI/c2e.K4rSXf6?X^s)OQL
%<RSq6;KH#l9Q[S!o<rebNsf97M\YVj[m/YO3VJ2F=c%Oc7;[%IafpBNisL+Id[i#1GE;;I\@mCS:KGJ:=&;)m7MfsBU#`]nQb2H'
%H1uR_6o_6a6gBf[c?[pbB/&KHpr\NL'X4T<P+/66@CZ&4Q^dE''<>1'#Z@T'1l(FF0UNjq@ZPE(*uU;X>qrOW*APT@%UD"9XSj6e
%lH;1o<Ys\?][^I)6IH]/+ArMe\RbL'?G@H)WW>u*7t2kU]jo_[^EJJnm3Y0Y=Fm:ZS1boY,XKuIk12GZBE2t*8nQMJr,=\0&DG28
%er$E?qV51R?D?`MQbs,dNfnc"(bq-M&4IS<hD^5IE@T$c<f)$%7=unrWOOV!L6G.54o)H<e[R`_hG8%_HR\s*Eg469Q5a;>;2gRc
%*M(B2::&hmktgHjE>0Y2LAU/ZB4rb_MHR(#P&U'GLSZJr=\VG-WEYO3Ssa'FUsG(+-R:0'aA/pkm]J`J1gNgZ#I[,=7je#V6bp)o
%Q\-^+:d':1'`9ISkfI"T=HN!DA\[^-rBl(?1nLlo_/`T4'B*e2,UjHM'QShpTpbNG!WAE<;:UF>JJ3>TIsA=jbbc"<O!B8iS;'l.
%d^>cr9Q"nYnH7IRm8;W$d,NL6K7as-!K\>t<JlOP\<#mhd4iPiFM$Rr?W$U!^Q1aH5C];2aU+bLnm8ERP=poiEQOgCakcq]No/C.
%pVXPkdi=tu0I#$%Gra;QW\F1WP9HCbmlh;(,"+fNRiX,;Q6D3KYdH@\0i"lW;Q/jd?SRC^Kpo_hV%b8@c1bX3WWYanW);3c#eAY9
%fnqZA7l4\;S#UX6i]>rP`Ws<;.T[G$-V;0u;)@Z1'%rqYjVC?J3tH9PT;nE7!u&%C2<,C'9@]<bcW$8+G$CZ]k$fM2d>XbW^!4W-
%.N_j=#^E"qPImtD7s[BBHT^*&\!%9FId9d@kYLM#^KR/lM-"i80l*[*Rp:[c@Q7Aka^upqhlIJ'qM/2AZ6i'_ee<_A`bJ.%!=J=5
%=GnD^YCWJVFlriSeRV/A*aYhp5!r17b6b=k_U^%=pO_",@C#*`iSBK@^p8Xld2gUM=Y<530m?ERGgY(')7XBKI+?2aWW2Kp.r.sW
%Eg3VgYo_$+Wk*Fe[ap6u9<$>=diDJT6P*+C-:\KZlB+#**G7fsNG]t[Wf^]"md=qZin^/QF);D<#Q:Rk@+I[1O\Z\5%`M('k.rLt
%%c0eK_fLtZ15.n!o^IH!CbA>&N'"m3MGA=>s"ik$$&MmoA$7BMRtA9WV[`Bb:9O@"FTieo\ca>t[omWMBq?cH$Mp?mQd-R2b:(Pf
%KQfBP4^_])\+;OQB"*RPjA[T^oMBh^la]d,@bYm'_/,!S/j5<n;THTTo!g3O-21N=Bi^S:>J,)na+Q.Dg.BM'S\`HWL%!*Gl5i,Z
%U9I22AM.'k3*uShLB*4G8gH[0Y#m<-4!hX%?XH)09C9iQI.f7d4nU1<j/\*:3B^<TBD2k+@BNDRVsdc;pOrN6n?urm<pN7P1lA<s
%[_dg,%Js!+RQZC+$DHRlC1'E@]FnJ\,qjA:XdH30VX=&\bNVM"AEY0f_fl9!\2G^T@lC.e+\Q.]^5r.cm8<"\ZesPs't"il3AkmL
%<ZkE;Qb>Mlh=!dN5Q1"uCe?3[D2f4ISCh"M`Hde2SE@EgSj6J",fUcq7)C7B+BNXI^nt4P;sHCJR3Y+n:'G=)2,MeM'DjNL#tQLT
%9PS/-(;UY6];o/N,=8K":H)6'qnu&f^i3P&SS2k]:Z($opF6kYS=9GSq5g`Eo31>p*)R3o=mKi%kg;u+l>cS7_?Fn_C=j;$HUPT2
%\h'A(j5c4#GrZ>Mq^hNU.@t);q,Y>>%5%BR>:hVC($XLkiLLd7<KafV<Kgq:poB;h"28u9kN:C_lO2qT8pe/il[JgaT0;`mlf)[f
%W9tMH@sXiFA0c7FFgT9B]>sMU2FMj\!er6URtPip?R6cW2Bu6`f0fr;18LRY:Od,larf"!"#<&JCcdUeYNUP+ChSB!"!1G$pORp$
%Ya/&FG2[MO)/nK6h6)K/m5369r>0Le]OY!C/3`&a[g]-GleT=feaI@05Q0$D94_J:=Y65MU*`;kr'u8`(491SX=WE+ZfIcib/"h(
%N:,#`;H^<5c+H,bKomUeH7,PTN%E(*^Eqqi=As?[%fV+>RFT/sd.\H'h/s2VE\W5&"r<12ou%:*nO>]jmmPibL6S;88cK^Dq27*Y
%q<L)k;pfXK)feXiLu'Bep)i`MMHacW&i//l=f<sbE(q4eVTIR]iXdDC6^G4#gHkdlqut9U.>?MBiY)rX/?Q$1ZU(KYpHN1-R_MkI
%n;,TW%M3!AX+ga/G8J@>N!4OOVI&&ug\p7XKuI6PFoUZ8q5LL=DOK>06AK,+2n%`h`Fl3WJqU6S79@VVoOP(kQ#Tbn`^+PLVBd(s
%@l'&kmOS94,9/OL7`._j)d.3p)d:c!R(^J(e.O`IScE]uXS]j#[`_KnQ8FE_8>E*:rRQ;0+7JoM]@B^'rn$qGpU2@R@4$d!G\I]i
%[&gEu&SJ`6iSVQP)/!G53%;;_a[njpLb)Z75b7%2eCN)e9)Z\^(uAu\QBrR<!bZ@WmJ)L>*UqnM2m\ES#Z*_LRis#8m4m4d\,49Q
%r%coUQZ_c5JB?V":O%Mi"8Q7`U&TA,kDuZ"T$&iV0%i+mZ[MD?Nj7V$hsrGr4f3Nb2BC@0e<"5b=Od_qFO>o'[h6f<kd#HEb?*>"
%(iZD:R(o30+7A1$bXlLVs)<;Rc,2D1"S_'if>#=D+pd7u7&P0C*kV8?_ZUjGqTjY8o5Sga+m[Z_kQn8T[@[8XSLh%%la?Au@Z*2p
%c)Z7sn:LK>qBK`SDDd5Y/F;[c6),d@Hf]YF6D_>r-_;H=EdVdun@ZAq:Z%p2C!$9,Ykes%R4\0u(!lpfoZ,9:\br,g>Y%'lmqS!#
%XrXCUoFj;,Y/WV@8\\_2P_%`<e'#QQc+$_=rf3^t=r?.r6fjQ.;[^2d-&78-PA'@DR[pAkM^1KsNUMudH5Z%HGhg'@7nMGq7E)pH
%!+_3\5L?SMWaNRZ?qW-2^H)J!=Jajm67Y?=TTcM-ciPoL60Z:=o>M<RgdHlGi**=/gbCi:8d5oe5:$1NL89RhbX&X.-&"pYRUlO=
%DO%s[23Z_=6><-os7Td6(TCZO7,'qR<rRD+%Hp#>X(&5jEK6!>-]u9/[#Q#-2(7%G-Q8][SbA+mliopuhgg7<1kDb-3d;rX<(fs0
%BV+6B+E'Q9<jDqg:4#EeDk]XW-p9II4R]Rn3W!+9@?+Q1.el2+4VI@eMs"N.]j6G*J)r+CIGBm!ii?j-+"hh>bH6Ls5]K\kk0H4R
%R@hg$0t7XZ:+ZpP6YWnc'<W9;]N1k"0s*>#nA#G0&V#I<gMW8tbl)8F=bS`m=FD!l?9(ls/rc9:)(h;'\<u)Mk^Csja/j;77XIFE
%P6TYLkn'@oirp47)7p@@'HQ>0`AZT/m!#4'$#EiIoq.t-s"^gWVf&[HlJmIqicqXRk,ZL)_M09''fGJ-@M$kiV[1/^lCe?Z"4q@p
%kRc6)U9GX(-:A"0GhP>O7"f0_6ou]B<0`D"1^qq"O!pXP&Aaki-1"5!XpkT_p77\7Ya:!%Q%AYN_u5%*58;boh#7cW_lS6l"M&GC
%1%Pp:Ft8eeI\Ju!6fXh$=e1K[oc/+eeh!f=0?/8WXD^GcOTYJRRqPs5:ur+F@r/2/Y/PHXlMf-DSgL*\DieBj?$5I0oU<sfXFtnM
%\>6!3ZB0+$q3b.V`[Z::DXSA&r6!K9p=PuhNj#RZ@='s[(;fo)e92?BSG(P^O6Fo+N+en*hK(la?<FZ-f2C4c-MbNt#RE*<[nf!+
%[Gq`DE]iJ22plmA7QE,s<-K1ZnQ2L6`)s0>N5gL$+3Q*>7J_B(=%f;\.fOQsO\X"u--$7kQWCMFT3but+&?eIHeT_RMX"gQQg9Hi
%@-$;<WrkOPE?o[:E0q9D\RRT.i[##VXd7q#e*_:B*m!/i;f`<7fF#&&)1<#s9_<K#Ys!iT'N:k22<tjP4(DITbIioS);O/LE$5VB
%p%N\#l[/nF$gr4<NM%A)3oK;UVap"1e8eWJN^i0&q^d_1DQTs&<q(:;9)ec1N=E(gC9cXF>2\=pCtcUiJuDN=d_h,;?'g>bO+XbB
%0?8Vd14ko)2tFX[;c2lZ#NY[6ASOe$Sm;7s1X)Khc$tVdW3:_]G\'VhjuQc]("c<aP`B]^Mh&8\.BIMIW7m8NT_Q^BSUFpMn[#D4
%T%853W$4O`/gl*3qJJ*(pc,X6gK@M2>=h"P_X(^L$h3s[Q9FMP8TZ,6_rYt=g$.MTI_V3c?.Um]:S7a'Sekrq?j=">6*WX:g09R'
%TWH6)7Qmi;?8uRd,M9hL34rDK[@Id)8lS//I%9Vm'uI7:g,1.BZYg;5BXQA61g9*g"Bg='nU1N\j7cK`h(V<[)^Ik=mCCro5)56=
%beCNA*`h$Z2>QZKhNHB,SpJ<nn(5S2(/ZM,2QF/O2/h3+6S_4b5c/a$kYG.r,qWft;Pe_Mhp1?6,uJYH:jZ23;uES7kX%r06;SOe
%]?VAn/U>?G.*sjtEmsIf*c]Dg]KN;@)!7OuhrJI<i0l6nlPFYG:4BET4k*90;=_VZA@jPP0GRCFra=$;>C:Y(560U@goL1:+BaM=
%#G&KXi(r88IEKi6T&dWk>n=P+Q6[frLk+D(QBq@'W96!IPH$p'i5Rgs#pGUUKIBH0#YGf^@u)I>?EQ(K+'WE+LeDjVl'QH9?um^7
%%OhMshVH9Y*9_>iWT?dOCu/Jj#[Gi%2j1Z=i_oNHDq[*-QCqaqeT:]RON*rkWsU^o@O_'U;7eLRaj:RZ!@S6_>:Kl8qQ'EKp0^l3
%jS=L*r5OGY?W6!50/$+=j4hVb$T%0[H<]^#Olc5uNa=:PdNj3.kFmZSa!RM]dh!f)p7?nD6"NcMm.3pM*k1\e\JA&ecJ`EMgfFnU
%U4a):+.Ucj=`-'2V\5aMlBj=FBkG2X)Xm]?$LbGmpTQS3*R>sUktbq,'4W6p;S9]pmo<@58Q5VSjIRC7>tj/"j0i8fFWS\MO'OH!
%6dR8:0?J&>.^eu!$T+qJUBn8AB[b^P=#H,Xdkm&+LZr1@rPZS1H,Sd!V7*s53HN[OO[k4<f+Z3mJEa]V9H)Rsoa3R0*R,]QQi=B-
%1rE_iFeQKQNU-D(I/:c'Qc7RBcQ9!6AWGl6I0UKngY7SgipG4j1FK?@bVNTL!+V#Qa;?htkaS0qo/K6uRl9e?6`[rLdY"lIbqr1f
%e>\t(+CeR"ee[>CHE0MQCRO\39tQ'N,VkIB4K@;-'rZtnjCnJ?onD(sW]8gSeQP6n)RUUW\M*CDH`-7,^N*ZrHhp`U15iWWeEGCf
%fdVbI.iC<sX?_l+#31Z./s.kDEd?i)$u65_`Kd$M-:tu025E?Eq%+/'P7>d#BoCr!"d`A_4uUb&TdXSu)8XBRk_FiQ10k<u-"O"E
%?BO6248:_K)i&t;isFkODg,>0:\T4=Ca.g[kO*@1V*i3O%AhY8nB^C!s7'6pp,(fN;\u:(k*;quk1YAA^f-;=@tb>7#)T_Rf_*)f
%\&o$da<i13eX?5gH\bCIetuAV=Q3ZNk*kYN%kKa&Su.E^&mt?9&BR8"&$(\?3NKU=%&c3r7p8g]j<ER.6ql1Nb/ai*S;hkf,[ZHQ
%mh,G:M$CYp.*EBu8lG;S$>.ia*#R]-PnX@6/nJYP@9*O"-</(kM9GPPNrS'>_nunrVaYo'"c;tMR9;fO8JLPC6-leHLaZ)!:F9=R
%#KEP3]K8.H'738V:9SVt&#'lA.Fa8^ij?kMR]75GobuY3kiM*mAq7Z6>3bR65jhoRZK7sHk\>(CE>!@6%f3S9:,>S,Lg:dS[<N5L
%L3C+<=b*:JMm(**=GJ]6?7!?L$X3d>bihK3`L"fr'),G&)lW5VFcH\00K$4M#p:b;?D5+q9i_k*GjWc[:6S\BTD-=c79eH\$?Z0k
%MI1c!%3HB=q.A7nV&6eR0i*(+eK2>,<U=Zch_ItudY"fN0iH;S#Q&dYUPu]el%QRpn0sZkL/s4bY=U](6bPQO="%`rYdiR(!mfHJ
%-!VAa/[W&E9&hLl6;'+u=ee(,>M9hfAj@P=LhYt?4"u!fkW<kFp[Y"$D'aHGb4E9EXmt8sS.Ml7$&a]M9m+JT-\f\76.&uXU$kSZ
%fNZu:(o"ECcCT#"#o-i@k(BM\6edneO$4;*U/Ij(2uDmVX;<<e51`7e9J5SSl;K\`oHS9I0#qW*+Bbbn6Y5+AkIYl,n(QtY7X&Z8
%ZBEECXS3$BjQXY6NMC]>D91h/$>[*MT=oGaeRZq1oBm(d+7dDoJTp?A+7(L,I46l&\56H;OTm&/PX'=,eA(`:ShXlZbZnq-=4PTN
%[]QR,=nQCF(D6+E*lf6VhKa?/jN3EE!s3_A'coH71j9qfkVg-VZJWL#22XmM/[f#soG_C^T/fnG4;9$dW.b#AL+q%M?'\V>30Acn
%/eVdPX3oL]46+%cY(q=`S/B>IM;Ij''!gb>D#lugJjhU3<<sLkf'G+g2-#K*IVtsaBPsVY>aMKC)A^*%J'pY=<h`[9SMYX;f-;.j
%0)(s8H=$+)$H;`GUR$:Sgj7NW]hOVT<N/Z6NE7-[Uq%-&CPMU,3Q/T6k$gYIS$o&/=g=/PWsoY0U@V,acRUs#!B0K8gfpKe!\2_r
%HGGAsZE=&3)tbuR_u].sY1La/?Xd<BK%fRReJ9Z:<e5i7T6A2fX^CCK(A!L:Ms@QWB1XuZC@Z.1\-Ymc)nE,LG\^dCn5.H37S`MY
%Uf$,>Dlb@(NGk2<eHXtIF$+C--kXYqHt+Iu\MopN[+YrTnQ*k_<o,i<%7,5=9dWL\WpTIh0iC\f7on3S()X/f-S:a=*kM$bTr<J9
%rn\E-_USq-fBjHJ3c&TT"DMkYZh^>uX6*:/8r1-fMFlL+*m%%I3i`@3L9Sp7C(RfQRQF80;_Ur?^/\J*WRZR7q1e]2B-$D'd6et?
%a.ZMnY`qUMSCEf^@?8oujtI_@AL87ZPo\>$h-NS3XNXG'YH"0p>Pthr9a3'Zj%3[8-JH`'FXYb^7/M4fge]59j>s"^7\o2H%YS'T
%amCdICrBkT4`nc5DB"PV3lCle@ZnN9%<2NaB)QAH=Bj1EhT5gE`(j7kaN-l0OF+]2A36'XX_`aKepH6M^o!QZ'.uC1PHed*+V/d/
%\(<N%[*fD)#!/G.Coa9"Pee?ee5g_a3BIY&;&jqa$>Z"*aMFWuC"X<^!tRfu#M3IuN>B!<l?>lAs-cf*@V)FtOn')&]0?L:E<s=Z
%oQ)D?KFUQg1OIAP9.<5.ZMCK3lc6@Q]!\ZALoMY_eRLt2:Qmd/C7-59o,&h<'2nrC>GX@*N)'V8X,".!"Y<<M0D;cql;'B:&mr$K
%1X:"'d&LL&mG2lWR]5bV$:W-u$+Rj*@D8@s<#su'Y:>=N#hO/O7?-+7'iHh<DTqSr#>nIa+_8$3.GbV^P;"FR*%hoi@""m-O*.4D
%TTTt/C:paefI+5=Y*PjrTBT2q]Hn=ql!W'U]%)TR/U!aF.u=GhdCi]5-Snn[+C*Y[i3WBBB8YHCOia5I`G(4M*[-QCpt,8Crp\_=
%7eM5P[@-<0-Wb02PUG*8370P*r5K5c,DZ-h&5Q<2%*a*61\\KO7X@BA\\V#tOl9<'B^ElH@nQqJ6rhWTolaMAKM@Z\ci2Mp,WX1;
%(^\l_8P]&jq>?QX>eb(9@n.(Mcl[&pb',5F_,?Sn;Z'g1)tt@"XusXb&?%&PR39Po+9tUs,V%]mA^[MR?/7ZKV2hQW.W)4^,S@*6
%mfQqn8`(Kk//>&0-C@';Ts4S[^)GoDqCt;(+BW<N$I<%iAFR5f5`7E*(*t0jCr&hmeBGQl^MgWfr_XFH@70U`,,,RU%F'-7=9\!J
%NMiaba4UOs=YL3A5&EU(>DI3aQ")iV]hA7-g:R6&]RFbAert+ih-?a^<M3i=qQf1#%A60jN@FR#9,FT6B-p?^H]$oF9;j^>h_`=%
%&@3!0/fDTmVT"n:Bk$`q@b[iAIg*c6S8%fQk/o*(hHcl59gu%eN/!Qp-7.SE_B\MF%7!o&gP/&B-EPoGQcjB_[2!t`23R",d?3]>
%_&hh<-3[&r/&87`3npT1:k&\Ul>]Pn3X;(\)X#QSgYtj]I(g$H_R:([V#itmgcfPae*D#g823L!38&P9*QJG:+W4^b#9Wl$3bTC/
%eUg1K@NkWQ\83A4HrciOZM0N14.=dC$Fb*[12VfId\ND5Is!c6gU-<UchXdP="N#;,i*TOcq&0o`B2i`KG]UfFocc%M26j.qBmu/
%[1I]5LRsl98>Rfu=UhP(/#=*N5k'9J*Kjt`c.`?@$l/:;',:Pj$[ZCEi-0B`?M)OG!@shZW?ghZhuH2HT;9ii+oGsF_J4"uh?2`A
%`pOG9\Y0U=+Z?!\8AYUMOJ,_8CI:Yd)G]rr9ddDLemrJNNbl/2Wt^#A`%9oi9:,%dV:LOQLT?+?Sj>Xj%kooRFR5/i_"168bqXGH
%1OEA+B8PFg&EZ\MX=7"FM`@23H3RM]l>fI`TJ!;JRb>WK.01P_Uj?Y!VYqFlAl@OQ>Ja%3C2E^EF]j?3#obq#\[(i\PABjkgN&9s
%6htF0+a.OQ@+2b2l"H4>R4HJ=6qK7d"Q#Xf)d-h"[\P+K$;\<!3?d!"[8(eJePZbOO:*Ke-n'2KX88US+"CTDq-jUd!Wsefp7mdO
%cIX)_-jGB9WOWBaI<ZVY[mck/0(*U1_7,qG='.ic!kEl_odC897oo;6G$]?lq;$o+,#4O&.>%FX[b@NQ.0nFfGOd+;F&&&Fj,U:,
%%"/a>:m7Roio;LT9XLT@ER#$IBQiH._s8B!FIgbr7b`CI9UBL%GStU+=iA6+6.G8r>F(NpU,;Em>-`uSeZ_HfZ,JfdnfH!/\fYrt
%BD"md@In78C*V['pn];<>7nln)+68G+;>9/s$TJ+:5aHb<lZI]F[&_WI8p4dgNbePi,I]r?@f<q,A8:g]5]`4K%?d?FCGj;a3$if
%b^8+LZVcc-?`6_b'[%Hf9=%:Zd"(s1llMQ#qEK]a+\X'EJNJMSL7W"GcPjc$@Xe%k$iF)cZ;$WW++9<YC!)\>i!B*_acJIlId0;#
%@4E0I2="sae!*4\C%'b7qtNcVXtUf!NsV$o8kVbP-7F3is(Kl#R(b$'L_W[8*`LUt;qSBMQg#<_DNt^JZo/T&/efOngq4NRX>;uU
%\_+Z<$prDmK1?F'J:8LH5cTZ"Bt9I&I?>`I!WAe\0\l6ek^h!@+_>dF?](;qf.+_@Yk#g_>(Y=E4cHu,6dT\^C(l>S-[]oK/oX[J
%#.(Ie#&Bs<OP$r+lgoERKr:uRUO%p#C<qd;[;6ubYc_nrFM2Mh,=+@s5H*r>\!VG$,DRJp[l1MA?'sW).\QUf@^Xk-eT"Oo<#3kS
%pr%ManT.;eerZPn+G1YqNP";T(!]Pe[#L@lL/@J7`S(>:mPea*Lto^u"R.f)G,[9tm3%[=s2L[@^FQiq6c>&Gp>3*YO.-nV.]Y_7
%pA=:B!0QctIW)CIS+Oj]R#[3uL^gr7LZf07o#PU7fhSY\_if9iXsmJtmNDlhYrNOB\h3epa:[A=Y'iMb3P>TrD'A@'!Q2;*h3:2\
%[?U.Ti+q6Jdbfp9cq`H#c!JP(ILW?2/.Aot';_Ea]G@@"76Q("M3OIn?-[0I%23]U)PYonUq(Bi-bLcg@2nTP7r@V];&bHpo1'k`
%:)tE^n8VC591&I1a$.u)/,iK#FA.E?:I%C0e6Z;pbp3$CV5\IDQp6:7$c5J4&NP&BSW&KX3Ju7.XEm;J96NH3m<]"^O3MC1]UP?4
%9NtV*jX_"Q1+eDTDiaKg=AQ]A38?X\^cS:??Ci\+&1PR96W8gpC"jjJ/#lsr#fFRiC9&Fs9&_*9R2#_)?"](Fptd[m)TttX?H`%+
%X9oAEb:2#ifpTPEa3.)[D_%M=LoN/0JqXs=q]Gh8GQ.cI&#BLM>Y"k^V7\4oDML]IE,<5t.__ga=(/1o;m27[I!"dMCXhdl_6<S<
%Ko\l'jk@GW#b9)Y"&8`hGIh-=@_Z8p0luPUM>K?4Gu928m.F0C?9L4eFFAiW/'#-NEZleYXbnD-#5Lmli+6Nrr/+_YY&>Yc`<>^*
%rL6UZqR:s;=L+$?7<nC><O]7cMW3kR3rpZ_jC46j6RHa,-bf^$+Y*e(,?*)=qpW0doN_:ro2m.6DSik!A,\;e]u%hGI.sq"A2<CH
%rR(9:'0ARo2ei=bcDL/BgD+aR%2,rUAdb=5dQ/jdAk+G`]u73&b8T2I?bXYZ\,VsG6K2L(ZV^#Ps6I'P&$>;us6]!>Q$gHABu4Z'
%2mohc&7&9b_Fu#b[CaQ.J4"#2fC/<fk$blKA-U@:&KciC%Bc$Pn;4.\8KpkSQ6..+>?oVY0=l&NDJ:`8P0JM]9(d37WRVI3m!LV[
%\ks/Z<0'7r,2WLpgh;K7;IG"LkVN8;cT,*R.Di8^K,X5o.ip99ba,cC3$mb+<JihU.QH-@,<AMuN;N#m\pNr4bC2Rl=0m6;>JO$f
%HBHCRql3a&JJQ1oLpDIap[L=<BfXF`O1+6LPUm)N5jQ,mXK"rLJ6WO]5J)YjP!MmMVM_6Ho!?ALBF<cDZ3sN"Z@uW)"-/Q(5&J?`
%?a0aUTW5O?GZFRlHc/#$AK\rC6'0Ea&WVH4N$iOCrqE$p6_;&$6Pel+^Y+[eBa[CfdX$T&4Z?TuA::/S_N4EE^Ks5k6sc?afCur8
%CDm&H5s6oe7A*_1k!re[A+O#LZU,!=HHg-p:'Hj,YU"g,9U\kQ2<J(^)Dtfe8P3d_f8M,VrL//*1%`*qo+Vni,)P^!KRUH%Oqg9o
%\-5kqBs]T@%106S@Hu[G&SN-R0R8t)aOT,XQ=n.7f(o9Fk-qgdd>A2#R[&J%ecF:JNc#C]g1c[$J,AOB+'nt;gS6MDnJ5G2S0Dm(
%$G#S0kG&A#V:kI'?K:NU\"33W#ZD#aIPu-+UD+g7q6o:5q,$FNo(N'-#q__)NlB04P[\e!/G=8SINZJ5)Q*nq?$1%:o:nSXpQ@f4
%ZA?P9A9;%7ph2$-)q+(6X_ihA(lApB_975l7*?,2$GWB0*(.\aAr02)7n4o46;otRUjDociUj:bj0kXrMq?%@\_Cg<n1Wkp8itPm
%m:D(%e3).nHBm=@ifXpKec]W_b#3jFNH1lW]358`Z]3i/2K*"RAM##-G]fBod/Z4,0^]s1OsRl#V&$\bHn$$Ph4BTeUOeqNO>4LV
%%ofW!AX?cq8_-^&WC*\*H$W0U2H2>gfA?=#OcEdKUa-Yb[2>,a?io)kZf%AX#NY?9C$#-%CoY$U&4NM!3NT/YEr,@jhp9T71]r5s
%*CLO99YVhKlml;J"*_[o']iH;r`_Pl<H7`8U4$WU<AE1PE]LQ!9-[Y,fAN!A<Mm<$EcHI5aLXk(GULVs&>kB@=F>Q17cQ%;>6`7i
%(TnX;`]e;6W`]6i(D&6!`22[Y(-Aq(k"(nkkHsS`-W[g*pY88[**_bm5'i,nnGV/?<_]>KYbH4Kkb9B*:bdiR2)7]UK1.W`pkhf*
%?@kMWqK)m\<>Q6`D/4FqR`6TEX2$[4LGaoi5R7Ei4RS]<*h/f2ld=2tBLj$d?5-&3<:u(.8\_'#h(ni/bG^kY9dO=>1)jrmnU'/C
%h3XaD?)$XEo3Q`TXW+,/)Dfdp-hZ:A?IgIY\)YpPNC)gOUf0t25[>$mRRj_j)d%)XOFnGOA?-;rd28:r+o.%loldNZMNl8nQDJ-a
%`1S#SMk;5fGn^"\V0AFL9mfBSjQViZ2eICpg.\,ZT)-]\9ZQt^ZLeO55Ou7hFTOTYr9"4<'1M<70mP^S?bW^'HehlXiA6YZ0.Z$1
%$MIb9`rRn<=1/GWO=0%j]uumhMZ*?$K,%'a;lEL==m7H/B#TE,pJKKO.%!fCRn2j@R_:U=MeiFej8D'!r`/S2^l7u*4.\RR7-Pf6
%)/9>C3Yok=8lesRnl"6-4plX?9:HY[jH]^ETW?^G<E\qil2;ua#+O"(JM1u+&(q;DO4ql6b-&C5ed:6[PYQ2\.#mS/SB=Z_"2,"E
%i-")DDM7CO.B@(%+SCKt"_O;jnuRN&m*]X$3V7u)BL#qA^p=3bWb4sR8]JiR_+`EI,coT^^&,7q-jeK8Wm)keX7@09)2+7T!M[q!
%'F.Yd<sk\fUeK3,NTd<DbfJ#q(n?3KM!qTXCJdgq3du0j^`+QRC`K5^igg0e[Np%TV@.\PK)9RUSaDH"G+IA$:mgm""%(Z12)j<\
%NO"7rrVFDZHHq1u\">.cTLksrCumfD<"r@YWd5Z<\mIs.\P5&J(o]eR-=S9C"1`K0,pgdg3FL9(0doC*Rmnat?DbtD;ASS%PMEi%
%q?b]#o^a8Rlg-:OU_\TH:=hT"J@KgqmPM6!QWL'Na"Mg(r._MSD:+=rpW^((I[ts?-96%)>ZF`pS0*cM7bmE:B)p_,PN1$WHr"dV
%/YTlsToPgDjDFh[N0^tIfTl@^FioP<4\G/KL+OC)`T9!_!J'$$;a]24]t1eS0XAX7o_o4?%JX.$1hCgV=C;_7g8)TX\ms;g0Z$JD
%P+,Uh/W5-Q@:Lr/lFEcR3c`5>?6eR<C8c"E(`$+j21N^\M4Ug$_)-S)*#p;6nU"Q52^"N%Xtm=KQ0]lC"+]F.pOk2)-SD0Hp\QWA
%NT*BlGHJe9S^GZMMR"7,^8g*Wm:Gb/k6bZD\(=@U8/9VKWYm7u1QCt<QP?-4]uF:n#nFE4M"R.oesO]k`??1Q:tFtkUP.Wp`0]f7
%2sno]$1ouc(g@R"i^`Z$SOH4Umm$=i=^)-:'^t!8b]PL(F&KM/DK<hZKg9J02NWhD8+M2EQgsZNY7ih<*Bl<tm3C*_db7G<^((h'
%lk=6?g>TcrB!LjRmcl\SVuuZ9HEEq4`gu?KT3J4Y!A!d\nke>oJDIS\'QABmJYBfE)d)%I%2h'2)6?*lEU!h6W=6.e=gk\qE9^3.
%H"5K\*n/*/%$K;/_;&\uLG43DS^&T'Q.&q,$PL`O$aYDQ(K[<F1SUKSeUn+L7[/r/6GTTeTqFhEpKR81othl8n\`t4:u4K@afd5M
%D+2)WBN4.)V,3jfoEGkfMp?.jmKpX13Rc?nX48%$]a[H^5dT_MM3s$^1n/h^B&j?Vrs"[j_:DuBAL4&OfchT)O:b^5R7EXt_%AXr
%&`.BI1BrjZkP*m.1ISP&ifk'JC(A_-*q60cFHU[X3[FqC?k^\PT4hQqjmDJrj)BoJ)]S1,?`/+sVBLt$;lZ8jNQ>u8<4=X>b"$\O
%FA-#8SgrfaRp/;mg:,uScq2EJ1;XA$c/cO:5Y!8`':Ogh54:_`'6j*p?4ECgU;c?uE5K1).P&-HCTB$*g%U@sm1]?&bM2iEXQaf%
%2AU[D%aa79XHuHHM=tMh$AD[X$L4F<(i%R?^+;0j5WG^B)gNHFGmq4]E:LPs[ht-+9)P^9Sg`=M$oc^C^]2/1.O"o,E@U*)FdWGp
%QWPh(?TV!ObO03i>OH&VY**K>/^H:;PRP31j$3YmQ":Dm[XJS5`h]*PM),pQ;8Jr?JYok:o+Pe##G\*@?M?#oboZ'm;g"UPC`>RA
%'.1U=-JLY=>C7dd^[NW8'X0,O6ldl*^+rg%pStOC0+fQC$tq#APe%YA&a6Q-R`qQ/P>BUoDX''$.P'Ml[F/?>!B[)Pg<(H,jHtM$
%f[Z)0=^qZ9MTCSFF3*&d8JAURY)l?_l=rW5[UlQP;tJK8&,[;S7LijNCe,_;CR(\\jpGIHF97jYRgXhm^0XV:mnptI)C>.&Z:(N[
%[OZd2=56e4CDsDaJVV5k3Xj:NluN")=fnnE(]/B.2e6<oR=/lj;n%UK^&&/GA4ZF,s1%fbLgTIJ67#Ms9MfeZNRAWBl`hJ0.]R5o
%lEO`lmV[FKrSKo,d5srdm_8IL"?L\#J`_RXb>9F%K8CT\7q&lM`sksY(CUGMTh<X"B"%8O.ZJ?)6ECrFOhg3%`J(A6`R`#S]mrLV
%HQ02#eJld6#HH:M!JF;l-iF5<a3]KR`2@RGd0A>W;KecbYt.I#pRiH[8,u>AOiK]1k>-\70\;?`!42,Wkt7J6!36Xi>jgtd5N.D2
%nCJIa3\.':WC$nISK^;"50=-92."j?`(`G-[_pIm7cKi!N=kQEZm9ck3PQ7mbOh%Eqe(P;GGKhh)fVYFkU!V.4=t;^_s%tc`-r%C
%7Mm9nC*0*,`*B1<%aKZ<K]$W:dP%js_EsuVY,Y[4m`JI.gOH4FRiR/t,ZCOW'oi/3V'h9KUJ-B>V_c*s]5"8XXFSX[S;8AL;kA=8
%)4#rM9?!Rg%a'KtS&9sI:fBEV,1`mB``&.d)Q=&u9S(C.Y7Qd7jos[Bb'/m08ka@3AS@&gD)[$_nhuT,1qa!U2?)>,:b#.CVW!_D
%;b0k<1fXUWgET-ELBl`B";h_@[tgQc6H1bp*X>CB%Z%c3b<YD929CC`Q6h'S1lk9".b4D5`tY$6.Y;&(B9.hBPb25Yp@>E/67?FT
%4Abppn-<B=K\b,FC*c'FSq(%W_WR`;frgsW4YoZ"nu$)LE8G+2gD]fI\p3F&_'<9@6b3LXi@@&.3MUVP`I7[;[5bk,b_aPO-(34d
%\V_Nrn8g6+!r>L]!,LarDoj!Y=XI@Qp6t`[`Cj?PS"ViW,"9Z^%9085&_U\J1PP>AchP278rop@rd@oHruc`=+*((;Gt<t;!%lX9
%YN9d"iU0+AQi84l-ZN&i+AnejQ><c?H3>`g<)pR8*H=u!;H-5j_=7n<[q41<$n5.\=SpbT%O8&0FgGEu?R!!-H3)P8:2IA[:R6c+
%Thlrn["Bl^qUsg2:S#i+YA<sZQEeP#Y?FGu.id_cbt76@L4jh4]*sAp#GGu(XIdMLc(Mj]"J$f(<0oaIHYhXD]ZrkXr]m;u9$16b
%lXA73q\LP0"aqU0![/<O+]Jb>/bIhcP_-o`Td0Wc:)c>SQc`+_(i`_V.?kH54#1fu%&[oaFKcn2))XC-=-hYW)3_>]Bh>]dk5o%C
%1]McX)WVUFE=$BDAWoh@YJbll"/i5ZI>V*sjk\eF?!u+pDmCS72:e6T]$K-\!n:=!7mqX3!ml($a'hP(qMcY>+:8E2QlQZH>XWn7
%WKr+@oaph_^HPT3NeeBA^^$ja[Ljs3-0gq05[=3E@L6j6Kk,>?'s"SE^A4X9B=Y`l0\,CoHR4H19T,J3=Jb[&S26_;Tj+I,S5*6p
%0u^5YYcEcqVe8a<>.*$MMFWrb#_!P@k0&iW7a#9P/':q-f@_CI5<#<8U`h=aKBn35ht6)i4[l.59'ia8)n8u@Wt]1peK(jt"e*47
%_`GAe]#U)lKP'Vj95P#\Hk"&ZN/skDfstn$D/jjb9E#.`iNV,6eJ76)N;=,#onWokS5E`%)4!7^cUBhF&[(YV?'fp[2n%RO1J0pa
%0TroFVLBV_#W>RmjR#/C5CX$N1m;!q/k739r7'O;j82/<AYAaJrk"#d[#+U4HZ'`?j5ukl0WoLI6V"sbUu,q8N#t/=V.<LTSo*h3
%(Yf9F.HBI@KNhj][DXZe6La]c=EY^73G,)4f3-B"$du5hKrgMHQJ_OkLVCms>pt48Jm-R^Y@1(?[`I96,hjrG3XMB.rR`0i]10$q
%.c)-mXGhfp0$6t'5tHV+_JS>PqVf!T6C:m^Cc2e]pCDc!+[Kp20=tkCMLmaL+-Fj61XkCR!&4b`acY-GmKnB'#HNG#?3mF2W$44@
%mG:Z%P)[.c&5_b;Ck$*a5uqKO7XJHX&e*Q>:WOoM:fY0VmIATH$QuP0K5G5$>'?6$Fs7W(V0n9STtU/K%.7Q/,`_q/\9H8TLX5:(
%ju+QeFnUIqc<l"=E.b:M%"_AkTiAI*LV4=%\s*.c>K8Osb-,:NYjW\(2WN8S%o$qer9i)JpomK@V;O<;[<lmV(><p["ZNb==(F:K
%/KPK=AA*K4k=6j==IGD,5!$rnd;GKeBrl*]'Khq$6&q;NcW^es!+T9dNjHSsK)L/pi$%W4`?@<?2%b4I=hCYf+r[d8-g.G0\GG8_
%I.hn/cfr*DeC-[N^_@dB*b,$X*g0<#:&[>;`G9ga+EEB"s%>^^b?P/1FDc60INJbY9[*9Veb,Ok1U&[E>EF,Zs,;3tOSd9lRP=Nk
%f%$E:=peZk*lL^4O`b04k!]epfMFg-R'_\`Z*LikS;=?1(k;%#)PacSaaA>j+d.?YoI96804.qfRN(KMC-o[]FA86"!julLPga&S
%jT0!4R>1*ro?_MU-PoZQHpV7^i1>QI$#Q]jg->?dhc[k1mu*qGAg"JW`Z0F,JgjN/Jusp2n)KXt\`:Z,X8rW"e*R/F^#t,<AJ''0
%_U>W*"*'nM%uS<oT(1u3'L)O%5OKF-(916/[:`+3'e],#^DeK+/X&lR,-<XX"?5J8_M*+,6HOIP]sr+.#&#lR^n3i=qB&*(D+U]8
%7#9+OX//o)6S,HnH7bh=Hl@&?QFX:V$!TJ\#7a.Y$u6VU3ef+[>A*l[+$TO^59\BXWNR0?bG"4hX,XFAC<YRtZDN6/M6]E5TrX['
%"-U5AA:!-1`;Fde0:<339Rb6C5.dAaI:F?)QsZ=dP.*t6@rD#^c!#tBXWW,W!`5/<i7_c02h47n[*ur:Y11CU*Dn[D'\B@)(<i\V
%3n*Dn5"]:5YQ,h.Y+m&g\\:[[`"V!FK2_iBi0ii'TL>2dTH1='<emHH/%u8lCCX.9bN;BgM5$j90$bLqh.uADksUf<n%KgZeA?p?
%7`"s.YA(ki]^P;1QYoDm&\'D!$Tg;'U8cN^\Mb-d.X/NHSH0hRqd]3MLSrnDUi1Gfd\e#8h.@&p3`T`n[0mn>lYMt&\<#RETK!Zf
%".rm/!$'p_Hs@8Z^<p8Y0*?Xb_XSZ1eV[)oI^B'M1m9ir$$E">Hgrg'G^6(L7+eK0XaRc$(/s?uU5,IZ@hfb1Pl;lCWHO3tJSNmg
%@)3UOL$A.Y-ZFlXh5=<k-0V)[^#/9G^!$:eJaOI=(sCG\II28*EH:;)-rlYG6I>2=fb><Vq[j,-7oKiL(5Jo2%3\g*!.GpqYoX+\
%"a?NOVY)(BRlarg<GI-C]l:.5Dl?'$JDR*r.#`%#Jjq72A*bHjU7r'd1[@r\U/5Bsi#i'rW.8!'eKtHj(f[@>%D!kgIdcrki@Tr:
%%(!VYNABQrB+b^,+hFk5JPF"H_J:!@\L^ZC3t,eS3OVKC:*ptt(-lq]_SfP>!6\oH1;@@H69MpO9WIU7F[r*a-:QWZUS%=_?%T5]
%/%!_Kco*&U)bN>S]GJ8Y\*FoYK8huOHGkhTIOeBM7Wa(]DI.8Rg%0:2$:^Qma5;or(ia>!Wje+XTjdid@3H>bblP$23asf.KR2(S
%Y[qF6D)d=pbr+/T-VMF#PWEg(GJ!%]6^b]JLt515I=mY3b$]?PnJH#iC4+olcKN&Sh0h`u?@K>Elo)Lu035#*;S*/h\XTG\00NVK
%^>t2;f^f$$Io\c$c%)Ha^^0+CX+=<)WEY.(<u$E:[Fq&s/T0s1S\,"39CBp]'iuq[OuN:jaUnp^W&$`,7!!+aX[\BH@AB[7O@>8`
%QUU$7:g`N(Oj[Qqe?3)k/AW):qSUG+TtUjqKsiioH:fU?iU!3)D$Z<C^CrhJSBDqn6>t;jPi,a\i-%Ieh+D5/4sM8]SY4ZSTTh/,
%mfq6Z1762tB"iKa+Q;-[2tqWIeRCjF`$4%oSD*89#E62eina(K5RNAfc$=OWrFk\H2!7"Fpmi`i)C=qL*KT_l?:[D1`LGbjCp367
%j835ortf7`/XId%lq<^Q3-!F04T$22FiN)RZ!li2AU@F&JSl7KiZ&)O>0Oa*PFSMfhh_!VYm3l>#.:K<1qL^P+.shC3`7\QeD"4Q
%&M.H@a@*VLMpapVE1qCT.e;4nM/*EjIZ,-V.Q5M*%V.=aQeknl\a:8%atm_l)Ak%&@J1BGZ^/+;PD#7?E"37fI79+u>1tR%^p//B
%HCZjB%3"'&Q)TlUD*:jJF6ZW:8EliEQ!c6G]r3=BLs!FnQVE?6p/Ph3\>uaAGC9k!*n0)8COiNnOGp)NG$EJa_0l.!9"c91Q5;65
%q<]tW+k'RVjg9@CN?*DVP(tus'o%i-RdCgtF@L6cn#hK7oc@C7Ur46YVJj(E!Ee_tj!ukcKn%/nc.Ih6+c!&-hTF"ic;P]C&jKGP
%4kuD`G#YLgk\9ZP22n\Ak(uW'Mq<=/o#Dl(<`dGSi2icFN\J3&^qC`@\+L2Gh0&#,gc=?@";dSS>2QP2)iRDMk#Zdp1fLICCR-SI
%XUcl8m5I]nHAP^%1Q8PX`-t;cbEF]Th2GF403D0b<O[]Z-oN_pH^Qdq6^ZT5n\H$^Wod6?[!U0nlnGC2O;`]GR<;1b8F%]GEL@HR
%:hPJS9sa3ZmZ*3da,2Gn39XmUQ5s#mR08D'Pt%PV_ITsa=Y)O&&;@_o-9Qti__Q$/1F@RYaQ1pa6YG1`(oXl[F1nSiFr=Q;h%%kC
%G76Dd3-3)kmrhK1:Wm&qmPY;O!6Bi/c%s.RQS2!%&a24F!?n?^7/K<Vd/d\PF_E9UL=C-D\_&\]i3JLU'AXpoh,GIqOEF3g(;XCD
%C8RpQrA6Z@,b6XL@M=Pu;"e331$=Lrm_(-)EZI=:e5Xi,%'MG8];sH]G)3_=3bN9j?Et30^oTr0;XPc/7T62]""j*-V8'P\'&n4Y
%*QXh4<1Tu<9C<ua0k0:GiV&)![$sFRFMBX$fs=8\_0s2>"8o:.l<.8mg,:Yd+bibe9:VM*[UVcHo,Wk[IS0#f*Ah)cX\kf(ZhO"^
%MAfth5.EZ'!R*1$l`1?ZCP"d4TV9tDc_V.C`!Tn6<)9Ct^XNiHpLDgBJUV?91/tm(KlgIJJUK\Y=,VT,gGeP+_PVu$1p;PS`@QCU
%[C^<`P%)hTlt!bV;5c3jRVT]M"S*f0U8kF\o6_t.FfX7N=Wu:"U1UnL-Z6e1VLH(LY(VQC'sHoUN<Q/*9g2X\Yqe[Aa"Xn;2f;hZ
%>PUHF^pVKBRjNj(0`;UQGmTf<"6;<bKHjSm$JFQ5M-IhM;+@RgW"GlD"oE+H_'f*GrDrpg%^2qN>R]iE(-=.]dWo.H"4'J;9,a8\
%`1H15A\#rd=pil6E5*o]O]$7O`9Hc#a2/aqctDu!f$JGWJHWt&]2bL1I?n`e&Bc"KWAdb[30\GN[!'j6NmJ!J<h(YJX@^na(k5Hc
%Eed%$&J"&?23:GoV$34Cf[cJ-*41rV5>tp\jDK5e78k2_OkdHta?$K"WohKq3ManNcf8PP'"h^f[P>+1ps@+`Wfn&FAr(?DXPYsk
%<WE:\\4_XId>^oh,;3iM>&kO0^SjHSBkHbbBbFe%*8%qOVW]M(77-Ar7b3QQdnUEr09_b=6HiZ$2m'/pjtoScbcok/\328S<<ZHF
%B>j3WX.&?5i7XKH@??B8@GM3NY3YLe1EoHfltuelM9%F-6QV&+$\)!_#Oi_5Cn2/MX=HhY9?Z\i\09mChSmT"Am$H6D&a'k^QI-[
%:RV"BXtlaURFsE=mk3achtC_1gmh/,4V(a+I0qFuN\/f3MV=W4;DDInjT-NhOWpcZS<?8l\O*`1FeEolZd"*r>PYtRq!CVr:2hC7
%rij^4A1?]]]aq$Ol+\JRqHG@)%B//$$N9<fk]J<SS3q</L@j`O>qa1j-Q?H;Y>@;bI+PlXA`fDFZi9sQ56"O^c%jDM?M(>WD_lQ2
%-\Eg^*d\Qn+X9a2[S7f]9gQ1<CXq)$0Y79?`%unFf]0H]3JG*9B<$AX0XLn:V-R(9538l%RFU5'*,_uMP>6A9<4P3qZlgLj%49/C
%Woml42H57TUs=Fk!^gN7/""2>]4EH]j+e=m-%Gs;n)rmnoDQbI=AdZtJG0<la[ruP]LT/XnF&M$L["VFBN02i<MeNCJKB"C=f8*H
%enC,bd'8bJFR*USBsbn/+j*":;)CQ8!-9[@P8LEb7,]*,,mhPu$n<&l?T3]Mk29Tm'9$$K8(_jk`Mpa`lS#.-?9uW2?\'0KPn>2o
%QJ\hT,obuai-_:`X\;3G[E)6o)3IWuSNU]dTRD0tm(uDF!`YM?)t,0N-]ou]LpN')=*'*soCNQW7L=*Ua^+,[c(L!LFN$8m"eS&8
%&FTD]<N.gceIP\1M%6p7rbQs'ChMoi6sEcg?:1K_Agmb:7tsXAL)q+!pXYQ&c6/U;1.T\ALV/a/6j(E*1b7s=i%CMuY,;'AG\*(r
%;^\l&n@Z>qo=taZO#_EbgrtaaY.%qY['DiZ/',"Z/+@I?gJt@j.,ZlMrH$WDAl$hr;-m*eJ[<^%U"7!L/SC:T%9Yf5n#]/#G>Rll
%)4isYo]sFdSsg=6XRGkY#fe=F2uW$)+qk!Xq!P6"7Pn:j\rtrjDW%EHJ;)Njq8bm$!jTU(+Ek_CZ?#\_`uq`83`@6H^6a.*JnqfA
%QT`bkag]^W4fDm13_)JI-Qsn@PoXuJh:J1TP6'auDNM`d)7NA]@.YY&L#,+mbaH,KRoDU2OuN$0#Mh@XNZBL4ItY5Ep)m3^Ei_Ho
%:Ya#lQj)(qOaV;Rk0br\ng_?GJC_P"a#dXbQKB"=,H0&X4)(Nk4=U*4%<)BsHMpfC$Er+^Q0*S5(aQ:6c$qV#Aod1%CISZEn=8>_
%\3TKSGOKU[96A,[2@E5^hpI?Mg4A1Z2T,2ta*D>!)_IA?^bL&h1<\clo>gSpRYV_l`GH7V@LKh4Ijm?KIkI0=C2*/%2t($A,]MP]
%i#s`o)ABM/E`kZb*m\\?`;7P4S?_'@7Oq3,bd"+K0CPO@2=%K`6MKWE;#7qD.G?bM<DZ#Zo@TBFE5Ic]DSG_P(O+)N+46-W#.Ug;
%Giscq3MEhMN8e?j]RcXicr_<"NjJ/?7O#$k<nr7f7(]t<9rl]Q.48dFnN*kqAu.P=H2^]qo>_A!q]A&PljV-W#6&/fm]7\cloOBs
%mPAIOYAIS8K0IGnfl&b8s&*>Q53\$H/:"3E7O<Uk`HEF0"(3H`d0^d-)_3'4M`Z0<8c7"a!M=PQ?cAW1#SB$!.jR,gMQbK&*u%>E
%\jDO^mE<0qK7+T%!LQO4n.C"g5>"E8TGj<uPYd:M-eI-"f6\9Gf0tIkVD>$LB/;]&UKbcA.pD`t5funYPN8:QX=T6^R9*3ZD`L</
%Y_L_[cG$1K&2d9FpT"L;*PMo1DPpJgqi+]\I$NWVJK9i_R"bF(@Rk:/LC:<Bj-%3'r2g;d6uf8L`GJJ\g1f`Qm1OBjRsdq/XD8Cr
%*,kJg]aACb.H7!t3Eh6B?l!89"=_GM_cY]@6i2Zd;m,QmWT.:\]"si5],"DFX6?(R3.qV:eB[GbPHES+-4[UhC1d3sl5Xd@T<6n/
%CYg\']A2c'mB$i^hX9+FbK5T%.>p$2/%AC\%CoGG]K,u6cZUd]?;kkrY?%cdK'GX<HX0]i%2BfoisD.+n+qKU,^*OP0A0?*cmeL4
%]X!lgHq^%B6):(KaN(/uP<;.-/2ptu\Pn)F!]<Lc`/baHJ;Dl>KC!ZYpO_hHB8)&JmV,?o1BdNV2g$YqYbWXRGD'!V+[!1kRq-\b
%q!7>>+L6>4Z=JgV$YHSE%;fZJ@KSUY/XYTiD61>,Q24EBT6.7uN?\E;f$k@6+7WL%X+0r+Jtl,Fm#p2WWli"a0s6e^?f@J:aDZ>O
%#XZLgpM1+#dFVR6]mr3"qPR%\&,f@j"HbZfruAX"HBfF]E#$Fi=%h'VFnE'(Qkn-_6OAd4C7jIN)g.$B&CNf=_J;57J=4r^n#M?L
%W"5L)C;580J_L.aJ,D8*p:pS)s8&A&r;D-EYQ*]KrO5"@qO]Y=YF8.IQXF\1qU<4T5Q:YsrTF4OIt.;rs6eeCgFlq5iTpOC?iU*i
%l/I3kl$q-Xs,6lKO7Rf_T6;EqTT`AC/9_i=r%ZDB(RRglXlA1oTc]L/2AY'0`>Y`=q[E)"KKV/F*W>Sbci1Hs<rgBb+pouqO3Xj\
%Ts+^`r%?H`4`\7G]SLR'78<Nf;,Jl[DBrfDl'CVj\eNk[ic\+OSoI^Lb&N9e2=JFF-a3/b.&CU/71?229j].*B4[e_:hrs;-]/hG
%W(C0h`DB7@Pn;!7Q=/sLWX[?PV#$.nFLPU0\\P\DUj]Leh-iuj$Y)gfadXD8?P9[eXC?Dpa$(iao<8@IWIZH'KhIN.9T5[RCV.m)
%[tSIm!*6Tfqf/q+BqQXDmgXd+WRkCX)No`]Cl#UcE-&LtBG`RI8;UR[$lPdR:+V/6ob0ES';3S.<bo)P+.$n70Vsr6/)&'=gV5$i
%^[Fs8g`,H9Q#4/0FT`=YN85VH7*?2=0Nb]rr*;-L)DN\=JNB"Z2F>k7TGT/dI-AHEMSQks^E)hen@><)b=HR-;PTTL&,Z=K:Hj]%
%%dHqSZan=YR7)gfZ3g1c<7FS;2Sso]c'B'J$77<=FA0?(;aK;CNhf?JmJ:E.Q"Do=TiI@r:6N1$/Z3QIg24CaeI?tk]kVe-r5s"3
%`s(e+At_6Sq\T2/c^!$"f$YhP;J7Y^kM1@r7Qpuqkagr6DXEU5cEF=QRqa>">QrGJ&+O2*1R/BEA1^oYmtkd`,Z"/Wa5*VGlO+c6
%7G@M7)uoP9ot$[EB.k,LSeKKl++kM=1ZR,-m\YE3@g%+P#`"mjX8Ct8cT!.qF&.!4A@..>LHa&?p%C`u!;BQ=L9Ng<1;=(J:Vk^P
%#:hWbIHO?aRaG%1A%KqC#-?CFi^bnAU*:H`KI]\?9ljl]H^cg!"'oHPG@SXoW#E+rZuFf^IC<)nI@M-k_@ea>#`ns^E29LQ^')*X
%"g4'V?@#Q_@QS)W\_VuO)2gj*rgOL)MCk:Z@N1o7>s,uUC.aRUgoGPgqj$ufH\_BD00tS=PW&F(d:#/0:q1'RUjH\d?SmYo`Mi2`
%HY=14QCYTU<n*tir.9+7?[%a'am8c1D32pOYP\-&Q@tRQgRPa>r]P/M7V'm\Y>Tl\,1%Pm3^^927omn%cd:k[C#MFI%9R%qJ\ram
%]#'q>@].$r29-;gNCN7hGXd;clg38_I?nQX;ae*u/R)$Ih_!TlbPs8Ka,Zt$9Wj_(&!O&N/``a_9k[qVH`a>[^MS$V;3_)AZqW?$
%K)nIukFkmB0U;^LCG]-9kjor:Z'A"2$EU?@h1%B_I]N"jibO5f+EsaI8s3:W\h\bOr"5&dl4^\7P_b2$*-a_DL\u)uI^\$8Ajj*K
%)+A][E4G(k*-AoGdY\SQV!NT]VCc[$T[-M=0LIF%E:_ZP0?pBEbi[%Xn1h/I[tqP:JjEdG>$+7trtU-sR3%AqKEN/ZQ?f+T;KH=E
%qape?L<Gc,/Y*<UrjW$Vi0n7Kib@Y((\*5:=\`qL/#;Km"I\/9A0@omV[3.AND5lK8$kb@HV.Wo!cGB]\]R@Qq62$Ze7Pdq(%)!!
%4&FRtY_l$prDd*:Z&M$&FMT.q(8V*e3Cf'[1/71:_l]'f,ZMbp75G9ch]tKN4j[o+"h00<s&rTY1N")(=rV0HXa3dGJifU&/r-u\
%F')RrU`'8=]#T"BSP6bkTp)0GdeMcZonWg<LENQt$d)Y:/\KTIF,"JfiTlQT]?SBhYYo+c@UEX$1jR6$`PHdi]DA0PFa?^U1R,+k
%YUP%hN`EGqoOO6#istrnqfcp5ZNI3TO/s4MTQmfE71;^W#;M(Z.uWf*1'E".1IiCRQLrN=I+\W\HSAa-,%arC$O.GrfaZ2,p;u]I
%jRch34("sg3O`U8WWkI>4luu&fRfSheT1NuJrHYmVYrmG=f(UWQtf\GGO/_HdtE1S/Q?X;4"UBi@KJ]9"<5!!M@O,JmYo(\=8ik3
%rg_bRV^6^8HShZX@!ebg9.I%mUJt%Fi<ftAS;B3KA9W!KT%4oF)Wq5L(,^2;gue<%nicE"R6%'rM:%,AS`h.$\$-u)+)Hn.Xmf;(
%2]pLpguRp;6(kl]+Kmar4dH[dnd=i3>&nB_L4$mn&ppu-\B.!;L[RS-<G&cr&UNfhB%&6+b(.B]ogSBrj7bRT1WTT/%ki6!o-MG4
%D_fnTUNLoEH)NTcnl)iN=.5%a-\blKmjn;\k`LG!O!HZ\l^*?p.i(&QmIoT&3t2[Z_`$tPO_e8MQiV7,KT,=FOJk3"XbJCalSuk0
%9<&3O9_g%4&O&!$WhHCqO1hp,qfIf2\UhFee<qdb(@I#O0LmQI">,68!n#Q9'Y]0r<6@aElF^N97`,H_Q;SgJ(V[!&fKuo_ZNlPI
%9o'%UpO)B8>@%%a\mB.U:J,LA8oXs^MlW];k?`4&DO>:"Kr[dUf?@CqDD2%F_t&<V]UsM&0h+Cqb'tFj;mf(hf=&/V_)O6&B`cf_
%(1f1;`5IZOLl5"LX$593_-4a8&:uJZn6F:r/9u1+0@Q=b0r;d2j(ONK`(,^)6a@uHh54V`@]`8W+WfUJaACR\1IeHB(Sgcd9qofe
%p"fL/qPto^nsFD?V6KmO[bpjtVLGgm]Z5HfUG[]jZt*?9CpO//R1cth_4qJ&:LB]&CsOh2?j4N1QbTGS(GMCa6d@4bCG=S]OW["-
%QHDBQU>sjeU&OZrd-EP.89<A7-J?aA%pA4T]MA96cL8bFD"+==3R6tRJ[576AG5>e6NEH2SHs+]hm<S41VU0fh$P'<EpXap/+As8
%%#uTl"Fqar@)T(2)*lKk3A]A(FcaH8nhNO21kfUn#+28t#L)gu0n[j^<EgDs#3/?dCP1ZJ7W=)sfKk?<cSo=FMW:7X[%3>KIIFt@
%KgDn9A-c_@_.%84nm^dbN"f0Ps)(("^Hb'_p,ju?'W8"JmI"J@-ET@>T-Ga<*t;^(QZ0sJ#!#*pQ?lI.m9bu]:q=pY)We<7e*/ae
%kDU.d_BO$LQ-Rc"W@3OHL%PG*k6IXQF!HIT*_DpqVV$E<^_`mG`a[=;Dc4<IP:hVE5A\VRZ3#")bQ'4RrZt'5s*;'K:V^5Qp@_-\
%7SJ("Y7BPKO?]`mJF?^J$BA>M<09AfJhecn#M^."(Rt-!a$84#[rJdJ[!>eMW^N>kJnC@BZ"d,8n6(afCcf1:gBguB_1bt+n:45?
%5jZ\_Jp!%]/A0d^Z2a'@DuK6nFQW@&ko7k=YNWdK&X3A@!Fj'hfA$jtUC*)(fX(7R.Pk*4jU\O&-0+O']'I=L`b]"Xl#&ZW-%.a*
%dYW:m&h!4AI+cLgGq!oVVS!Tr4JWlDTV4Sp]e;STa=gU8,)'C8MBJpgV%P\%X:[F8-"[m\7^Hjn9!p^+/$#HRSQ`+mN*RqoWns-R
%:%*IcZ;T0Po]h?81WPYUdql$)H%Z^jqp-A0pE)OjK@AH>+rGS3#aU!Y?sQ!mnBC?DTaIaXFlGFs1<u@2/>+R$d69\"K@cpPdu9\T
%9qS..HMeO5V"[ga/Cna<RZRbl9E%0Rfc.@b1GhXU2[=H_FmX!IMA+8_U[E97?CmXR2`)fW=sc2_Y_3HU%RBT0e7$?4\:H(_)\j9C
%cIX\_?UHuN,P9:T^7HtHa5QAg$iQM,lf\p7hkLfgFq2A<Rd//T'N&?2;c0=W?\adu5OO"k<`C1m7tja.1?*hY'+<4k>XbSUR&SEH
%NU+P6d;gOdi*B/W6hk2B0PV*AGD@uM/5$,RH&"gll'8DFc_c'@oaYh2fcq/@1S<<I6?/dub^=:(>]8>uWblWbU1,i(>u\E\(-8DH
%:WGhEnh]k(NZ[_TB5md-7BYrAXF=Wn$Y2LK90M=)?]4;]VXWdA%\9Z\W)0S3rWFqNh5r6^LjPUP:q/\XL2n))Q$VnI0[HA@Q40!D
%Y=0VCf5&P.7an>3f8S^a7*`HGP5ql8&)ZX'f:EZW\'mL.n.P\t3c+k#:$FKJAg/[K<;=Cg]cQHV7JQkY5Q?*So6tV,rVt@'9U,b5
%P;a7bf.#2]D_b,iJdh<s.MYZbX@0[cPk9LE15Tt;`c_9iEk[Qqc'YHXbBYG7NL5ut'6BR=au=H43kGWOll#7H!Yh@G'tbJZSflmE
%WN6q?.]E;RANtZLkZJVs?O4Hp!+DIG(I/t&C2&#8od@Hn^b4XVG]IL?a\!I/.q$i*6gk6G9XVRnW2VaW_93%nP*AD5$\q+OoI<%)
%`Si.lY5"PI<7")_i3DO'WbE>I[b5g)-3#lVfU9R_pl)4Qct"5VN)!U[Z:H,DGn#Tt^mQ(*hc:#qFdC@"#qE#pqIT53nd8sc0%b?=
%+WfD&8+ee8_6!PpcgmJC\TM5YN!"E63pJEr-[9%m9De*f&ClL$[!Dl.2LD\%FLqF^9H3+5>MQSX&TD)E<7'imY'A"3EDsG;@#n'V
%csJ\\5UGXP*[^d(qd27m6E<1;<nL.s`G-B$2g`mcl"':0/H+mJaP^tNOm8q;cC".imL^k#Fgt8GmW<r3.S$jJ6WIc8OYV?<]-)f:
%Y3!jjLnUXebI;Y9O>oCi^K+R/6db2IV6n]Hl1IUibig.]>!sg<mgsb5RIJFdf70;!2Jc)UkOD%U=)@UddGfS\c,=jJHna&UN^GLs
%#\;1sb[#-iCnHd_[Q5`L=f8H-Mjp`I`k,7%7'mZf*MG*9R2.5kQ5baNh!.DB9KHEj-=A(Ek[jY-$erb)1e6&#]Su#C<+d`hf#kH>
%n_rDc(g[apl&/g9.",+u*n(q!laLJ7b29u?LLgI`!-K]\.pO'GTF26e0N9uQ(0(J=l=*KV.A@ZlGgW=EMilr'mNp8=AD+an?@uWB
%AZG"iEDEDS$n5B%<qI7uGW]$73d+[6=Xa.Mh#iXir;2QR7mhEWLrV,tEQ2(b905-FGFG1rdHN75jed0:MqaApg=]X<=7`Z^Ts%ZF
%(%=5"4qXg&jb;@=+/+R>*4B<u%F:lCDWin-RF1^`+[0&$k60"d@fd6Eo2)'a+V2NiEFH7$G"qhZOD8>kptU@@3p$.D]C5NQ0d#9(
%$3f.^RUX&MT7G_1oPs28cr=Gej:7FcCar#O6#I+UVVpT<O"S\7Ko-iodmJ(\AQt%7#p$@!b,DX51r:e#4UR9E1A!3cN!38M1:6mP
%.9LoOX&uFim-W*TMWYt+gp@W?rNM$r_<G5*/;If\<@f[R>ge$/J\OU0aBjs%[T0/d7m)Y$3c3iV8^NQUUGW0g,WlC//f<m1%]BdT
%bo0Rt;F<A=d)N2_H7tf;%&n9<>K-S_nm-KK2.WE$$q%3ee'M4JH@icQGcDH]ocP9.1bqhNlP0.mi9MZtG$J%+7tafmc<_E[MUcDH
%W0F^4Sld%^gU`O/>TY[qIolZCij$)!cMY("pkGqD4\b'$5$$qSThWj"=cBB6.4o]?PlO_rX"s5r7V_3u9T)DpY0kV1q7/kY\;$;R
%/F(,Fi0e#[\8guc,Z'$(GMXhp8ji3\C@!e!A6ZF2.cn2XU0:kjVomirU/]#sTZ^)4(X4*L]"1JaduFfeXU@(M"CXR"<A`#LUAaMf
%1ifad(kocFb2jAR7FhER`]KgPhUF$EFA">OU^DuM-"XT?7iUh.KfEM0LcakGo<"pD<O5\fJhoMu:8r>X$1<VqXYZisbS%19B'].[
%=3jmY(=8NGOUh^sM7gs7I^C9!_jVibj#Y"k-sk+<q>-5oQ#]_c0;I<WY_?SbM51CiE?f:3N@_D0@]5OEE\qmrC+In+%PBmjm9K3t
%iRGq?3baGfC^+EkY#t+gXpI?)k[s%Z!_U*sM8b0;e.1,W]>mG.)@k.!eVq,D$K<^^J3+`LN)&_-oq/j)Ynm.3A<:SFGu`M=>@FU\
%5C'cc*oHi3P<'Qg_%Sih9bRCu&+,Ma2/Y0I_5I+?As!Qpcd83`3*Xc#f6k@#$R'"gW/=9-1:D>rhA_8f\e4V&HlA$W4\]0O.k4\N
%\*'LA&st:oU]gG/.,.U0T09[+m])rqWUS.;"JSO'`N*RC"b0661+)"7'qc9NQKM@;2h60Mj0ip<R[B;scRnC?<+&MK?I-+FN&MO#
%1kiit)n<AnMQ^TH_L@pi]hZ+F=[[6k[j)(NO@YQ+i`8oP^jn:`_lnl*L]_FP*/&;6iqmff)07M(;?l@f[FgHo^.XIr=W\4LXVm2%
%;HrXdXrAH[<qser!^!A>5`Nn`4XjD7?Y)dR9&/+;+.21T%3_a2XJ(g_%="Y&cK_sLo?>+fpP_]S6>P35m:8121nP$&qE-X5Y3Ii1
%$e`r/]MrE/LmQiT"KsB$7Rd[jIq20f("RE['fcp9Q"MLfQa-p:dTT9/]ZUV1KIVY#O9a7Vb,Sn2Xl[t$<<fin7GHPg"_Gt*.8CdA
%fB`ZGG@jKbHgQf^r>U#5eG$^/DnJ*&D>j/@rpnBR)e&OodA)(sl$e($je=.md+PG\,"?V4Uu;oP<;[kj7"g6SMWdum?i0+cqVhG%
%+kMu'fu8)($jl\tgX>T\MaXnXo`A^u'r,I2%>P<tM"kf))ka*P5%Od?4t3@1A')\%#u1epRkFB1csP4tj!j<!V6%?(N!r\p@5aUE
%d8gcPFZa8L>Puk=Vrtb<<,VP9rB!5647,d!\7'=KLRGG<,jXNA$H*`B&atI4M5)O9o1[(2qF9Je.HU[X<;Lr!aIsU$C2rQ.2i7.c
%ZuF'q&.4K;VKquR41-kV(-5<1n;-/g#u=F<.cbG)#t/Wt-@n`L_Xi4JP\'`.k)e5<oVn6AXQC$(Mf%(0cb(N*Q.DBY-Um6j&#Lf<
%:B`C\b-E+Zl%3>M$P08V"%1QN0m%`#pg]*Prb(,'_ce7[@#_.=E925<h'<L%Vts\5MlheoW7NW38%8lb2*-Pq"2T5`ffUGBT\*rj
%#cL^$_'a<AlgK&<$\.oM0a0hfk(sri'49h5VYB_aVS6U)b])($/5_-GMP?uaDTkjFf3rXS.ul]f`GHU;m8ohcBTLjkXtlc08L\!+
%#o)Zf56?FV3Re4fRYTZ+QJ[bR1qn1ree5IsY\2-TgEQ"]i+lg@jI#gkPu)?f*Q^1r/I*"L;ND,\n-k.n=[St%!_K:V[p=)3$HGmE
%VqI]t*+VM!XX]NO,7T]N63B%$9K.`%"R83%0#SC@_N<_L?Wshn,aW'SW6squVGV>gM!EM3$st19q7D]I8PiY3oJm!F\da(o0[3G\
%`e5j[g_I-B,JBV/GU5-_&p6ta[t+UBN3qk[b?UNOAVIpHWM,S8*HbVG66XLu[6pWA\cb.?F[eu'&YI(VoB]9V;[%7[NdJd"d,d(5
%;FnQEA]oF=XmsOS;mQDJT!gtdP:1p#"'gS,RZ^QDb=aIN6*)T1g..qYTUh`i*%XfX>r99GRCM&!H8s$kXaWY'<Ei&`f#J.'r+>eX
%LWd]PHIQYTNCN\U"nB1qRC+g"6Nr%RNGo&T#'ln15mLD)?X71]blJSn8Ji@o[Cit"qtV`%l42+X((r<Cqpsb;U&0\J-T3bnk$,fA
%6?$PG)!\tf6@4#KI."0)M<h[R:PZuXDc:Y3!st(#2a4\fl(Xl8OXQddZZ:.=/?!I47GTleF_kg[(hobQ$t9ra%-_9:,@jg@PY0Mi
%cZloc.=\s,07L3?,pP-;boWXn@Ijb$=E@$Q'n3,Nnl"0qXC`%f7)W`LT*P^;\1>[FMbR#8o9P3ReLZa_%iMX\6IG]P/f!I![[N!p
%P@oj\-Q_Pc$fG1No-'nhAE^LIPGX-:YR10+B]uk)7m;+R&Mnd^Msmq*@)JPoYIFM4B&"oLVO*jMCKu,LD)l]$"$]J#*Z`4:>(fV.
%6kgtIR!cXs&:6M4P,e=]-JBrH#)nWu&fl<;TXYq+!_CMnniI^6?&NsY%7X1+%iOL[:Pc4`cE#<>2(fh7\SLEKf%@,3rTnl:gW=,g
%/C>J"!hs2EXgQ2-kY^>*FE-3JY*S)Ua3!_S8:VJW(XLO4c^eq67hcQs4#M/%3[^?JG;Gc?X6Qu2FTusEF6_L?.JQ?ZBeDgR!hgga
%?QEj<hb51DZFSF_(h=:f`sS(T1Q;\&UO\4@CN3@!l.(cK2$>'G6UuMZ?lu:8AWm,8>M$1EDRT6%;'1o$=foOU]`6P>6#1RR-,ut?
%nQ1e.E6>W#Cf8/UhI<CMQL/n9G=)*H<<J,r75X3rm0A@CDk?7bX_$:Hp[?Nd1tS78f7oDr!XW(&0=p#]$?]9A'5T@`*Ef(Yj"hhA
%E-9OPM"bY=SC*;5m]ksX5"A._4ANEAB?Hc8NLu[rckSc=<6cU<LdnJE_DIBj>[unW)e[VUn:^0pS5l"/(V+1\SnA#bqOPRN[0S.%
%jg1DNV%JuZ>LRb!j0.]]YoVa4^hho%n[AXV+<qJuQhBZFFWT@IHH`dUb<0JW2=dRFS*d\GXa0(L,Bh]&`-d?2a8"<Q=RH\5Q,[`$
%P:"/OPje^pVjEsKH95MZ:9(.&lNkM-&B_Zh1.!Ptl8Ybqn8!eN"Dnn;IAG1j%te=:`N!C,gCku!DFNV#CYYm1k/!"(pW=paoT@F2
%.sM_@b,\591TK.:r*"FZOq=q[7HljV=NW3*L%#7S:ToK!f>QC2;))k\a?<r@f4l4??Go,Nh5[\:IWIVJ0%p,'c1TH%ge9o^oL>X5
%T2F]$k\IW!>ZQdUf_rq3*;:Jjic"2biVBcE>c9<K;G)Uc,'_jB$NE+m`K$qC[:@SCq9@du/G6gekEh"?I7Bh,.UrE8U+LMB+'U?=
%`GloMo@11f:`n$1gi!dg)1HB6L7N!S3U(%7m9k=8XYS4&q!2uhSGL=jL?\p[W\jl'8j.Xmc=nab7h$J5>41RPdBecN:`-PKm*f!2
%Clpp'SIYB3nPG::D4r)aqA4@nUi'%Z-!(TY9V1!^31W!!8f/T5`DNDTd)lqH00XXBFS.&0naW=8ql9s7`4(DHlimrZ8Cse^E^o],
%\$1kgbWn3IH!!4T?%<?*CMAe>B;TGNG#^?B4.6g@HL,gBpQQC[;!':&>ogfAZ0_jPO)cIThNdW($-Q!uEN&u3qsTO^MJ>TQQ\^;+
%'k%T,cSS]l^(]JfQ:?(aOOF=iD]O;*\c]@-:g0:$TAje5Sd9r4pdP9Kg"RP2GZ@4A7\#8OW1I-X"BcMZd7_Da9sZ2c(XQZ0g0/>g
%bNi`1[tIU3!_RZl^O,2K(PBlb@BV[_WF(jqJ3@RJT;F"K#?3,J6`0[1PeS8]]&NZ()]Ga5G`rf]a_`M"S66,/0caJim)h4_QM]/s
%#IP>@*ghm]NfNnC4tY$74n9,\q(:U666FAe%&u$+?Cogr?34VFa#3DpG2S/uoc?KqM-kXKG@Fe2EApD29LGXd$muY]c5(u*HI@4=
%8%nbhG6q@f8&Yk=2-k+J=q?SC]O>S(LfR\a3)j'N3Hp.c"ggNWWi&UOot5-(B`3(nbY_rm5V%1#/bc3?IXa>%Zs:]lceV?;d=eLo
%"VUr*cn#M^>cFNEmU7"&EQaD+OhlJ!6ob=&`;:9q;spt[(dZ6=;!hb(0OPkSJMI^9\E*9qJgC*t%ZESh7\3lr,sQfHKY!BdmV]GL
%Dgm%[^^6\YaM(!P%Fm`5CQIeV3`3Y1MTVe:oJm$81U000G^"XXnT6_]YFUiN-b4fYp>L[X>*AA5>$;&DmdneD-L&]\<c0eWL:?Vo
%U*o`cQSBl.f3ghImu!WlE"&[[idq>TJD$E8(@u&D_@^,Y10WW%5p6.nHd_.lFq\iVQUqLg]dX,kEP*%S"Z)h^)kcp.MU\g+_qtVS
%>2)cM4RnL4HZ//kN2_MY+`epFVuoB3i7`NlFP35'LrKO2j+QVE.)H'_6]oGsn6"a0*kdV0i$E=^^]<'PT73b;Z_X[2?C1Sj76jo8
%Oa`glcWRPo-n'eiI6jD`?cE1es!$+JrK\$s.,YD2%B`su*QeeE>\0c<dIbt]!hku.[Ai)D(V_[;R*4baahQ2:F?Grg-9rWQiUrV9
%8)^AgRd%o+2Qe6eB=3ECo+m5iJUo:]d!hA_@B)g?TO;=(]T6eNXQ*gG$L(@>FT@>KfHC.7G5T;uAGr_uG(ceb.YYZrm6O)4rLA<H
%+&e:[8JHI=/N3Euno(h1\#Tb`^-]\AY03odoJTn1/;VJbDXn8DdFp4J#KHp<S=D24U*,@m.dWK*O&sQu$1]`.HEOCW6i+pZPdG9[
%eXJ+G.eU;i770)H6Z+uO[d3$/6A"gs';(9\qH\(LC9%u02?SZCK%+?T!5AkC$u^brD:7ci&+i_QW#%!V]tJjVmpd9XC.Ws#A'h7Q
%HdVC%f`-!<D;FsuQ;]82GKe'Gm]Q]&!f8\&qEq]9IcB!(SP":0rTkVMkauA9'F[u;26YF=+8Mh,Fd,*)U%HQV]t%eeg9>HZWisoC
%R2dc/G-tUiJeB'mjPLZC75Y@uTsUlYG/";<QdE+#L!j>8f#8ma]"9Ds'S=Bg;Ql""WbO\#+Ofmn8*qfF;X3\)7T4J!qttTo*?h.=
%5Ye^<0UVXU#Q?h'.`-M&7!5>-j?*'Pf;1,DhLC=LEG<k/4b?c(AhQ$UV8i>,;2:l6_DMB4:o'*7ZucEj3U`T.1.G]bb80OR"%DJ.
%!c?4j>?Pk06e-'F$49$(S<O6p\BnnMH3@Hj1q=l<3I8`2BGLH@]_<G^,RGZW)G+8c>9,'lZE7Ud_B-(7#W228=7P[>jtOER2^++_
%`\%'l5HnV>Q>`"%j.;pH#M$p3+5A!G>G<p<5RXK>X?nr"V"n$G]9i9H!1LJjkBU[RS'fQsdK+9K,U2'B@&k!b:d#$m84@GD50uHk
%5?q!pK1i"(.d697ZW/WZ5epQZ\ES7J*TTU1.;jr$=$plpD(ftP6kUt%BOO=O)O$?aNkQ4eLnYB6_9eI"FO&BK*6U[K#PI-(VBG[;
%.FdnuQ$I;g)\,-,6!])+At+\JdG-AIZYs*6W7N_Ee@Vp^_`qK!+P=Z$IlT0W\>D=[-*J%:Rdc#N?YHK6eX?opiSr1XR#5(6C,q79
%?IV3_lJIWNLg<:j?>V_l-_ukRk=$Ua4eK;g5V=:Z[;],G=flAfO?3l>##N0F(9@)m*s*DLbD$%ai4E]U6UUJ,8<1q&2&(2R97Ytd
%hDJ>KJAASm2)*/,&Ab1Wg/M]lU+Q^<`ZaSOHs+FP)N'ps_jifb<^WZkq*7f;nS;=NH18HoHk->3Kl]cW])#Zf`fY`E\1ZT<9[0_0
%+Ybd5)(p's(F4)i%$Irn_h2;V<m]VNOb.R/67^M_N"#5QB#V.@)?`2Wg=r2?ciOWCGaa]gOSB[40Sa>?E:j^p66DuCI@oFW!7,l)
%J^m-%k9_"*;Luau`;Hq(h*5O#k]uNo;7<BbS]'FXC289-PGJWI8-R1cLM8#Z_(QbE=!hr`kqX,E6WfW6%pJ$WLOf9X2?(to%ME94
%+kU1<dD@q-Edp%.(mB=JQdL*4^6tEh5:Sj#&F#<:.jU4jDu9DM:!H0E"=l5""h]I'JpL^b1XVG++=rN52`P;DN?8P3K@7GQ`=0\<
%Jf<38,K$=SK!E^`U/Ne;LMBI&9Yj7#Fi@!*onUHK0?l"NT"GN+Ceq=m"m_QP?;5%C0LI*&RSEW/`b^s#BMd<qgHs(=0@L1n>1?\M
%;@*9K(;*]F=C/(?R+gnH.]7BRcNlg:*M7"Y";$S%PHa&e#ef4#P=W6n2pA)Lc2]r4T/$N.N'dq`>L-?E#t()25/PiN5&D^DQc'@q
%V3jS!h)92FC%)ZlZ5VlVaGC>@mklsa5U'Lb?l$^0Z#jhofuTb,V!.ku_rhTjV>Kr/$.!,r5"H[0f</R%bA[5<T+C6Yho/)uO60]u
%OaG=rGHjF[5<Xod7qD=POFW#T!GT$;oC>^?TR!\P)1GFp,9>0[4f*kZTf\lL<O?oo%gNQK:/6X^1[N>+-["QfO8$GK%&GAiqnB,?
%+/\\<S#p:9Q0LJBJOb''_g5`VDG3,,mkY>)m[b3M'*oX>6Y1+hb$0YWG4IX5T"CWE,.K^?<r26Hd,[[#Ji6UV\_]'3JVgTr8\&kf
%EG<Ec7X?eTrH(>kCjOSC5Z4o+,H`5m,3PqI^Upn/kZ/gS)hKI1B5Y]r_,ZF<JYh6&4h<s:;NNY-qM+`$M)m?@5q/#2"t'hT%S6cd
%Qc?8r^<,mKA#68TXl9Pf89Ii-k$[,VNq4#\L^7`?@R$(^e/;:\eKu)kkL8!dafjCnWkrUh+%7_d=DU[0Ef=6Z,Ja9:JSN7;B#c3k
%W"J6J'^]#*STQu(_"jQA(;l@hbLq)KYf_Fbk-4`?b7n7`fpspTiF.fTbqhf8%8NgIccf<n1g;OH!Mi2R:$kg<YUhY4JhVi8P($!h
%i.Tj'rS`%NA?=*[OZ?*BD7t69eW?[rcV3^D<=*`A>Tl+1>3S2/*ic7=nd4Ud*do+bN#OEI@1;YNcYog\#Gm:<(->*:CoS.%.Tt#:
%abn^T;c2o$mi5-I,dWhuqr7LsAXpaP!Q8jJ5ML?U1Gk+?*bDT?46L>W?X5":OC+I*;h]4pOaBI#h&Fbk%0o(,>8UA3=&g9]7N2@e
%a%[L>jPKbZ=i!-.]'m57]$^"Xd-U7"MDY5r3=[c"!\T%OdEGRbkYDX@AC<q?4NSu-e)2O,BHkQc!k1cfdsP%,Wr3!XT^RuM@H\:e
%7ntST,&[d4>=\cGF!d-g6-]5=Ds1HkX^i6<@YF.<]EdFf3UI3U=t?fO'K<n1lBSOe8aAilXUNa!nO34Qq]3[3b9+])JBH96dq/7r
%5)0apc)"=/lKpmqeYWYl;TD"_8Ir7lX`cCgoZN<R)pq^7=4rBLKo-!j7ET0GbbXES>Llii@6rk7`\KVP80M"-RD14Wek"WeSi%7A
%!hOM!T$^\mF<3[tb/>*Fj]OIbq1u.fE7%h,?C?qM!c5Q7nQl7ir8*k=r%1"HD[lgH88A:;^0RE]Y]SsF0ANfl)9m3=--fDHe[g]_
%dIFuh<--#XN2\FU;T>C6(6'fB:]ak,8&h\<T3X&eK_6YdP.HLP9m(7.C6JVIY1o:*I&*Qk)S/d\kFsOCHWMlWpYY]k6YV$kro`;j
%'/]:R0VOg&mu*jJ<+0iJC8VH9Q?q&Y_Km)a/IRI4'-u@UTE3!ElA/`8h7^eU[rKu+_4"e5!XLqh`7BD&SGdTX;R+aa3Di#*''sMZ
%7_V&pmU^?@F!2<^aL"Tk5?&d#-;_._4s#BKl^9Ze$bFRX@@ctpQH?ar#Gl%0lFPJOFg0-%gajC*NL;.@ma-S05:k+<EtkCT^!Qm-
%Wof]hn[f>0M\;$\\]F)HTiY*'<W#jhLcD@"[(ti+%o+pkeb`b/bD0%[e*HnsL^]3?1`)Ar$K8"&;:^07%+5BuLG%nH*`M.+i+p)!
%8q63*rB^a"6-GoB#;&r48ZU0s<%GBgmG<W!,V,.&YeDUeVq+9\4alQ5>mRW1feCTNo8tOOFct-YKVY&>)Vb^!=,H2_?:@g104X\d
%-;-6;5a>(Xg5>kG<6SG.8&_?Sms`?Ad_hDSY0sGPW+/g^.l9%^;Wm-GIJR=aJ,e$mXh![cp%"lCN-!%b-&MOr^>P2I`4GosFu]<j
%A+H(O$!Uu&\,'AY+kF7V;nVp0i?``b(4rkb$`WPdUT3_aW`_n@M3o1O=RCNmmq(tdhMq;"A'ucbej<;QgJ5t[[T&eVO>N649$loX
%U*&3d5_)8)>(tT)7COBa/*MBJpe$BdZuY"gTCmoTG=Zmk)]iYsWY@0N+$h0Vk@C;T[>TLsefCAV!0-sB<Slk<FosR?8#"%B@?]&T
%5ul'$ba&K4D(QcHLFY2@40s0gl(Ad`raJ!g0m`9]Uq2Pq??M1+S":&0<gokc0)ouL:7#&O\kj+Hn-YL)*7Bj^/UCYS3nnA&9@1oK
%SVL*AN*[*MlK@m5Us`tm>nl)B?Ji@PCS.@Jlr;,+]8$H-rn4o>G4RoNpcNBVESg*dMPO+'UH+3C,8:8)<<!-<V.KL(dVTJ)d2q;Q
%OK-EneRZZ77WH[m/aslM/t)/_S>_#[):OXbAJ<.GVi4\]P`E(T7I?Rff5@Er?`+&Zp"S3K=H)U2SkJqa)LU@#77pifSd9j2fi+oD
%WmttC.2^GJ7>'&9$L(8LM)jUe,t1@/X^N3WL)(OM+*X&Ur?,*Bm^(p^>t>m3T3GoKQhWmt81+Jb!n#T4[YjLaPI,pXNTHN-nf+.V
%-P];N[OqA06spU^5LO),kQ$"_UPc7hk4VU=0k:N_Wa&aL]O#._jj7W,MC[&5Mf^b\\r;DGh?>Z7cmKj`%j]mOP25Nu58m_lAS+3m
%-GVsGBce5lD_ajHNN$j,oj3s'[p&14jSo!W88\q/8I=)cf<'Wei/gu!qUCj+Ah@#:'iHe#/a4FE:D7cgf6,TUhjd(V2c>_7er>hI
%lV1t,M;#YRb\9oD2jsVc4G-.,hI-A]?8"^@-90*H8,SZhp$0,Jk(cR9Ho;(L+[o5LE4D<fm3+li.RH?rNh:eq3I]_jr#bnrrV(qm
%U<*#aEEm-rOUL!PC<EG(p?b(n5:Y^acunYJ3DiuMULmh^noYl^ZP#H^D@)W@:!iB*+$\Fq]dq(if5h=[r2U'`:]-"MWB]*s!n[AZ
%C1NhK"0`44ak+5ma1/?'/5TV_g:^fs;3!kjo^"e+L;mS9#XVc+QE\LM<eB_>\^cas(R^dDM?YKpeT0S*,fl!,lcC6H*_]YKNiL'i
%I/*-oc3oK8pGd4]5otGm(Gp=eb;c=GCF>Ob6Va2gdG-P@?gS%W>nW/Te\>i?1c./GF&KI_G!kBhlI^8-MkgF"om*Z/&5"uj!7dT-
%=e6_Z]>!Vh])6+B:"A`g!j+Gb0XF_')6_!`r-4iNRrmsVcoVtn@"\ieLnQ'G9`2EeYg;`!:_rMsA2BcY:I`=19gloi?]KjhdFkUp
%18R<l%ta@@U9c5@L2(sMnMO1Qhk&b3m$R%S:?G2B6PS)\mT=;Djn@%!E&ci`pY06Ncn_dblc.:lT+=f6hRIb7#n:G?FiDoaDB#[,
%AmQ1kOqsfk7(3IHSEtK(ToF;0qG;>29[(a:G/9o7JFE4/QfmkN'R/Yh-tq%p:Ce]jqSs_`;q)u#34(#f=pSZ[N5MD$)D-'?8d3m9
%gWNs#*&U-*`fN)A/4nO-"5Tc$0:O#V!#c5b-?9#8a)8aPTY]lQM''C$*>6P9D^qU1h;Ua7I<U`2g+]rL3&@!NbO#j*RQgON$O-os
%??%*g[EGr/eQ%C([bY,-Ot']_n)C[UOM37b<5(*#7[SrH(NZGLq<jN_r9_dpW^l=]EHIH5$c??\$TOE=p%?E2?AjlSas9t3d:;AK
%(WC([;!roV'Rb\d_qY=+Z"gU&e9AKBZc;&4Sdd>J"dpLj(:&f0pQ!7T/1FBb!V=QG"Um#o3>=Q=_,91pa[K/V+4X377\GndNi$>i
%,33%02JNS<QeVSps4A."a.7:^/HJAJH0YeSGT2Cb$?')k88KT'%/p(Jh1fEp[q`O`]=EQ;\;AT-#SF=ULV)rLQ3(CC&D\B%&$)C/
%@ATt\<I<?#8!/\/jG%F<%B3U_6>:]N#[)l!^rPZ+*V$J,Bj):Xoua\+HcV@kN)UMj_$9`K-`ag\`bUuR&[[0?/I`6pn-(pO"PsZM
%hS<aled,g4@@OZ)i[>eCag'gYNG0g,Y<#cb0oZ%<l[Dr#]^b1">op`5#kB&?gBjq%%=m),=tU8lQ4gh:p.Lq7e?CsRF['O+"S77K
%F3&!iI'F[kggRfCT9TW.*YAmLij-Jd&]KS4bpilNgEZ$g\>jAg>8&*<GCNe4BDNGT$<H3S$DNXXC>k>IBe!rD274K=8aR*a2)W<9
%#]_fU>)k/LZX[4.AImHYeGk;f??Z/k.]315p<[``LK=.-N4N46S5F%&F&PQk=6q(RZK?uOY;W9u?LqfCq.H>_dg+Vl`Bne?=MN2m
%K`bG$`/A!=c0<-SDS#ck53='lXgrAX?`;F28C>[&`q,=sq\Nk;Pq9!,![%^38i$=i"WDm\m;>-S)g4]#Fg2b43!tF9!<pbU56H3,
%_)/nE$*X@XN#$iNjP$&2D*Pb^lZI@]X%pa8l5*:>ii=<bj,TRHV)T$*RoG`@#2dSR7g--2p!V?uga1PZD6EX!<fZ"3F?1FZkP=Qu
%i_MQ*-\?n!otZoLJPIGt`R*EmDk/,,_JIPh6Cf5H`ecA\9LG)>N>n@!Ag]mC`bNMO7L7-m1'"4_%i0!&nDSgcga]O8at,HE#RI-,
%@%e&rP=W%TaHjCnBN!!s>?/)3TjGa\6`(?jB).9cBYPd4#3%&R;<[D(J3"F<pEP)0^Upq%jmcqagqN>GV)KmZ1b0nk$+2B[1ma7o
%IgZ2^4\gA%$<%b!/JH+/5Y@#`&CQQJECO)5E@40JH"%>bg2nG4F;.2[hmB.AYoc,1,[s4G'$HqrR?/UKp1'$Y[)CIb@D61'O;Ng[
%-IXEtd@K"."7.>.To'mpjoNRJ!a57)oAPM?P8NJqO&<K7##a]-&mkUH!!OF"*MY)_LV!93QQ\_WpFkrcG8K/jeXoIj;g,VC&5t.6
%r@ie7+!W#koD-(r,!iM2[,^^%a@)!.Bl[5'-Yk/]_h=fV8]t\.FcFaZce/ZdCBk1Zq%*:,1MjMO2[uh,^![W?ZE\*,QT"gK=TMIK
%BdrGQ0<D4-ThZGrUdBn6lK1(*b1d?2i``<>=*]RtTnus[^%.K)&<>cQ'l`rn[X%rZgDj(HW^=t]_KN];A1;a>/PkaF1'^sr:B$\K
%<TsFdh4\t=U`2Ih_ZF2$RF,VkS@rq#S"&q&<2-e*n.=%api707N&I'c1it=DQR4dp[]DH4A4pNZX$^3eT"dnaii:p#Eue]oqAC@q
%c/NOO5\]5RjH&u(:JKM("d2o::qF1D'VD^Q0P%K0ZPuJ[0nT'2>N6F7YJMdOg@cJeYXN8bGT1B(.hM1gf##Uam'KRUJ9N^DUYM<r
%YS/K,<](f0%LDdA^ZcsqRY;OS>LD7[).9$.;u"K"KJ!+Ab:'TN([14s1()c*=qAJdV#9Gc\CY0AO97\XbmQVs+<*im9S=8"_6,+/
%Vbq?-)3s3]N_[*Ef2oq;Md`Wo1q-J39Ro3rTlM!D\r,"Vb&pAn4;BO*oE8hd9"X"]C@:NO`i&443%R<Q\Q=<p*Yr58N`-nI($A6k
%*aoQdD##O%k;m<-R;2pcE&"?qK=ir-.eYF?\]=!b'd*\Mp!8c$.("C?DZ17RLg*_9+Y@JYX#*Cdq0Up<O(Tu(f^AaH+*R1$Vui3l
%\%<,@fu;@%daf-[FRTkNdg"DZ31m<tg(QoE,9tRX-Xf3?R<r.?HFo%d[b4tC:8u*-j4Q!;Tu(He1p"/aA`6I?PU^6/`nJ'Q]X=ne
%Qu0SZ];hpK'[7,W/m_pE=NLpHVE@f&%*Lhd#FhMhLr(%mD!XtW'AD2?66I8f2J6O</7]j8Rjl[s'N%7\UeL,uDu/qP*4$NgHb2;D
%Xhe%_h8QVE5[`*o\]%5l;JNn9R(tM84ncS;;D3phKN!,aKpOD;M]oT?T'3<+[t\).T6ni&aUGmB+@8gq=)"uR;a6LhWmFuC3;2`r
%':cjD'?sFC")j\B8ECIhZVrc60TC#,CW7o8QiQ_,Z1[=@+CfpOXpDSX4qf,apGa0VJL\9"=9m9.9&$ZnRptg4?S[cmeR<<AfKQFX
%En)%QosRf%NZdH'Hujb'TU^B7jlFU@3$"i\ZB.])%B>A*=H2M>_54@Fp/&pGe;+nJFrRpmq+\$dXY^U(H2;3..gUp:M4?c#1EdK.
%cLF*m5tKe!dL<E&%B]L#D'1W`fYelQQ/A#Tk*V^J;QW#G7mNlH.gMD$L.M(onuLsLfb)KT[b,3:n0S*0cG&\M4/NEO75QB?Q:##M
%MHM5)Y3.eI;Y0nJ56"PiaX8]'G")SOVputI0]s,%/jU*[Q-G?&$GdfurNRR#Gbk39=i-?:#)N.Rqu$,\99CM,T;]M^_Q)Z_g%9TM
%UBY5Wi?im3rZW:oLp%[E)NuMRTjaJ&O/]cRI>_V16Ka0$#KYVjaPWEQbf.W6'*U(a"J8OcN=OO5-Ha?J[6K8n,qTS+jKm[.#55OB
%?8!gRPMaqIe3$p2421uk)f"2Lr#rG6@p1LBNdSAm4";g;Q:hLR"9LhWV-24DaR%9Uf-)UEE.hEn@$:PU!0+/LhnfKfJW=.[W'6i6
%m1&ef"oc#:W_'+cU-d&N%%)(c)G$J5IP-'&g%?.l9`&@US']IJMV3=C9'9M\Wf*/rjQ,sl(]S1OlCm3S3BnAXd`Hf%KpG)=l';s/
%7Z0B<DcQHSrr?-lrc>jP'<SqN1cjs+kk=uXcLa'Eg\cR4cVekY[&8H;hm(uC$TelI)NsMXKdYB+4DZ>Y.@fp)JXA=rDT2).9L.f;
%".nAl=("3kd.BE>)sRf=Y'DF6bQM%g2k2h"SSp=eGt;kPp2H:$ZJN*L&g`*#HNUs%hbV(J!K]XP6UsT8NdFUP)5L7hIs'puXGrZ6
%D/@/B-tHMF)ULbfV&H#SC\I]hInlfi:G14J(gg5Vd^!))ZKPt@6:LUpkg4:HB>7MmF>WWq.W/;2R7IPq9Zj^`-6:1ef6K>A,ngG`
%*ToL6*S1tLo*q$]oKW8.WPg%Y+lRuG7t\jYPt@mkCUcOc],g\.0A;!C+5;>cp3q0(Fj"^!3c)S6eGR?Irqll!NkjkYj7o3HLJEs#
%=$O>YD@A1qV2&0.#G1lWYmt&`<Hn)TX@(NBlh_W9*Qm5BXl"3c\<Xl/L0M\df(U,$*@f*U:fs)jBDF@[\c!In*OkiLT0E&$c[S@u
%_2jSuPDFtA[iLD^&)RkMF=k!l9Xs\ArHF2^e1eaoqG?TV;^e^CNH9ka^%PJsI%hBFdfc(4ZL1QPf2f3F4>XI=4s-ZXU":VkcgQ)L
%\&:A>]@8i*IIP(&qIbrr*t.l)ih<Q9fIl%%GT_kSQ5]'ILaC&hMERLLjAoA:+$(HC"<ElbIoY;&/Xn!<EqhBBHf+Abn/eW[_p:[\
%7obP_&bJ>E5D,<tU$0mXc.pdidGrf?I=:tMZ2\&QgU&SQUcGc"<&l0na7tB>LS5SuT6_8BH8+JGCcQ*JX>T6_<ZE+LU:g$XBMDQ8
%2=ED2:)q%A`gA"I"(491PW>31edP#nj31p>oeO6)c(V6>9j\sm**O0FZG*6]EMnOi^Z!Fg_1e948)*<g3<qH.)F>cl%M[<UL@"Bk
%pq7@4%tF>nFjl0ASFo%u%DC8/W/?At#.6d+gI$1;:,uf2houRP[.dMTIIXt%JpMg^GXH?./b9q()a.ti8+OZFe'*KYPOrJa"o"iQ
%03N5WFJe-RkJ-nKp?)BhmorsIaj088K)-!<d84;e+2dNB%0f+F?lM3`,.ipG::638)?"p&H@5U[HdBf<RAsKY.VM@DfJheX`.!/r
%orV4r:g-(GIdfGjhRmbij/mWjFL4J'bVq-oEpnlr366'7`KlG7E6rGeGoa-iP2TdkaHW"^*?,L==Kq:$d,@e80<]iFLI2DW+Mpg.
%_l'6Y]C.gRS?CF,.,Ji:*+"s\Z4Wll<*1r%`/PM0;!+^@4'EV\rKVcNMh?kLOO!lN:Q.YlH>JR"AfNpD_OJ59j%qk@Vka)2DB)OY
%NtoST1=!_7=6CSc%N!$OLC]XA30J["A&f0;o#u=M392L5Bu\@Dpg(IX?3)7kU!=.D3Go6c>SI0FH4pi[%`a\5:PU2#9p`%DmT=K:
%Bm#'@,\V3hdnF5$_il;__[m.?l8musgH%4m!N(7c1.@h6Eqh,_Dn'fKE!%QT8?@\"LE\c@jZBmjMFCE(/Eh+RaSCuNLVo\+\C'D/
%H,n,t@a%,:$9=bHRDZ4AUYg(Rn6>eX6(1`[<Z6!6]U,uc:&Qn:3Zl!pe=L%6iulVrKLEQ8c-ZSH3B`4?\,]'J'[/S-l-0V[LH:4M
%M6iKeG7KJ7T`T<\cbW,:BeH-tSq@LaXn(Gs@E4)^+p&cAXYrob.i,t3XqNW?FRYC2'C'Q#:_g=&it.)9LD8WWh3$o?eR:PPZ02m&
%#EJYD7]2?Oe!*qndD<N,m<(pp6d\AiH/=p1\/XPcm\k6s-6r3Qj,<ZD'$@;29SWsN`I<QoFJr_"]#^PnTr(+>Cbqg7Th:RU&'_">
%ZLtKjpiQ".Ab[f;KK>VOD;PrjE3No,#,;YUk6g&<T[_rU:9EAml>TruH/6m5'QFL%D2DuA0?X^:&aPP*?)CXVlen&[R"lDQe2lAL
%qS&`UiSI%De\eLf,bSa6,KP#;6;=:+EZJn:!Q]Ipf6Pc]_60OB0=O#h*U8lSeaE3T1u!Y0-jY"c/us_+#7Vi>EK>LfYf!6AhmEDO
%YsW.!]gFVEpHiI<k<"hImVKmgh,nhK[^OAjUY4TegSs"RG%`G'+A<9>*F?3Q\RX@P3QADh;!h))emoeVC55]qGlE\<Vm(cAP/tJJ
%K?)Qj%r72--TDsfTd'$on/T>SGU)"klLBfoN&r$5g?'F;c>E4ocCGVeq"WYckmlr5HHLH54.P*e)EP5er3C(kV8Ko4+Z0U.*9*MU
%V3d`kbW@I")q6r3B?6lXl5f;1@fHc&*I_gi/TYFZ@BYcbld5+i)q&DDr&Z`ITd\iG7DM7o'JcGQJ;;T0oXV:%e:GnoahYg[."?Um
%GW8Jkb;Tp&Qd6'QSlelL&fr++5dB*HGW;s$nGWP"&$9TF_;0?\\/#gBG_dU??8:uk3GA;MMhfH$Ue!L^4RC9'/Nn2<@VT$BNf]#\
%8'SogaE*sMl+<VLfln4biT/s!0HbO0GrXI0_G>rPLXV*;/r,bU3$:.d*qj52Dd:0Wgdp,ULj:fh`uQlF"UJ0n6FC:bTn*HPr'npu
%=[nJthmdt,C<?EraEcE6dqZCekMZg_;3La#n@j0OPijamW0P:T6.*S&??P(doOuS-r?Y)I2r@@Va.VZW0#N[H7k3NDefCJ+Y.J:l
%*AR6.`$GXa;"\eKE,tO+i9J^D[GR,>:ePi:G/r0dV?trah^c8ZS^O`6K<L'DN/d'kfL((+'GPunmZ+Q-T1_ZG_qDq76Vcpdg;Ct^
%kUP'T'G4:445M$m0m0B(E=_.g]</Q[gr%0ii?tRNGRfg@.]@]-IE0HP\9ePdg1n5Emnn:5YYk$UZt=Z58`(a_ZL/Z_%rDF>r]I]`
%+($_sr!91O=+R&4e3`I^FK>t!O6cmFU]c)VceF`Q#^fC*D+$*US5tjK`1Z:?&g&$cl0)c;`2B7RTOpdH?/%QG@pri7QKHOTAU*W^
%[C!ei3Q6Nt\g+&fKbO17j0q3]%UNb5h:pOken01F?OP8XL3a&_30t;q$*R"K/kZKdL%p,Tlr<lAF#j.fnOn<Oq"lSn#7;8ihDX$u
%>]!cl%^<eBW.bhL_cB68,deZ!8EV`3TH0]H4Xei'OZVCQ:utEXHY$EZ,(G6'EO5=.pnC;^%)6hkk25f@;.SAp.b\%oL2D1&Hl%kF
%H71$Q):B8DXJRX[8QF::3p3iPiY)-a'@oep&#$'YE^2tmNrnOW$."oDR:N\0;?b%4(PJFcGEbug%r.uMf>@SK<=P`\:B&1Hdu;?[
%.Q(.9l?ZlQ!/<54j5ONG;Gf:m$WMfD9H86e+Ee;$Qh/9MqKGNn3r?cD2-,'/a4"<?7\P0UJ5n>3qlo@II82\.8o7HCQ<h$Fl2inB
%*BXqHQumkUSr8aA3l"E;C$#DaOcFZ].bemjGEur0$77B9W(.Q%*cAaJ[N.@FhRD)s8b,JBZPnjaCs[s/3\gSWb!f5iB_i)pLds",
%[!/U_bCu,3[Nle,'O.k`H]Jahq\[C@)Y0/+Q=63s<Tc\b(@:Q7dc:X^ZCO):F'%,@(O@%<Q6K`ZP'QNt3LsCOL`[nY46;Z<nsN?Z
%P'NTI_o"DkFTbokaE+Pd@^k\QU5-[55O#/VE<fJ$*p'H?[Z%#k*EMqN?O)/u3D[8?A!gT5b)i>s<#1<K3K;_1YbZo'CM\cC)X<*f
%;G'>f.>WeWdN!GBNlQJ*:3kKK/_R5UZS"Ic[i@.h&[Sd/1gdF<)tq/',.?#9(nPb*)2su!6rQ:L)@XN`2)1,H=MS,1N2cTrX.FWY
%-jkj@F6`@tLB92cWne1'K'=;5V%mlQc([&&a*#i?bFX1KrIcl-g$HmC,qfksatXBK%Yon*h.6T5`qgmMZp2<^7(T7_&1e&pn0`s9
%N(?JkFR'es$^A_.l,,Q@O!"5TP8^ip>l2Tb^^g0f>.7\9`Y;.l(KMToC`7<DYY#$31^k$RHdXLm,.eanA<PV770*'tgfnZ"?);Ph
%Ts[ok?&)X_]?,T]:4DQkiZ(/P,)7,U3.3e^55iur,'<hTCYuZa&VCrMLZR1_;>RE8SfABbh(te3,=b-LCR1V[9,"Xf%b':T<WI'7
%Lnse0VHYTbk;;5U5'jT1,`^m!@n$1)MQjYDfu?C]<"I>KMQgt5!?`oVh*aBlPAbm4c:#=\Tf")uLQu'^K"q"Vef&-%DQUWf.]6u*
%]'G^ijnH,?l]g?&.a(POibH9H#mQ'06XH%[4arMG\=3>I]B-QQ0=O:q(=,h(PqTIcle7KffuXHXX3Z4WrZj134(?d!'q>J(k*TZ&
%r1e5"3\i@Wk,kTcj6^fZ(P=&e7fC-eiqNMS1te+Ad7ET%eQ,*b3r-#?\mAj6+:QGj&MMaRbe@T-`2ehh?q9&u?4SjMnS@$o4%]D:
%XVq$oT@Gn8Ch.;pXn$9a:5HUu#[(g/V]Y-4:Kk[5Ij%HJ0+?`b!k,qGG'HAa[he^=T3";RA6gU%QW(/pU%d"kgPIi5'MhHaieM#%
%[Zcm_,nFhWgL$E]_!o%L7j$e5XNmTN""odB9ak1HVTC_`:rJL)D3MO.[<Y/9c.X048q'%oTl^]2duFni]!IRIc\%pgQc&D^2FrUE
%rmeoIjEK;d3PbNI^M]n+/RV+*,+Ch#Z:iT+S66ab;iYs0N'5VWL8'f=?tDq,lM.8u3O]Xf[2a[;lputOEZDYj.IfR-n"&*>d'R>c
%K4[?5*;@_rn&NqG,[O-'$`3@HB.E)(O$:h03F$)oh+>[iV_a_5P;I<_<BAnl<QW0Ci5dg^V;N4k'_M=2679&;<l$_<VU0$njOtbg
%4oP*n#s:%U54`3)hAlMef"]BOrVFD<B&7J^/;"JnZW`Ood)bLKVUS%?&NVDdP*KMOAQ')q?Wa#lMl7C'5Hl:3=j[[B@I"6L]XKpR
%'n32fV2GZ0Mh2/#*5t0MAXCb#l]H2N^(;`n/=]eFred5IEM6hp2YD(Z`Dk&iWuqFfm$oBu7@_8tSmP^A(pYK%cb!5$l0.<ITmL/>
%o%V('.^52]fA"&rRVE&ePVC]'l3eM9$&LMVS\_%/1ek8CTSX?eC3&Nn:aAch-#Q^>$*TC:f&dq<iHsenJ+@Z-[Lp,1Ff=MHGk';5
%KH1qGh<m.Z$$.E36RWY-VNcL;+V'-,$@cqrBuORD=gQI))3)=3khmdR5dBY#\8(aRpD,c`kc0lCr04\!))Q4/goG=AEu[ar>Hd)T
%lc0V93?8'5G0LnF>\`TC];!C_)kud]#'P<P/XJM;aFm@.U)6frQF$^,c8WU$0#,eR_q?S#_<\+n6)J>8%@^_#G,,L(l%?ZWo=-6R
%<C<DZBM'I8G?+nuS+*u?htgqd,,A-\?1RYP%".""EF)Js2OjM=3=g7uRNMZ1#&=To&NJ*>U;Nik&,%dUKV@=hV$^cHF0G%aY"oh]
%qj^mlCFI>*;HJP@GSK_hhHjleTW,rjguTZtkF([P=?'rcQu6Y-69rQ4JJ0Fnc\Y\60[Z?#A>O#_2,:6SHXCpGRpuJ_'U<4p>K1.5
%iGEe(5gKP5SHF[6q+j8!8h\TAU,_(Sl\\;bZAWWAjSE$oW:iMCJU>4@POD5HhrLVGCtSq/+bl[M!<^eL+dZArEBUk_,6V80/5!k(
%'\R.K@c*C'VeG@8FAU0!\)rg$iL#)SAM4E7ndeO-l(*kA![,(,E4n5)Ji%@@NfeHq+-H82-(8MtJs;tcm^;9fKX@'AN/T3i2_@_S
%dA7Z-N'hYSp6/AWaT*!-Ng@%:L&d[5OfQ]QYM\hj=#HM*XV'.uA.*,1RN2rUN3NqP0FU9]`>N-tN?U#D!:l\ss4I8fe22F:WcoKl
%nC"C]n>+/LnLRQI[WWA2+Tn+\oV<]=$T-?`Z6k5SHr<qZ#WQED\s.@`lH\&SXST?],@aeV4%]%sP$:R++=;`=^tG1$A*<BIhq&`S
%34SfXLVog!g[-gm7@1?(7)$^+2BPrre<C'=f3qPR_D8"(M'O_%'(1F&+q#2X`uKAIVuVe*mEENnd&k2Qn#(K9(N95(P@S!tfN/jq
%EaB[4KuCndBYEV>U9uMfhclna!8o0),8,iM>EfZ6.$XrBMQ+/Dl8\$)YIW5NY=`N$24%N.acEH4D_f>DBjNrJj`g,+AA\KFN80:H
%8P:0E1fD8TZiTauM`?1e/1T%XbWW6t6;\?ZM&7RE(mRm92eZsK/V5ik3:h]%_k5=;SV>2uLFPUq]mAWZZl/0ePOl8",bnqg[e`iX
%cc6FHJAG7eGKPIdVeT'^B,9Ee)-R=E$=R6PEtor,>>Bij-Y5.)gmnQ@QlJ%TlWf".@qoT'7Qh#hMLn"(oD<]g:a'i"GD(?-X0q[m
%8iM\V,6HsdZ!`np;\&9*ee9;W$Am[WZ2O7V9'h=DDrPj*_;Zrd`NaQ=5M[u.;\uT]8B43kjIP0dM,?I+Y$(Ml]*SPE3O7Al)WGF)
%JN5?:CRCiHh@Oi+_[%:>2UdK?(ZNr`((=oh&?ebW>N06u(&\gQP('S,Ln(mp^i>#Y'qJ?m5#U%X!SaaO$C`5I7n;WF#TIX]/=J[:
%V,'CdW[dT0\Y>63DQ(SshN1fNk]i\/NG3&?J'RC-PcVeRkNE!PO8614a0,g0p<^p"msdl)?41\$PHV/L<%!-/+(%5Ca7U)T0iHXn
%J]XdZ,+Fm>co[D?BW]8:$"L74LM_,u"4N'ig6R_T'du;ViWAd.R?%%Nr:N%>W,;t)M)++U./VMfPa'JpPm!YFMD=*Z=D\=`Y"8Pq
%)Ig.*ZBl>6<of_<RbTEi(Ind0>Gp_1qB@_9X$Zq=E\Vi$3:X#4h]Bb]lJqloJN$!jm)%^(?JTU&=;Yp+ga6.Hj+Fl)BF1/?KC[F;
%`7]lXh#qPM2,P[$,ViGq.@cJLY*`!;]IHe0_>6Zf=KSfj#5h(MXVQ%RIIA'3Z'8b!kT`_9Y91YrG#iD[I,;Ocm%e;:iHKF7O/o;@
%Ra-,.W$a9E3G]:nqtck!)Rn;"O#t@!iF`#7a6u*GU^bC.l9S<bOXD0uH1Jma#?j_Fdo0cD%jKCK'9OJ4OMNL^WOQ2tT<)Z@%t#Mg
%ob?U&j7L#;-6U#R\JBHY*cIdkM3Sa/![AGd%MJhV8_LZ\V>r'g%]%ik`!1o$CRpEY;$U*a:\p/(^#%8u10-q$h.p(69i96_A+&DC
%MtE1E^%dUec"9lliB3u$c5WYq$.$iD->%:n-AGWca74H0@2Td194&cO\ibRV,85Ud]`UsW%&P///^niMSXPu]9d@Bl9eGSq!'8M$
%8KM_J!;>cV9Pm`c[=FX,bJL`G]pHimd8^1ToN26R#_qJOHfSfjB12[DC(:sNk4_LnE[>cE,d[).$"!QPpPPYuD^,G].]k,5F2AF\
%UoSqmPlW2$nok\GqukdoL^:l4\mFWi;oM=U"C2%'W#7"j+TdMGJ.S)9(0))M5Y5:GMf<Ee>Qfmh3hk]d"M)SpY('s.9-r-E$#?oB
%<.Yp,8THsJ&rTg/e`a;?n,2]Y@Iu_U9S$L[Af3$e0Cq)%^eQ1p"(@Z0HntJa5R#At-`+J+E[WJ2B)V$>*,\HVn14f+'aWtPd/Sf#
%b9Yo`F]JL7W%c4:VjQac!>$n]%Gu,,rsl0HV_UZTP3St1@!Ni>27B`cpdGN5rWX/3g]CJV">^>47.4*j`i7q*3HQeX]NPN>%tj6q
%.0rmUUt;Ns',JrPQ'=oc)5ol44R%L-'DJ<?]_me.WP<=9fHut_NMD1?S?29s!-1qc]c3*_r:=LB(C:^S_!D5i,EXb%VisfMWok6O
%WjEajQ@X&d'P%q-19-EI2VJ9LXb<C*]`Y1^e]3rpF>Z\t9@YLbF1FY47Va<O9/tT_Mol0j9NB%iaYlsVH8uM$k[CfHLfo8G0-?'6
%G8N\J\o<[\p]nl"2=2GZ.T&TLRAs:Qe^u_a.fsQd[C8fIk%O%4LELF5.M3N).M%%G!1&p&[(ZMca%EE!04!'Q*m:HVBp4Do!)opR
%etT_kQ]!s7cMLA,0<IuGUX5q>cPH:&lAW#SPS#OR4&mF&QPLPE@^+e!*.Di^mBXI9i5d+@p!usAo8?gl\RZG%>ZN%gkMr!DA4)%9
%`=6kl,^fmo*N5#.MZ-N"(MH^X'jEB,V0>D%R/D&i=UO)C'kQXVL!6(b7Pu-ESQ`OF#_/LD2)[tM@\OT@p3;+2GZXKJ@DB"!>3eMX
%7*GZ]B:J%9gG/0!"p:!^"kX,6Pu>gI;h.6S(0d2.a3Uk;Qthm3?dhTc&4r_*V<GC=@)-g'9PE*8@3n.)"ldcH?Q1kPs$(,4IsJf$
%\j)"#`;+c5&"rBNg:\]!V,k0p.^TMUN1gt#DJ,/M+a*fD>_a$20G,/=.G)E,gE)Sa'=G^/$iO++m1a$[Y1+*L_+-?j%h,*8pkuY.
%1&u4Dp0<HtQ;%LN<n5+;78s[K`8Q-(C88rj_b3#0#"sbe+3]@2=oU(kfc8j*446JJK4q3.__"D'[WLLILf7*'?5qBJ%^^/KguCF>
%&b(a:ZmH584QMrT/mo[NdVB"c2C0hOnVG57ru%Bupo^Z)9W'hB,P#!><:\s-59[1PD$_=&c8omm`g:7E/>b&RVE;W$=Ms6E$ai*a
%3i+PF1C-UVRURn;"J;0.EB"ab9o6]26YGSa'm6ZMXS`gb@9[lB-USRfLQst_Pf;U3Q0QN2f#2^HOgQ^N;92Zn"]XkE3.8mCK"3(D
%'W:HnC$ZJ_Q_U&`0E7j:5/-@(@^6NmiKI5;/%4kS@PmGG"7D#k7'<eb,r#1C5rAYl(b*8C9;(OhkDq/koHc!2Q=8n&hSA[I!rL/"
%%8m=2Ar(?6bdXU@'5Op5?bc1/G0)h9YTSiiW<tSLYn\7\Rs!/sLC%XZd*bAM82ei\PS?!P411K<\Se_KgRmds^bpFIeW37l>>H%a
%eYXcgZPKle,U.7??U[p/,LhhTi6f#RDEiF*p[-G%iiMtg#?=4\[RCJ-_X6IcJ]=V"Q-)!"Hrai[6#"\'M.(jbPt(\JjD#SO[i4M=
%#u[']:;=[R=bLFe-pefW8diN6(_<"3_[^n2>/8'i<Mi;#cLI*'=&ia?BeA*J,9m`(l2f98NsF[q[@9s4Xla\bjMUtYQ>!Ut*'9NK
%)@@[g1rUJS+'!\]G]%_u)^XCTaLFgj3NRnToNuS]9$.4<W'_AI\Ae!l]\"kJIK))aXRHNhV13IX,@sB]n293UL"h.;bahuO4d+tn
%$>,E0g.j9a*q_!-F1([K4CqEX^\0A-5(6p,54m]=ooRe]r&>IQA+o0_i+a%O]34X\AE7q^:_>lt_p=.9h)HQ"qX8iV&j3rX<cH@b
%?t/T$9J%bkf*o34h8`=o1Z@poL"4e1/B+^5[0g(^iNk6=bc%8g8HfZ8aq=D^8&4b-.-%^*fG.U=io#(P_XH5(ZIom;#*@e<R7Gds
%Nb*7Vj,Y;M`1`k3c]'aF'][,e'm;s0%5AOENt['O$AQAg>=nWXB+Iu4Mg\=P@8g)^_ZH_2R+\SFYWp?<#sSbP4*6q;)*,ECU`rKY
%$!\(C"dZ:1XAf\(NQiIPdd'1$<3iN4i%.oqd8,nn<LSHk\VeT>f&QM=o/=PcLQGP-ENmMg4Qje,\,)8T!A?TJPVnS8oWu3[=`^67
%_0:FKRAhIO3&eVcFME/10X6Q20MYp).8';!h,HrmPmfE"'7hu:@]A"X_>5c3ehJ/##IY=4;V5/O'bqbAP=>YY)`nK20^[N^`)hr0
%rX>nD3R#Z?%M`I5gch"EK8<#r3Z\rKq;\dMUM/q.qnf]XKRg.'ogL;n(\&]73s#PD:`B'Pk)(V-LP'^iA/iKpA?musO]t)iOhe/n
%;I5LS@/^Xe":ALN2pTjii]LDn#sU\`fb1.6)'_tW]Fo9J(M,ZXQ/Yuo4/,[n&WJUlT2\WXJFQD6I@Lmul3\gi&uoe2KR=-K:.><[
%M3^RN_71-`&h(&Lktn>V?HMTgNN:/lg-(jb5MPD@b9RDos-N2'2/Yf's83p-rN"u\&kQR.JkRLHXe00+nkN$b_ml_B?*.*2IE#EA
%O9<g;Eha&.VkR0+/!XNH:0-:;Ot#B,;EXRgo$@uWL1=n)7)V.8XaDUcFDDE0A3f.H]^[Yk`m:1iQ6:$KSVeKK>+ZFY\Z@]pY,l#:
%)<,m9<#uNR+-nRZgu)`9R?'d<M6:@JAb"DkY&TaJ^3/!YR`K/7>D0dGR<AqHNCX4l8C5H<1Q^p50OBn(KMk,+1Z?2Eg+EjX$=4Qm
%lri<1!\>VS3.>Wnfu>qrL#OL<&.WQtG?%cfY<MWMKD*M<fBb.d96_&UefLs74!6tMUIe%ll))&%1_;5Uj&j?]k]=>IaGofh8?i^E
%=P:FT'U)(KbCdRX=K+d_"`s_q1'A];VF?^T$C9olZ^ekMh&F>C%AeEW%M@=6?84+Jp:Y=rM@-(o[i6'J0f;6sVbA\b8a/+@D/6R=
%]9cYT)X']X<5[kXXE%D^Ya;D)Np0(85o`#1Rj.4O0]HJ*:fb\BT]f#ZCVIDFLX!S8n,2e77fHj?)6/!.`o?94W=q,M!s0jc1d!"L
%O1)%*"=an4kE+'.3'Lo]!-ZCS%&7003o[pRW57^JdmgGW1(c?f:9Ea`;]bd_js\aGOQQEg';Z#Je.<7H70`"6&i;9GLc&G&B2f,f
%<-S-:1C)/j7R7@@j*,Ub'k%AEP6NLT9S&,L"a^H8Np@<P.hHs,b'7gAs"`_)")054"h7/U*]7=2i&n7^OMi)e6:W7m&iZmfa7cf#
%L#iW+CNd($oZ<W1^Hne9^u&>9M$Tq+\#(>LB%Sl4)3gL8a(qgqlt+EW,SEa+R1=(cfETo48YuP<3!1o$RVKQ-,-Gtm-::]H,p[k(
%h7X\/1_n(5V!lF7r\DLda1K5k%B\GkbF4^'W00^4^nef>4]6qr8uf+2,'f8gki8Ar:*_*^.i^71=&6:lFm4Fs_^rJj$C$#K+p$2l
%D>cMK!1hpQ5GZ,B+YCf>;>;HY#9eS+ITlNYCQ<A19+/EO&n\LmJ-$UPA:Ado\SpN&nArdFrb>]f[s>l9k;c>`%%O&a*>I-X]'J(m
%OdF6KGZc?nQl)Q7dekEcMlA`_OGa?]_1]hDm9j^DfOgOfg;1R%%=L`q-qg!5PnQF(@GEKI_%DER!XE8/9\p6%,!"D2#]'$43Ob/G
%1Uj<1_*Bg,1kSkH'a^_1[I$58:R$.!aW-LX!Z`;MdYr$O-HQr[)Nm8Y]=Ye"bj&K(9W(F_PT;=7<^]Bf.?@]X$*o_u?;&dB'Q?9E
%ZA]\iTegVBCc\d;AkQF?kt%do^sN9m(n9`iY\=ER_]pH2B/Urk88l"+Hk835"@lK%(+%_APH`+4M(KIskI$D^X;!E,Ai46*9^0fI
%[(;f!/F9aCelhcsgW<eL#Z8,3A2:mfgA(4kpie9q2dPCWKK&gQ(dftTh^A;c;uL!T$A4T0b/6sjG(=lOZa#ln=CC,8%V?2?C!N3V
%b&"h:75f"E]O2nd[S=A5:aY_[o6)_3>I+'5!p.$C<L(PL,mTWSNX:A[D[#d4F-V?<\eo[BneUZ:b<4M28d%1Dlg-q7RLtcna/j,_
%<l4+sHr'cf:7r\E*b!521W[OtC\b&b^%8f`bD"om>lP:3@Vg@(0oc`4^*tsXKUn;olo"<hCs_54MP$gi_glU/rF"/6gTFZNfuMl9
%*=:k@3qQ">$cT<GdC^!m/VkBMCF_S;)UFj=XB]RpS^;r>+8a4ufD!?%O?kA:B"sRa_;=HdRR,^5n<.8-#$D%Ul:uJt.+U`$'5V&a
%cVM[-"N%I]NZQFRg/Qk$V(1RT!6W9U=^fj<(`K38^jlI=SS6kV@>kJ!+N6<O-:tdA,RSj9``9I<'T=IeGkJ'3n`3Vu#VpiL>ZWl^
%7#?M(D/jK:`B><+]I[1jS:s\:*B*4SK@FDRfYFJbDECg+"6E/jl)[7X2iuBQ;bCJ"9iZN?2VM@<Qq?+l&Pn"cP&_V8"fa(Sd%"HM
%U`9KLSNb:@SIo^+;.!GCFeag!<HON?RK15DWf-BDNm\D$Q'*CM/1hR)!_Bt!NHn8[[OY!);A:2b`r]=fKR*tK-3OGF.,%n"0rZ^!
%%?laiD>;aAUDQ!9,lfpoF_ZXW=C`DFFWDCL"S,e+7aGL2;Bb;HfY6fRHXfG=p0%92A8,"RTWB<Y['bKrUt=g:]9R>POGg%kSj_;J
%S:Y#nL[G3MZj[VO.tg2\@CkW*D'B2e%g<B.9$Xd*>RYa85:Y'N7L4II?4_A3VW@WIk`.De;d0J$?<t1d3W\Je_BM:IVid`dCTD3S
%B!BIDa\@W!L,+e9>3dqkI)<ZbdhX_N\JYBKII*u+mJQe-EL9Mf;Y?/Z*J_J&,6gbT.ho,5.?U>jm)11']iae/Yu>99+W[fJRLl^X
%=_=m=2u9VLBRnpA&l2K%(Fda4`(,QuL)!rlR#S^ocO0*DPrqIP-V7Iq]3,WN!G3$\bd?cf&be2#E3DJ"c(QG'GG!or$[TQM[,:d[
%:[.NOo'h_"ENP$fT?Dd&Xh?.FQW\tAV!I/b!83gJqq<(&3[MD#M4l7Zarr;hh#XJP%9:1mFq4phk$9_Ba/Or78?uco[U:T$F!N>`
%\0`CM,G@2g:jb<a^2tTTCSm?GAHZ2mQUn7f>7q&\'^ELkA5b-[>+h8tr4,`hkg7'R(3/M'q,#1+:R8q2MMP!+*&Zqk;hr$;HGj2^
%2aK1mb"=5GD\r$2PV:;@aVAVI@Bo6qf@GW;80idD8+ts/A!D5;!:3]MIl'+]jZ[7mlRlrj'HJli$9AjtIR3Nb;(mqfAW'a$P+e94
%"aT?!`q)n&3(89qVn1Yp=_bqsPRtL/Z)9$?NtmgL^Df&,O>LXbO?-F@pT8lE[DGIF`K.WSK@3)"I"I;hWO7n9'uWb(raj`GZ^H%E
%kps0s&Mu)qMKn+,>_=KGpJ3'bI@PbYhIHC^QDe=lFO+fM6l\slJ'p`2ki.Xn?Fg,mID%S`GH[lD1srgT<_>F\C!d!)[&lCFKM;3L
%jKQ&B=A,(KWYo#P0NBElU97^e6:]O0"9BQnNKo:3(JK+dkc(*]%NrhB?G_EE88DDg!b4'fBnV"W@3-q_o:\f4N<P\c1+E%:a2X@X
%4Hh(>O#/=Bc2BBuGS$]@i?ZA5Xn=AZRc>;1$D6Vl^KU)<\"$iTdjm`HJYeOZPsOS4#bLrq%I-3un*3?_r%1WFAPLQ`)4[%h1#m)e
%XX2do`i*jW:+S\ITA1^:CY$rE]u]L3:>E'nTFe[K*F0sg(-\LGgZ!-$]Zr&Nc,BL=r+pl[lVFljHsuo-s+gS?HA&X6'N!iV"S<ir
%bL<f+#odSqr<S3r>)'\/09N<Qe&H8rl'F>Q_k1?%]\;eKi0W6mGlFAC'#gY\$mqX)Z3u+M.$^0id]`d@:I?G%*38:ffqS?Ioa<89
%."bcQS7JfQlpLEOd5;;P*Yab^r[Uoa`0,J.kL33^p5mH#)GDq.8J[4fpS*A%eg+S8f$::1hJu!fYLTq=87a0d-X(S[(2fpS"LfmH
%^=gFM!S1Qb9ht%jl5f5@D+jMpPH6*P)0V,oP3e>PQL[#@eckg[9fg^TioD1DmuRm0?`>d-]p,Ib0e.%POkU1Hr+f64--ta)ARqbV
%R#uBk\up&dAOK".;bt*ljc@`!X^NV&?uYpd3(%=tqGCk_g'Q^/q37VZ*Og3^BIkimkh?q<bnd:ME;X`la%7-?\eL:14^*W/,fq!_
%VCI:%(cpI`#\",d7d7U!EX0Eh,\o/2*fu:4Bm*d2,K?3n#jF%"ZKM_S[SVnTjE'3]ebYgq&lu<c$>L]-?SbZ`F653/A2+HX=RjDf
%CfG>Vjt?a*87l0foX]q$*B:EsMhR#MllILrah$&+(CK+D7dNhQ,J4IcP4<V%8K*3Mq<2!XR=21f+buq14.a.t@=@E@QgLZ<]:#t_
%9"K#/V<_#$*q"dE7HKKAoYrD]=g8G4pU9_id+%9.j4??841W\Sa2^[q<9nrf-P36GfXaYeL?"P3&!Cq<GXr;3q,pc^!]H&1m!QK!
%qO^*>"HH9W`=0309f3B$DE)[=elW#cE\eqg=L7^BP3(G+1WBX)8]8GbUp:.X7(sBTE"R)-VLg<^/+6k;*lonuWDn;$lS'aoK<ECG
%FE<HnO8nM0Lm&6f,4ZV06Lc1sBKP&R`-usAS:&j>mDrHeK:#6ib<6^d>.sG`=_l)^FZ"1(kHHFW.3=G5Q6aISQH>-'2@U0+)*W22
%T87;"?!W!PO1#aS/DS>A[Cr'4K\qhqYplQSJ7qnY.)fJ^a=rPJ1ffa?FmA6QE'=#N\YeYJ'k#liEKP;G!*_rCb$AJ^[sD"YAtPYF
%Bl*H^e'N^$[q$@4UeKq&VHHBUIta-3kS4[Dj7$kkh.m-D0%8bBirQDV+(q'(?C^LG7WAQHa+p!sAKR)/Zg[b<2FEcrT0$%9KibDc
%F)gHhC'#6s!!N=KON4"nZDhha>#6\=;\.7h;SjRV1u4d8m<KaWeUNh.OO_-M%JEao3FW95>@-UVf[t&Z+d1NTP^Cu$#(;agk;9Ll
%!N/o>oai?@\0P"H)Ot_$@$Y,qN9C:*!=XY!LD&`dYMPF_lWW4X9_TU=c:I^\#8L0Z=p0q?bhGdM1u4C5cCEaIAFCs#07cqsn%?Ll
%6b[..SLFq6Z>"'di163nXt<CQ^@N37BR.(uh9WWUBgZfUb*4]NHBkb@=5"YNirI&(IAid=Cj;2uo0RJF<Di)Jr-m&<'Fsk"/W.@e
%q,G!ik$hYr6@qHsq;0G-8Zmo:)=ec:jjuIL7M-@npLbM9Y#CW32r1\'_R-pWWH+`t:3NE^[Co0a6Z-pSpYaHQ3Mt=>\IOlU4[^MC
%rAX<YR@J9UG=+<n`J)bZ8TWB@dmdQ=V(1?8(_:gteIn?Ymb-S),Vm0]63!$@3QKXjLb=+7fM1ncR+:`,<6goDX+)b0=@R-KNU,GU
%2k3M.0=VfSc7:KAM/&:kL11Uq%1@7P_VBlNPKmDGB/gG]oV9J&ZC2;LC=@`n3%)k`8A(s)+in.A\htph[9c'6<:"&_m*R*m=<,*W
%;S>XpYHW,-hs80dNLjsgmV_\^ImY]3O$[/#>.2P9[q$QN[s#''6)[qMJ5^P_]/b.\L"LUl8$OM^_P22leZ4&f<]*L4b'!#)Vf%QL
%]j:%b0PX'UH%S39VLftY4^tg\p;>k2le@=Mm*J(m51@s*LF!7`S]?hXmhOrIS-@;3&'qr+Y!>%E38f>Yc#+7eXHSAN.noM5FWJ5,
%9_MDUdD^J[f%qsDlT=eX-"]a7/QVso!cgW'VWL_<A9q^\0&7nR0G/ALm]lX_WTgQLU+^kP:/Q1$bD`19A3alUAg53>0QJu`Qp735
%4"-4hOk(RRaPk%"5;lGsA4bmop>JTp\,0n/UieUn?kMKm1]/Wk>+dZU>CO+G&'JjkZUA;g$uP]K^\ScQ&!FBDG3$Yk':[j"pp!m2
%MEEbmfKSL`&=0^dpoVje=d><^5ZiA+3n:Xg&`4+VmEpTNe]5P1kIo5#hCUA8U.VOnSQl_^Q,`JBT1pZQC;8TZG)au)bgWTh:a[Wq
%]jD_`\$oOX'Fh?p<I_.s\B"<aeh(doiqF`GJ&F.`?FF[lT+!PE>4K0P9Ht"f*^7eo01Xrh@@\t:QqdtK5r*<u!p&"QQ5"7Ainu"(
%Kd5giR]l4(G`X'X^T:U%am2Nnej3jCcWYD^.-XNFZ;f4.5\0$)(&dpVWE[.6[a/]jF89cKoPVSqmnW;Q=c'ZF24RW;^Mh*c[[b4I
%;Gc<qK^_PRZ_sl^GQUNL*Jb*+VFoT9OnmgX,Zi>BL]0#-Lt&Cm)kCNo\)#8jGBl*0TAJ),I\q8dULSC.`'h-AnlFu'3FGEJj/WpJ
%m8C#]`+2$`5tHP'V>O:)$TdiWH(+,l^cm;.;3?lsL29c+`Xo_gCHKM`!)BEA6t<g?@\'/RjAGaB`fC_7R%#ZnequnL'-LJiVaT`R
%K@-'_4D^%?Y0;JY4:1HTqttPHpfbF+qURb_OjL.ej:$;j<#(TU"[K0m3[d8pZJ]F0=T:>Da<<GFfMc0Y7ft\:"a^#%&b3*j$JkA%
%M7H>(@<?=:lCsZFjXdojq4f-(_rFXkNVt-fU=]^3E%"i5n3NaVU9c)$3t7n8[&OYJ6,bU2rO\gm7^*MSR>[W($0X7O[PKq"dl,On
%0+HdkZnm<,#b8<F:&FeN`K^A`I3o;u+/mKk7[>T9TecEg63PQYG\H9',jMu8[p'I:lR_$("DVe%GuA+e'V5Cs+Sq+'RrVHLZmA./
%ks(ok-cBA.S'Xf-O?bRuLf-tA?11e-='sq1Xr29c1'>LHbe:'s4413J-rm+rn&*10NN0b2dK!HAp'u(2Wup"rQ;+RuKd*mWF*BUM
%@b/r1OM-:13ZLPpZHf%7Rp,Ds,,UCW0?9k[92."kZGJ<l"`[p8.bdg_:#=h-bYWA?XeT)hG7o;h2t#.pY<BjIeY97L<B'T<#Vc,8
%,H>ltLZ<Bm>$5V6AN.;ZXsp`VdRrC@Z<_3u8lMB$OHPEu5t,K',:"R%3$el?0[^9e*ItsgJ`0iCE+s#S?s$!=E',uWr'4,s-\jri
%0>VUVhKm*YN_f@FcQ8,1^h\,?QK;mjo1^XYkj=8"Z%lo,>HF&PgW>LV8#rkUX]ebGG14Z,\%_4*\)D+fd$8NG3t`j75@B#]mrPkE
%*$<qR:VL'(0T<._c*$S>UFo&]Whk-r8g/+00ji/]Un/J-PGX[:DcQi<Ju(m]s#O\V&1fh&WITLsr9)%[S[I"X(XOUJg*nOsQ%m.h
%$O&*Y_ip.0ml:hT%DE"/?mrdGhNYp<eiDNTjSri@BPsO4N0^&1De;"$B\hLXWE"C)AHn\[l9'==dbCl_$1_$\:iBr_,hKT2G'7ee
%:(ULW2K$2gPJ:UlC$p5;Ve@7,q;]N0F)N7I2R6&bNLeiQO]mOd@YM&61j<1QKe7\s\T`g,p',$"h7\Nt-c9rg,\)AEA[#!P$":*(
%cFpjAaNq(T-Ra-_Lu0ri.M1kQZQOt^$2UU*:AhPTct\4U=g\+fHf)G&$S)^s,4Z@4LD5EM)l^,&OiT(nSIRiVg=u"p'(MC;Q^:en
%"BY-FHnR>h-_^sVVTKl+SlG:Sn!1V7SR>T6WpC9f<r'5I$(Vff19/kC8B&IW1.>j%?[h6$pE\s)*F6e8BDS^\Sg0\g;#S8.*J(p]
%.7Ag%-c.QO3EH;Hf+kRg7BnND>/]nki\:dAFbaQ^UW.%5W-!iGD4\i^4&%FrO<Wo?C9;Ife//)53[;P2BrKt==OtHg`5'd<f=lHQ
%K)2KmIACEp9&M36eY5UO;M;;*e>!DJJ)6[HOmB7i,g2=MP"glWX3!0#;'Tu6&kdIINa%9*bS8"gX\3OR?(EMsH&jq&qX/Qrj5Wg^
%L;TAYLnkmjn^LHTSur1D/A='O[3["nL+muEI_\!C5'MeV8od;6o8;q=G$FLI[qM3E:0bs,kgnP7kGfkjmP#9iCg*`t!CD&e5!NS4
%Ch-nfIKBMAlsrfLG%&b'e1'(<S6o;o&"58n*DL)YOOP[3EATW&:mMXN&qg$Q/Trj\CJIs/jEmd6CS62MGUF/)3_[K<ji@)]9I_bV
%ChfYQ[7OH!`nHA4W&;;jbr2-+D"4dJWq2]6Nqc_Ss4<]'f2p^a5\qOn.mR;5Lcp,B':/tU%`:DNV@^LOk$)h8o[8jYRDMBM]!/c)
%ZGg_(C3hlsD[nq$`bWG>]keI@biSYO.AIu7CbIAAe1i\q7OBQk8>7l*+?5eFkHnTL'Ou9W[C**+7Vb'Y;;U+#A$a8JVi[(<3kHoX
%dFp\D2M!8YqR%m<jA9.JXiX/59O;hJP'TM+GP:or.Mtlop_.CL/Y9P.p(q`r%R-/"9DXH:Z$*dLArWe,j,N5(d9:s,X)TfC\fUbD
%m6P9=rEC!&i+oSUSTD$i<!,BpQQ5U^7O')LDIU20mamJGp[WdC838b?%X32MjSn+l*@42Y+G;?%<]FZp$];-ga[#+!HsQ2.W.M"!
%")^PIUsUl;`fb+:fL&S>i%6!2='3L+H0M(]?;=X%U5Q=:HnpQjbE/_gT,d%.[G=l&*V$uuR[E5^m,L#0Yu<QYZu6f"m5d[(K=F9s
%<bj[k<lAC0V\<VTh'<r8!CCJh$6UopOV,AHRmqa>2^oqi(;?R@f4K//$D$?kN7sPk>Am6DYAQ%k<]5mHPofH5V>FgZEcVAeeDuBi
%Hg^[ujE'5F:D>]ngN*7=F_u@B/b[fP/K<#H^NMLh5V0n!VBKbI!p>5Z3[+q1r#Q"r\]VEofLtGf4JsF%ATcg$`Efk#XUUcg;WX3W
%EUM8%8_RZ^EcUL(bkA$H=#rU"1o;p"9K9gfko*#f930%2KL<P5Utk"][ZbVEL'AG4Dj76ep>JS5]f?]rWF)^e)s"d_B[V9sE1cp,
%mL5a_F&Wr`R8r9<U!E<T*m"4rG7hR&_:Y@t+@4D@:CcB,(J>eoP'T#6aE;,#[93jPEg"rNKIM%dWjTDAQpq0TSEOk/"&3+Rc_42"
%7H1>5r)M9@Ad#A8'UHeghRYXT\kSHU:\s=HcO!SNe.IMV5.)X?koD!N5:Q5]#Z3Mb:MQ/*W$jI)$E6sk-NUg'aVj;A*$AY!'XuB<
%D:5RND>R4OgAZe:]tdd5Vk5-f(9[39:UkMl6'miFS=.;<U+$Ph>T.Gf2"a,S[Ho3UWc<N(71D;!bB4ob0^o:-rUeqKJI"W9Ebk-0
%SAgm96#aOW[(ZZ;@_r:,3!0+A!m`m8HDD0GjE]JK]`q4BAKdjbd:Y:Qmk6,K,*iMW72l+m]E(]Po"sk^JtQEn"f?7SGAof.oi.^:
%2/bLQ=GBgAg?`c5Tn'%cJqBUuEm,cm)7COJG4epsMfQ;$2c,Sl<bkVobCBs3Y=F!,iuA$F,am7>DdT\U9ehn=Wim)t_"pYL>+7@n
%[mS%@*Z3)7"15XsfE+%3F.f9IF,bQ6F!.uD.$IBc+LcR:JJOY"7j*1R4`p#r(N2W>+(+f6HN\M;M:J)aHXui&P6ADA/k7R<X"V5g
%W^Y8W1ehI>-Nsgh=0\V5hLL]dE8?^t@"%+ObOlM;1FZnF;3l\r]7rqL*ae[INQ)+2oXCch:Bao6V4+fIb'D;F=6e&B!Rlm_E(Omd
%S*(-3A+Bpt;X#5'W+L8kTg[V#9<V)qQQ"1-3#o%)lEdlY`u-S=fq%e`q9&0]-cj]Djtf2jX%bH2ds:CMp%BCGrA8qHGDg=dQ#><N
%=eKI+*kfBaeo!]]_e&"0oCQ$/k8cES!LIFjF>;def_:YVr:n9MgVSV0cLUXR-7"]!@;o$s3,[o$P-J"Qj)U$C3_FQoUfYaR8XttR
%h5:g.TruNqh+Mr*r)GTaP$4C4!6%6^4E]b-!krLUhEA3l96e)tB/(\6TlrF-#`3M$<3*GuW.N`U9m&lS[T+:*TOU&rQiaj,7pUS`
%XR:WnL'I]u/RH!^!5X_10mJO5o%1=$Ks,gum6bn=l$aL#?U(lJkLhI'(t\0ijeY+U-O,g4X#?"Y<b`huP;RQ^:'oQ\,>5&aj9T=-
%h)eScJd\W/DWVPM:hcGH[q>mVMb/&[]1(PrF\HRgB-/.e4-!]QnR\B=U5XCf)0"BQl?8?_%i8E6Z"i(KG!)#q<;bGWgLl%C#u.Bg
%NQ03&5dtp_dE7t)^2,]WfiVJOmB8SHm8FF3O`L:&V0]Whl>qWP\e7<@RC\<YOOulu?f_Eu>ZfHF\3kOsn2n0G]ZY-5."_OZ!b0$L
%6L,hQ<!YGGXl+kJI[NU!'2=('[OT^K1mL'AR@@j[?jXc*;c'tFFbmQ:l.2h+GJ7:7>9Ug!Sl8*9'J#*3=T\'f@*:F2,F$cRHAQuJ
%ZjM8+].,a@ID,"+G94WC_Hk&Oi=5,*7EQfPnrr0:',<2I0EjoC#:2n1e_#"5MDB2gJ4>c>e:1FjeaE:r<5LUFjsoE)V$'2]A47-"
%%l2d``7$9;%_4$GKb/sZJ`^WBo2@Uk&28d"ZYA.Slp_47\003'iqA+EX`i9P\POV4QQB0Ti(*=i;?MK3q72ERDf29g:>)6[>nsbE
%plJeZMjGB]HeZgH+lSB.*2+Hp=:.;r?QWSUjaghTKQ5+f>@_Pl5j6p)L:@h17"cnO1"__UjiTiq)Dp%V7L=3b/qW@XaCPr^U8aF:
%!"MYjGV;D=4b?'AE891ldPZd&]pZ9<e#jio%nO(=$6c+?lEEFO?a(Zpc9hK;r4R5CFUj50Ea6,P$E0j#$s'de%o<&eLE$D@md"(j
%TUs#VJ+o#UhuDY"pAb+fJ,GYjrVg`ms62JW\JfqqT76fqn,N!OIfDY4fCsdkmT4o5oC)_UrJ0;1nW3J,n,N.TV[n:Pe+\@k5QCSX
%mm$aGJ,JX4713uo2uNO(s7FY;iO`Iq5CTlOn,~>
%AI9_PrivateDataEnd
